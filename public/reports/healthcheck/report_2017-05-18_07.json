{
  "stats": {
    "suites": 14,
    "tests": 13,
    "passes": 10,
    "pending": 0,
    "failures": 3,
    "start": "2017-05-18T11:33:51.926Z",
    "end": "2017-05-18T11:35:51.655Z",
    "duration": 119729,
    "testsRegistered": 13,
    "passPercent": 76.9,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "warning",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "Project 2 Health Check",
        "suites": [
          {
            "title": "Illegal Operations: ryan, martin, jieun, emily",
            "suites": [],
            "tests": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Illegal Operations: ryan, martin, jieun, emily should render an app home page",
                "timedOut": false,
                "duration": 2411,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "context": "[\n  \"https://illegal-formation.herokuapp.com/\",\n  \"assets/00-Illegal-Operations_2017-05-18_07.png\",\n  \"https://github.com/rrodwell/IllegalOperations\",\n  \"Illegal Operations\",\n  \"ryan, martin, jieun, emily\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {
                  "name": "AssertionError",
                  "actual": "false",
                  "expected": "true",
                  "operator": "==",
                  "message": "Illegal Operations deployment is failed at https://illegal-formation.herokuapp.com/",
                  "generatedMessage": false,
                  "estack": "AssertionError: Illegal Operations deployment is failed at https://illegal-formation.herokuapp.com/\n    at Nightmare.goto.viewport.screenshot.evaluate.then.title (project2.js:114:22)\n    at process._tickCallback (internal/process/next_tick.js:103:7)",
                  "diff": "- false\n+ true\n"
                },
                "isRoot": false,
                "uuid": "b3561743-2289-4ff0-a6f2-262b90fd0b80",
                "parentUUID": "e1d1d274-ffb6-4c0f-b2aa-8ed72d7c914a",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 20000,
            "file": "/project2.js",
            "uuid": "e1d1d274-ffb6-4c0f-b2aa-8ed72d7c914a",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [],
            "failures": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Illegal Operations: ryan, martin, jieun, emily should render an app home page",
                "timedOut": false,
                "duration": 2411,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "context": "[\n  \"https://illegal-formation.herokuapp.com/\",\n  \"assets/00-Illegal-Operations_2017-05-18_07.png\",\n  \"https://github.com/rrodwell/IllegalOperations\",\n  \"Illegal Operations\",\n  \"ryan, martin, jieun, emily\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {
                  "name": "AssertionError",
                  "actual": "false",
                  "expected": "true",
                  "operator": "==",
                  "message": "Illegal Operations deployment is failed at https://illegal-formation.herokuapp.com/",
                  "generatedMessage": false,
                  "estack": "AssertionError: Illegal Operations deployment is failed at https://illegal-formation.herokuapp.com/\n    at Nightmare.goto.viewport.screenshot.evaluate.then.title (project2.js:114:22)\n    at process._tickCallback (internal/process/next_tick.js:103:7)",
                  "diff": "- false\n+ true\n"
                },
                "isRoot": false,
                "uuid": "b3561743-2289-4ff0-a6f2-262b90fd0b80",
                "parentUUID": "e1d1d274-ffb6-4c0f-b2aa-8ed72d7c914a",
                "isHook": false,
                "skipped": false
              }
            ],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 1,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": true,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2411,
            "rootEmpty": false
          },
          {
            "title": "Tab Nabbers: cody, eric g, esterling, ashley",
            "suites": [],
            "tests": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Tab Nabbers: cody, eric g, esterling, ashley should render an app home page",
                "timedOut": false,
                "duration": 8176,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://bootcruit.herokuapp.com\",\n  \"assets/01-Tab-Nabbers_2017-05-18_07.png\",\n  \"https://github.com/accimeesterlin/Tab-Nabbers.git\",\n  \"Tab Nabbers\",\n  \"cody, eric g, esterling, ashley\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "5c3c048f-0703-469c-a88b-d778c2e9a129",
                "parentUUID": "983d94fd-6f0e-448f-9219-058f2a20809f",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 20000,
            "file": "/project2.js",
            "uuid": "983d94fd-6f0e-448f-9219-058f2a20809f",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Tab Nabbers: cody, eric g, esterling, ashley should render an app home page",
                "timedOut": false,
                "duration": 8176,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://bootcruit.herokuapp.com\",\n  \"assets/01-Tab-Nabbers_2017-05-18_07.png\",\n  \"https://github.com/accimeesterlin/Tab-Nabbers.git\",\n  \"Tab Nabbers\",\n  \"cody, eric g, esterling, ashley\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "5c3c048f-0703-469c-a88b-d778c2e9a129",
                "parentUUID": "983d94fd-6f0e-448f-9219-058f2a20809f",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 8176,
            "rootEmpty": false
          },
          {
            "title": "Strict Mode: les, trent, laurie, lisa",
            "suites": [],
            "tests": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Strict Mode: les, trent, laurie, lisa should render an app home page",
                "timedOut": false,
                "duration": 11256,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://warm-brushlands-86718.herokuapp.com/\",\n  \"assets/02-Strict-Mode_2017-05-18_07.png\",\n  \"https://github.com/haginl1/digitalPricing\",\n  \"Strict Mode\",\n  \"les, trent, laurie, lisa\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "8f173dbb-23bb-4d4b-9038-193e99baa0e0",
                "parentUUID": "24700bc4-17f6-480f-8862-154f02bd00f9",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 20000,
            "file": "/project2.js",
            "uuid": "24700bc4-17f6-480f-8862-154f02bd00f9",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Strict Mode: les, trent, laurie, lisa should render an app home page",
                "timedOut": false,
                "duration": 11256,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://warm-brushlands-86718.herokuapp.com/\",\n  \"assets/02-Strict-Mode_2017-05-18_07.png\",\n  \"https://github.com/haginl1/digitalPricing\",\n  \"Strict Mode\",\n  \"les, trent, laurie, lisa\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "8f173dbb-23bb-4d4b-9038-193e99baa0e0",
                "parentUUID": "24700bc4-17f6-480f-8862-154f02bd00f9",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 11256,
            "rootEmpty": false
          },
          {
            "title": "Major Cache: matt, nicole, cashuna, heather",
            "suites": [],
            "tests": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Major Cache: matt, nicole, cashuna, heather should render an app home page",
                "timedOut": false,
                "duration": 11781,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://warm-savannah-50461.herokuapp.com/\",\n  \"assets/03-Major-Cache_2017-05-18_07.png\",\n  \"https://github.com/lockwoni/plant-care\",\n  \"Major Cache\",\n  \"matt, nicole, cashuna, heather\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "971aeb25-53e5-4b60-8cda-946d55f292a6",
                "parentUUID": "986f5dc7-e0d0-498c-b9a3-bab3246f9727",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 20000,
            "file": "/project2.js",
            "uuid": "986f5dc7-e0d0-498c-b9a3-bab3246f9727",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Major Cache: matt, nicole, cashuna, heather should render an app home page",
                "timedOut": false,
                "duration": 11781,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://warm-savannah-50461.herokuapp.com/\",\n  \"assets/03-Major-Cache_2017-05-18_07.png\",\n  \"https://github.com/lockwoni/plant-care\",\n  \"Major Cache\",\n  \"matt, nicole, cashuna, heather\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "971aeb25-53e5-4b60-8cda-946d55f292a6",
                "parentUUID": "986f5dc7-e0d0-498c-b9a3-bab3246f9727",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 11781,
            "rootEmpty": false
          },
          {
            "title": "Blue Smoke Magicians: usman, marvin, christine, val",
            "suites": [],
            "tests": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Blue Smoke Magicians: usman, marvin, christine, val should render an app home page",
                "timedOut": false,
                "duration": 7311,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"http://guarded-oasis-40298.herokuapp.com/\",\n  \"assets/04-Blue-Smoke-Magicians_2017-05-18_07.png\",\n  \"https://github.com/usmanjamil83/BlueSmokeMagicians\",\n  \"Blue Smoke Magicians\",\n  \"usman, marvin, christine, val\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "97b6877f-c7f9-429f-84b3-21aaec2c87ae",
                "parentUUID": "1fa87126-c367-4a52-beae-35357ecc2f81",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 20000,
            "file": "/project2.js",
            "uuid": "1fa87126-c367-4a52-beae-35357ecc2f81",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Blue Smoke Magicians: usman, marvin, christine, val should render an app home page",
                "timedOut": false,
                "duration": 7311,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"http://guarded-oasis-40298.herokuapp.com/\",\n  \"assets/04-Blue-Smoke-Magicians_2017-05-18_07.png\",\n  \"https://github.com/usmanjamil83/BlueSmokeMagicians\",\n  \"Blue Smoke Magicians\",\n  \"usman, marvin, christine, val\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "97b6877f-c7f9-429f-84b3-21aaec2c87ae",
                "parentUUID": "1fa87126-c367-4a52-beae-35357ecc2f81",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 7311,
            "rootEmpty": false
          },
          {
            "title": "Aluminum Falcons: jesus, seila, roberto, sandy",
            "suites": [],
            "tests": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Aluminum Falcons: jesus, seila, roberto, sandy should render an app home page",
                "timedOut": true,
                "duration": 20005,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "context": "[\n  \"https://limitless-everglades-23900.herokuapp.com/\",\n  \"assets/05-Aluminum-Falcons_2017-05-18_07.png\",\n  \"https://github.com/91integ25/Aluminum_falcons\",\n  \"Aluminum Falcons\",\n  \"jesus, seila, roberto, sandy\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {
                  "estack": "Error: Timeout of 20000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves."
                },
                "isRoot": false,
                "uuid": "4f977939-8064-4cdc-9ffb-cb0906316680",
                "parentUUID": "2d3d8f51-6508-49c7-a422-ade576beb397",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 20000,
            "file": "/project2.js",
            "uuid": "2d3d8f51-6508-49c7-a422-ade576beb397",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [],
            "failures": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Aluminum Falcons: jesus, seila, roberto, sandy should render an app home page",
                "timedOut": true,
                "duration": 20005,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "context": "[\n  \"https://limitless-everglades-23900.herokuapp.com/\",\n  \"assets/05-Aluminum-Falcons_2017-05-18_07.png\",\n  \"https://github.com/91integ25/Aluminum_falcons\",\n  \"Aluminum Falcons\",\n  \"jesus, seila, roberto, sandy\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {
                  "estack": "Error: Timeout of 20000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves."
                },
                "isRoot": false,
                "uuid": "4f977939-8064-4cdc-9ffb-cb0906316680",
                "parentUUID": "2d3d8f51-6508-49c7-a422-ade576beb397",
                "isHook": false,
                "skipped": false
              }
            ],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 1,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": true,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 20005,
            "rootEmpty": false
          },
          {
            "title": "Fighting Calypso Cookies: alex y, keythe, jimmia, heidi",
            "suites": [],
            "tests": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Fighting Calypso Cookies: alex y, keythe, jimmia, heidi should render an app home page",
                "timedOut": false,
                "duration": 13296,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://warm-atoll-35828.herokuapp.com/\",\n  \"assets/06-Fighting-Calypso-Cookies_2017-05-18_07.png\",\n  \"https://github.com/ayuan17/project2.git\",\n  \"Fighting Calypso Cookies\",\n  \"alex y, keythe, jimmia, heidi\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "56ee69a3-b9d4-4c0e-b998-6476584dc83f",
                "parentUUID": "5f42876f-6f9a-4d38-a9b6-32c625cac874",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 20000,
            "file": "/project2.js",
            "uuid": "5f42876f-6f9a-4d38-a9b6-32c625cac874",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Fighting Calypso Cookies: alex y, keythe, jimmia, heidi should render an app home page",
                "timedOut": false,
                "duration": 13296,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://warm-atoll-35828.herokuapp.com/\",\n  \"assets/06-Fighting-Calypso-Cookies_2017-05-18_07.png\",\n  \"https://github.com/ayuan17/project2.git\",\n  \"Fighting Calypso Cookies\",\n  \"alex y, keythe, jimmia, heidi\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "56ee69a3-b9d4-4c0e-b998-6476584dc83f",
                "parentUUID": "5f42876f-6f9a-4d38-a9b6-32c625cac874",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 13296,
            "rootEmpty": false
          },
          {
            "title": "White Hot Snow: john b, brent, igho, monica",
            "suites": [],
            "tests": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check White Hot Snow: john b, brent, igho, monica should render an app home page",
                "timedOut": false,
                "duration": 15571,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://lit-everglades-62722.herokuapp.com/\",\n  \"assets/07-White-Hot-Snow_2017-05-18_07.png\",\n  \"https://github.com/Afroid/project2\",\n  \"White Hot Snow\",\n  \"john b, brent, igho, monica\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "fb2aa3c8-d8a7-4e65-ba04-df60ce430991",
                "parentUUID": "fe999e26-4f80-415b-954f-b5dd2a0d1a77",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 20000,
            "file": "/project2.js",
            "uuid": "fe999e26-4f80-415b-954f-b5dd2a0d1a77",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check White Hot Snow: john b, brent, igho, monica should render an app home page",
                "timedOut": false,
                "duration": 15571,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://lit-everglades-62722.herokuapp.com/\",\n  \"assets/07-White-Hot-Snow_2017-05-18_07.png\",\n  \"https://github.com/Afroid/project2\",\n  \"White Hot Snow\",\n  \"john b, brent, igho, monica\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "fb2aa3c8-d8a7-4e65-ba04-df60ce430991",
                "parentUUID": "fe999e26-4f80-415b-954f-b5dd2a0d1a77",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 15571,
            "rootEmpty": false
          },
          {
            "title": "Bits & Giggles: david, karlos, alex d, zach",
            "suites": [],
            "tests": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Bits & Giggles: david, karlos, alex d, zach should render an app home page",
                "timedOut": false,
                "duration": 9639,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://quiet-sea-77471.herokuapp.com\",\n  \"assets/08-Bits-&-Giggles_2017-05-18_07.png\",\n  \"https://github.com/ddye4265/bitsandgiggles\",\n  \"Bits & Giggles\",\n  \"david, karlos, alex d, zach\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "1a580752-241c-4c01-9a2a-f49b7b83b35a",
                "parentUUID": "19d19b79-5168-443a-aef8-416c04eaa2a3",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 20000,
            "file": "/project2.js",
            "uuid": "19d19b79-5168-443a-aef8-416c04eaa2a3",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Bits & Giggles: david, karlos, alex d, zach should render an app home page",
                "timedOut": false,
                "duration": 9639,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://quiet-sea-77471.herokuapp.com\",\n  \"assets/08-Bits-&-Giggles_2017-05-18_07.png\",\n  \"https://github.com/ddye4265/bitsandgiggles\",\n  \"Bits & Giggles\",\n  \"david, karlos, alex d, zach\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "1a580752-241c-4c01-9a2a-f49b7b83b35a",
                "parentUUID": "19d19b79-5168-443a-aef8-416c04eaa2a3",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 9639,
            "rootEmpty": false
          },
          {
            "title": "Massive Confection: nooshin, mike b, michelle, jackie",
            "suites": [],
            "tests": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Massive Confection: nooshin, mike b, michelle, jackie should render an app home page",
                "timedOut": false,
                "duration": 1222,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "context": "[\n  \"https://mysterious-island-39661.herokuapp.com/\",\n  \"assets/09-Massive-Confection_2017-05-18_07.png\",\n  \"https://github.com/mikesbass/studentSearch.git\",\n  \"Massive Confection\",\n  \"nooshin, mike b, michelle, jackie\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {
                  "name": "AssertionError",
                  "actual": "false",
                  "expected": "true",
                  "operator": "==",
                  "message": "Massive Confection deployment is failed at https://mysterious-island-39661.herokuapp.com/",
                  "generatedMessage": false,
                  "estack": "AssertionError: Massive Confection deployment is failed at https://mysterious-island-39661.herokuapp.com/\n    at Nightmare.goto.viewport.screenshot.evaluate.then.title (project2.js:114:22)\n    at process._tickCallback (internal/process/next_tick.js:103:7)",
                  "diff": "- false\n+ true\n"
                },
                "isRoot": false,
                "uuid": "045054cc-0658-4c44-9f87-aadb7a6a5411",
                "parentUUID": "03daf1d2-f5b2-4fba-b295-9dd2de8356bb",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 20000,
            "file": "/project2.js",
            "uuid": "03daf1d2-f5b2-4fba-b295-9dd2de8356bb",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [],
            "failures": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Massive Confection: nooshin, mike b, michelle, jackie should render an app home page",
                "timedOut": false,
                "duration": 1222,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "context": "[\n  \"https://mysterious-island-39661.herokuapp.com/\",\n  \"assets/09-Massive-Confection_2017-05-18_07.png\",\n  \"https://github.com/mikesbass/studentSearch.git\",\n  \"Massive Confection\",\n  \"nooshin, mike b, michelle, jackie\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {
                  "name": "AssertionError",
                  "actual": "false",
                  "expected": "true",
                  "operator": "==",
                  "message": "Massive Confection deployment is failed at https://mysterious-island-39661.herokuapp.com/",
                  "generatedMessage": false,
                  "estack": "AssertionError: Massive Confection deployment is failed at https://mysterious-island-39661.herokuapp.com/\n    at Nightmare.goto.viewport.screenshot.evaluate.then.title (project2.js:114:22)\n    at process._tickCallback (internal/process/next_tick.js:103:7)",
                  "diff": "- false\n+ true\n"
                },
                "isRoot": false,
                "uuid": "045054cc-0658-4c44-9f87-aadb7a6a5411",
                "parentUUID": "03daf1d2-f5b2-4fba-b295-9dd2de8356bb",
                "isHook": false,
                "skipped": false
              }
            ],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 1,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": true,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1222,
            "rootEmpty": false
          },
          {
            "title": "File Jackers: shakir, eric f, caroline, trenton",
            "suites": [],
            "tests": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check File Jackers: shakir, eric f, caroline, trenton should render an app home page",
                "timedOut": false,
                "duration": 2029,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"http://ga-tech.homuncul.us:8081/\",\n  \"assets/10-File-Jackers_2017-05-18_07.png\",\n  \"http://gt.bootcampcontent.com/filejackers/project-2\",\n  \"File Jackers\",\n  \"shakir, eric f, caroline, trenton\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "58acc0e4-4726-471e-838f-679e70f70329",
                "parentUUID": "095b7ad8-d886-497a-b799-85b8799d4638",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 20000,
            "file": "/project2.js",
            "uuid": "095b7ad8-d886-497a-b799-85b8799d4638",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check File Jackers: shakir, eric f, caroline, trenton should render an app home page",
                "timedOut": false,
                "duration": 2029,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"http://ga-tech.homuncul.us:8081/\",\n  \"assets/10-File-Jackers_2017-05-18_07.png\",\n  \"http://gt.bootcampcontent.com/filejackers/project-2\",\n  \"File Jackers\",\n  \"shakir, eric f, caroline, trenton\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "58acc0e4-4726-471e-838f-679e70f70329",
                "parentUUID": "095b7ad8-d886-497a-b799-85b8799d4638",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2029,
            "rootEmpty": false
          },
          {
            "title": "Midnight Sun Giants: london, andrew, tyler, jameel",
            "suites": [],
            "tests": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Midnight Sun Giants: london, andrew, tyler, jameel should render an app home page",
                "timedOut": false,
                "duration": 8710,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://group-project-2.herokuapp.com/\",\n  \"assets/11-Midnight-Sun-Giants_2017-05-18_07.png\",\n  \"https://github.com/TylerCovington/Group-Project-2\",\n  \"Midnight Sun Giants\",\n  \"london, andrew, tyler, jameel\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "ef30d72b-fb18-40d7-be26-ae0ee9bef774",
                "parentUUID": "ebddd538-7858-4b1f-bd38-bf20a4d0065f",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 20000,
            "file": "/project2.js",
            "uuid": "ebddd538-7858-4b1f-bd38-bf20a4d0065f",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Midnight Sun Giants: london, andrew, tyler, jameel should render an app home page",
                "timedOut": false,
                "duration": 8710,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://group-project-2.herokuapp.com/\",\n  \"assets/11-Midnight-Sun-Giants_2017-05-18_07.png\",\n  \"https://github.com/TylerCovington/Group-Project-2\",\n  \"Midnight Sun Giants\",\n  \"london, andrew, tyler, jameel\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "ef30d72b-fb18-40d7-be26-ae0ee9bef774",
                "parentUUID": "ebddd538-7858-4b1f-bd38-bf20a4d0065f",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 8710,
            "rootEmpty": false
          },
          {
            "title": "Habitual Green Killers: sungbum, jon w, danny, sylvester",
            "suites": [],
            "tests": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Habitual Green Killers: sungbum, jon w, danny, sylvester should render an app home page",
                "timedOut": false,
                "duration": 8292,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://whispering-eyrie-80456.herokuapp.com/\",\n  \"assets/12-Habitual-Green-Killers_2017-05-18_07.png\",\n  \"https://github.com/dannyjwkim/Stock-Market-Game\",\n  \"Habitual Green Killers\",\n  \"sungbum, jon w, danny, sylvester\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "0da528b4-6020-4463-90d8-6cb4945c8fe1",
                "parentUUID": "8c7fd7e8-7620-46ed-8f82-497fd0012789",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 20000,
            "file": "/project2.js",
            "uuid": "8c7fd7e8-7620-46ed-8f82-497fd0012789",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Habitual Green Killers: sungbum, jon w, danny, sylvester should render an app home page",
                "timedOut": false,
                "duration": 8292,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://whispering-eyrie-80456.herokuapp.com/\",\n  \"assets/12-Habitual-Green-Killers_2017-05-18_07.png\",\n  \"https://github.com/dannyjwkim/Stock-Market-Game\",\n  \"Habitual Green Killers\",\n  \"sungbum, jon w, danny, sylvester\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "0da528b4-6020-4463-90d8-6cb4945c8fe1",
                "parentUUID": "8c7fd7e8-7620-46ed-8f82-497fd0012789",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 8292,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/project2.js",
        "uuid": "c424c625-e1ec-4a0c-bc9d-95d84599d0e0",
        "failedHooks": [],
        "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasFailedHooks": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "791a72c2-0461-4707-a698-ce3e53359fe6",
    "failedHooks": [],
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasFailedHooks": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "should render an app home page",
      "fullTitle": "Illegal Operations: ryan, martin, jieun, emily should render an app home page",
      "timedOut": false,
      "duration": 2411,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "context": "[\n  \"https://illegal-formation.herokuapp.com/\",\n  \"assets/00-Illegal-Operations_2017-05-18_07.png\",\n  \"https://github.com/rrodwell/IllegalOperations\",\n  \"Illegal Operations\",\n  \"ryan, martin, jieun, emily\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {
        "name": "AssertionError",
        "actual": "false",
        "expected": "true",
        "operator": "==",
        "message": "Illegal Operations deployment is failed at https://illegal-formation.herokuapp.com/",
        "generatedMessage": false,
        "estack": "AssertionError: Illegal Operations deployment is failed at https://illegal-formation.herokuapp.com/\n    at Nightmare.goto.viewport.screenshot.evaluate.then.title (project2.js:114:22)\n    at process._tickCallback (internal/process/next_tick.js:103:7)",
        "diff": "- false\n+ true\n"
      },
      "isRoot": false,
      "uuid": "b3561743-2289-4ff0-a6f2-262b90fd0b80",
      "parentUUID": "e1d1d274-ffb6-4c0f-b2aa-8ed72d7c914a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Tab Nabbers: cody, eric g, esterling, ashley should render an app home page",
      "timedOut": false,
      "duration": 8176,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://bootcruit.herokuapp.com\",\n  \"assets/01-Tab-Nabbers_2017-05-18_07.png\",\n  \"https://github.com/accimeesterlin/Tab-Nabbers.git\",\n  \"Tab Nabbers\",\n  \"cody, eric g, esterling, ashley\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "5c3c048f-0703-469c-a88b-d778c2e9a129",
      "parentUUID": "983d94fd-6f0e-448f-9219-058f2a20809f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Strict Mode: les, trent, laurie, lisa should render an app home page",
      "timedOut": false,
      "duration": 11256,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://warm-brushlands-86718.herokuapp.com/\",\n  \"assets/02-Strict-Mode_2017-05-18_07.png\",\n  \"https://github.com/haginl1/digitalPricing\",\n  \"Strict Mode\",\n  \"les, trent, laurie, lisa\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "8f173dbb-23bb-4d4b-9038-193e99baa0e0",
      "parentUUID": "24700bc4-17f6-480f-8862-154f02bd00f9",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Major Cache: matt, nicole, cashuna, heather should render an app home page",
      "timedOut": false,
      "duration": 11781,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://warm-savannah-50461.herokuapp.com/\",\n  \"assets/03-Major-Cache_2017-05-18_07.png\",\n  \"https://github.com/lockwoni/plant-care\",\n  \"Major Cache\",\n  \"matt, nicole, cashuna, heather\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "971aeb25-53e5-4b60-8cda-946d55f292a6",
      "parentUUID": "986f5dc7-e0d0-498c-b9a3-bab3246f9727",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Blue Smoke Magicians: usman, marvin, christine, val should render an app home page",
      "timedOut": false,
      "duration": 7311,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"http://guarded-oasis-40298.herokuapp.com/\",\n  \"assets/04-Blue-Smoke-Magicians_2017-05-18_07.png\",\n  \"https://github.com/usmanjamil83/BlueSmokeMagicians\",\n  \"Blue Smoke Magicians\",\n  \"usman, marvin, christine, val\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "97b6877f-c7f9-429f-84b3-21aaec2c87ae",
      "parentUUID": "1fa87126-c367-4a52-beae-35357ecc2f81",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Aluminum Falcons: jesus, seila, roberto, sandy should render an app home page",
      "timedOut": true,
      "duration": 20005,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "context": "[\n  \"https://limitless-everglades-23900.herokuapp.com/\",\n  \"assets/05-Aluminum-Falcons_2017-05-18_07.png\",\n  \"https://github.com/91integ25/Aluminum_falcons\",\n  \"Aluminum Falcons\",\n  \"jesus, seila, roberto, sandy\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {
        "estack": "Error: Timeout of 20000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves."
      },
      "isRoot": false,
      "uuid": "4f977939-8064-4cdc-9ffb-cb0906316680",
      "parentUUID": "2d3d8f51-6508-49c7-a422-ade576beb397",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Fighting Calypso Cookies: alex y, keythe, jimmia, heidi should render an app home page",
      "timedOut": false,
      "duration": 13296,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://warm-atoll-35828.herokuapp.com/\",\n  \"assets/06-Fighting-Calypso-Cookies_2017-05-18_07.png\",\n  \"https://github.com/ayuan17/project2.git\",\n  \"Fighting Calypso Cookies\",\n  \"alex y, keythe, jimmia, heidi\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "56ee69a3-b9d4-4c0e-b998-6476584dc83f",
      "parentUUID": "5f42876f-6f9a-4d38-a9b6-32c625cac874",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "White Hot Snow: john b, brent, igho, monica should render an app home page",
      "timedOut": false,
      "duration": 15571,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://lit-everglades-62722.herokuapp.com/\",\n  \"assets/07-White-Hot-Snow_2017-05-18_07.png\",\n  \"https://github.com/Afroid/project2\",\n  \"White Hot Snow\",\n  \"john b, brent, igho, monica\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "fb2aa3c8-d8a7-4e65-ba04-df60ce430991",
      "parentUUID": "fe999e26-4f80-415b-954f-b5dd2a0d1a77",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Bits & Giggles: david, karlos, alex d, zach should render an app home page",
      "timedOut": false,
      "duration": 9639,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://quiet-sea-77471.herokuapp.com\",\n  \"assets/08-Bits-&-Giggles_2017-05-18_07.png\",\n  \"https://github.com/ddye4265/bitsandgiggles\",\n  \"Bits & Giggles\",\n  \"david, karlos, alex d, zach\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "1a580752-241c-4c01-9a2a-f49b7b83b35a",
      "parentUUID": "19d19b79-5168-443a-aef8-416c04eaa2a3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Massive Confection: nooshin, mike b, michelle, jackie should render an app home page",
      "timedOut": false,
      "duration": 1222,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "context": "[\n  \"https://mysterious-island-39661.herokuapp.com/\",\n  \"assets/09-Massive-Confection_2017-05-18_07.png\",\n  \"https://github.com/mikesbass/studentSearch.git\",\n  \"Massive Confection\",\n  \"nooshin, mike b, michelle, jackie\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {
        "name": "AssertionError",
        "actual": "false",
        "expected": "true",
        "operator": "==",
        "message": "Massive Confection deployment is failed at https://mysterious-island-39661.herokuapp.com/",
        "generatedMessage": false,
        "estack": "AssertionError: Massive Confection deployment is failed at https://mysterious-island-39661.herokuapp.com/\n    at Nightmare.goto.viewport.screenshot.evaluate.then.title (project2.js:114:22)\n    at process._tickCallback (internal/process/next_tick.js:103:7)",
        "diff": "- false\n+ true\n"
      },
      "isRoot": false,
      "uuid": "045054cc-0658-4c44-9f87-aadb7a6a5411",
      "parentUUID": "03daf1d2-f5b2-4fba-b295-9dd2de8356bb",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "File Jackers: shakir, eric f, caroline, trenton should render an app home page",
      "timedOut": false,
      "duration": 2029,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"http://ga-tech.homuncul.us:8081/\",\n  \"assets/10-File-Jackers_2017-05-18_07.png\",\n  \"http://gt.bootcampcontent.com/filejackers/project-2\",\n  \"File Jackers\",\n  \"shakir, eric f, caroline, trenton\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "58acc0e4-4726-471e-838f-679e70f70329",
      "parentUUID": "095b7ad8-d886-497a-b799-85b8799d4638",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Midnight Sun Giants: london, andrew, tyler, jameel should render an app home page",
      "timedOut": false,
      "duration": 8710,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://group-project-2.herokuapp.com/\",\n  \"assets/11-Midnight-Sun-Giants_2017-05-18_07.png\",\n  \"https://github.com/TylerCovington/Group-Project-2\",\n  \"Midnight Sun Giants\",\n  \"london, andrew, tyler, jameel\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "ef30d72b-fb18-40d7-be26-ae0ee9bef774",
      "parentUUID": "ebddd538-7858-4b1f-bd38-bf20a4d0065f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Habitual Green Killers: sungbum, jon w, danny, sylvester should render an app home page",
      "timedOut": false,
      "duration": 8292,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://whispering-eyrie-80456.herokuapp.com/\",\n  \"assets/12-Habitual-Green-Killers_2017-05-18_07.png\",\n  \"https://github.com/dannyjwkim/Stock-Market-Game\",\n  \"Habitual Green Killers\",\n  \"sungbum, jon w, danny, sylvester\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "0da528b4-6020-4463-90d8-6cb4945c8fe1",
      "parentUUID": "8c7fd7e8-7620-46ed-8f82-497fd0012789",
      "isHook": false,
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "should render an app home page",
      "fullTitle": "Tab Nabbers: cody, eric g, esterling, ashley should render an app home page",
      "timedOut": false,
      "duration": 8176,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://bootcruit.herokuapp.com\",\n  \"assets/01-Tab-Nabbers_2017-05-18_07.png\",\n  \"https://github.com/accimeesterlin/Tab-Nabbers.git\",\n  \"Tab Nabbers\",\n  \"cody, eric g, esterling, ashley\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "5c3c048f-0703-469c-a88b-d778c2e9a129",
      "parentUUID": "983d94fd-6f0e-448f-9219-058f2a20809f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Strict Mode: les, trent, laurie, lisa should render an app home page",
      "timedOut": false,
      "duration": 11256,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://warm-brushlands-86718.herokuapp.com/\",\n  \"assets/02-Strict-Mode_2017-05-18_07.png\",\n  \"https://github.com/haginl1/digitalPricing\",\n  \"Strict Mode\",\n  \"les, trent, laurie, lisa\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "8f173dbb-23bb-4d4b-9038-193e99baa0e0",
      "parentUUID": "24700bc4-17f6-480f-8862-154f02bd00f9",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Major Cache: matt, nicole, cashuna, heather should render an app home page",
      "timedOut": false,
      "duration": 11781,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://warm-savannah-50461.herokuapp.com/\",\n  \"assets/03-Major-Cache_2017-05-18_07.png\",\n  \"https://github.com/lockwoni/plant-care\",\n  \"Major Cache\",\n  \"matt, nicole, cashuna, heather\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "971aeb25-53e5-4b60-8cda-946d55f292a6",
      "parentUUID": "986f5dc7-e0d0-498c-b9a3-bab3246f9727",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Blue Smoke Magicians: usman, marvin, christine, val should render an app home page",
      "timedOut": false,
      "duration": 7311,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"http://guarded-oasis-40298.herokuapp.com/\",\n  \"assets/04-Blue-Smoke-Magicians_2017-05-18_07.png\",\n  \"https://github.com/usmanjamil83/BlueSmokeMagicians\",\n  \"Blue Smoke Magicians\",\n  \"usman, marvin, christine, val\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "97b6877f-c7f9-429f-84b3-21aaec2c87ae",
      "parentUUID": "1fa87126-c367-4a52-beae-35357ecc2f81",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Fighting Calypso Cookies: alex y, keythe, jimmia, heidi should render an app home page",
      "timedOut": false,
      "duration": 13296,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://warm-atoll-35828.herokuapp.com/\",\n  \"assets/06-Fighting-Calypso-Cookies_2017-05-18_07.png\",\n  \"https://github.com/ayuan17/project2.git\",\n  \"Fighting Calypso Cookies\",\n  \"alex y, keythe, jimmia, heidi\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "56ee69a3-b9d4-4c0e-b998-6476584dc83f",
      "parentUUID": "5f42876f-6f9a-4d38-a9b6-32c625cac874",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "White Hot Snow: john b, brent, igho, monica should render an app home page",
      "timedOut": false,
      "duration": 15571,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://lit-everglades-62722.herokuapp.com/\",\n  \"assets/07-White-Hot-Snow_2017-05-18_07.png\",\n  \"https://github.com/Afroid/project2\",\n  \"White Hot Snow\",\n  \"john b, brent, igho, monica\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "fb2aa3c8-d8a7-4e65-ba04-df60ce430991",
      "parentUUID": "fe999e26-4f80-415b-954f-b5dd2a0d1a77",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Bits & Giggles: david, karlos, alex d, zach should render an app home page",
      "timedOut": false,
      "duration": 9639,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://quiet-sea-77471.herokuapp.com\",\n  \"assets/08-Bits-&-Giggles_2017-05-18_07.png\",\n  \"https://github.com/ddye4265/bitsandgiggles\",\n  \"Bits & Giggles\",\n  \"david, karlos, alex d, zach\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "1a580752-241c-4c01-9a2a-f49b7b83b35a",
      "parentUUID": "19d19b79-5168-443a-aef8-416c04eaa2a3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "File Jackers: shakir, eric f, caroline, trenton should render an app home page",
      "timedOut": false,
      "duration": 2029,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"http://ga-tech.homuncul.us:8081/\",\n  \"assets/10-File-Jackers_2017-05-18_07.png\",\n  \"http://gt.bootcampcontent.com/filejackers/project-2\",\n  \"File Jackers\",\n  \"shakir, eric f, caroline, trenton\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "58acc0e4-4726-471e-838f-679e70f70329",
      "parentUUID": "095b7ad8-d886-497a-b799-85b8799d4638",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Midnight Sun Giants: london, andrew, tyler, jameel should render an app home page",
      "timedOut": false,
      "duration": 8710,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://group-project-2.herokuapp.com/\",\n  \"assets/11-Midnight-Sun-Giants_2017-05-18_07.png\",\n  \"https://github.com/TylerCovington/Group-Project-2\",\n  \"Midnight Sun Giants\",\n  \"london, andrew, tyler, jameel\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "ef30d72b-fb18-40d7-be26-ae0ee9bef774",
      "parentUUID": "ebddd538-7858-4b1f-bd38-bf20a4d0065f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Habitual Green Killers: sungbum, jon w, danny, sylvester should render an app home page",
      "timedOut": false,
      "duration": 8292,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://whispering-eyrie-80456.herokuapp.com/\",\n  \"assets/12-Habitual-Green-Killers_2017-05-18_07.png\",\n  \"https://github.com/dannyjwkim/Stock-Market-Game\",\n  \"Habitual Green Killers\",\n  \"sungbum, jon w, danny, sylvester\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "0da528b4-6020-4463-90d8-6cb4945c8fe1",
      "parentUUID": "8c7fd7e8-7620-46ed-8f82-497fd0012789",
      "isHook": false,
      "skipped": false
    }
  ],
  "allFailures": [
    {
      "title": "should render an app home page",
      "fullTitle": "Illegal Operations: ryan, martin, jieun, emily should render an app home page",
      "timedOut": false,
      "duration": 2411,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "context": "[\n  \"https://illegal-formation.herokuapp.com/\",\n  \"assets/00-Illegal-Operations_2017-05-18_07.png\",\n  \"https://github.com/rrodwell/IllegalOperations\",\n  \"Illegal Operations\",\n  \"ryan, martin, jieun, emily\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {
        "name": "AssertionError",
        "actual": "false",
        "expected": "true",
        "operator": "==",
        "message": "Illegal Operations deployment is failed at https://illegal-formation.herokuapp.com/",
        "generatedMessage": false,
        "estack": "AssertionError: Illegal Operations deployment is failed at https://illegal-formation.herokuapp.com/\n    at Nightmare.goto.viewport.screenshot.evaluate.then.title (project2.js:114:22)\n    at process._tickCallback (internal/process/next_tick.js:103:7)",
        "diff": "- false\n+ true\n"
      },
      "isRoot": false,
      "uuid": "b3561743-2289-4ff0-a6f2-262b90fd0b80",
      "parentUUID": "e1d1d274-ffb6-4c0f-b2aa-8ed72d7c914a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Aluminum Falcons: jesus, seila, roberto, sandy should render an app home page",
      "timedOut": true,
      "duration": 20005,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "context": "[\n  \"https://limitless-everglades-23900.herokuapp.com/\",\n  \"assets/05-Aluminum-Falcons_2017-05-18_07.png\",\n  \"https://github.com/91integ25/Aluminum_falcons\",\n  \"Aluminum Falcons\",\n  \"jesus, seila, roberto, sandy\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {
        "estack": "Error: Timeout of 20000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves."
      },
      "isRoot": false,
      "uuid": "4f977939-8064-4cdc-9ffb-cb0906316680",
      "parentUUID": "2d3d8f51-6508-49c7-a422-ade576beb397",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Massive Confection: nooshin, mike b, michelle, jackie should render an app home page",
      "timedOut": false,
      "duration": 1222,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "context": "[\n  \"https://mysterious-island-39661.herokuapp.com/\",\n  \"assets/09-Massive-Confection_2017-05-18_07.png\",\n  \"https://github.com/mikesbass/studentSearch.git\",\n  \"Massive Confection\",\n  \"nooshin, mike b, michelle, jackie\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {
        "name": "AssertionError",
        "actual": "false",
        "expected": "true",
        "operator": "==",
        "message": "Massive Confection deployment is failed at https://mysterious-island-39661.herokuapp.com/",
        "generatedMessage": false,
        "estack": "AssertionError: Massive Confection deployment is failed at https://mysterious-island-39661.herokuapp.com/\n    at Nightmare.goto.viewport.screenshot.evaluate.then.title (project2.js:114:22)\n    at process._tickCallback (internal/process/next_tick.js:103:7)",
        "diff": "- false\n+ true\n"
      },
      "isRoot": false,
      "uuid": "045054cc-0658-4c44-9f87-aadb7a6a5411",
      "parentUUID": "03daf1d2-f5b2-4fba-b295-9dd2de8356bb",
      "isHook": false,
      "skipped": false
    }
  ],
  "copyrightYear": 2017
}