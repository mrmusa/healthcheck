{
  "stats": {
    "suites": 14,
    "tests": 13,
    "passes": 4,
    "pending": 0,
    "failures": 9,
    "start": "2017-05-15T14:56:08.944Z",
    "end": "2017-05-15T14:56:26.089Z",
    "duration": 17145,
    "testsRegistered": 13,
    "passPercent": 30.8,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "danger",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "Project 2 Health Check",
        "suites": [
          {
            "title": "Illegal Operations: ryan, martin, jieun, emily",
            "suites": [],
            "tests": [
              {
                "title": "should render render an app home page",
                "fullTitle": "Project 2 Health Check Illegal Operations: ryan, martin, jieun, emily should render render an app home page",
                "timedOut": false,
                "duration": 1587,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "context": "[\n  \"https://illegal-formation.herokuapp.com/\",\n  \"assets/00-Illegal-Operations_2017-05-15_10.png\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  Nightmare({ show : true })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'status', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {
                  "name": "AssertionError",
                  "actual": "false",
                  "expected": "true",
                  "operator": "==",
                  "message": "Illegal Operations deployment is failed at https://illegal-formation.herokuapp.com/",
                  "generatedMessage": false,
                  "estack": "AssertionError: Illegal Operations deployment is failed at https://illegal-formation.herokuapp.com/\n    at Nightmare.goto.viewport.screenshot.evaluate.then.title (project2.js:108:22)\n    at process._tickCallback (internal/process/next_tick.js:103:7)",
                  "diff": "- false\n+ true\n"
                },
                "isRoot": false,
                "uuid": "de1def74-1a11-4b84-bba0-229500d50906",
                "parentUUID": "443821fc-71f1-445a-9d61-68f539f1d195",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 10000,
            "file": "/project2.js",
            "uuid": "443821fc-71f1-445a-9d61-68f539f1d195",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [],
            "failures": [
              {
                "title": "should render render an app home page",
                "fullTitle": "Project 2 Health Check Illegal Operations: ryan, martin, jieun, emily should render render an app home page",
                "timedOut": false,
                "duration": 1587,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "context": "[\n  \"https://illegal-formation.herokuapp.com/\",\n  \"assets/00-Illegal-Operations_2017-05-15_10.png\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  Nightmare({ show : true })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'status', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {
                  "name": "AssertionError",
                  "actual": "false",
                  "expected": "true",
                  "operator": "==",
                  "message": "Illegal Operations deployment is failed at https://illegal-formation.herokuapp.com/",
                  "generatedMessage": false,
                  "estack": "AssertionError: Illegal Operations deployment is failed at https://illegal-formation.herokuapp.com/\n    at Nightmare.goto.viewport.screenshot.evaluate.then.title (project2.js:108:22)\n    at process._tickCallback (internal/process/next_tick.js:103:7)",
                  "diff": "- false\n+ true\n"
                },
                "isRoot": false,
                "uuid": "de1def74-1a11-4b84-bba0-229500d50906",
                "parentUUID": "443821fc-71f1-445a-9d61-68f539f1d195",
                "isHook": false,
                "skipped": false
              }
            ],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 1,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": true,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1587,
            "rootEmpty": false
          },
          {
            "title": "Tab Nabbers: cody, eric g, esterling, ashley",
            "suites": [],
            "tests": [
              {
                "title": "should render render an app home page",
                "fullTitle": "Project 2 Health Check Tab Nabbers: cody, eric g, esterling, ashley should render render an app home page",
                "timedOut": false,
                "duration": 1638,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "context": "[\n  \"https://bootcruit.herokuapp.com/signup\",\n  \"assets/01-Tab-Nabbers_2017-05-15_10.png\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  Nightmare({ show : true })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'status', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {
                  "name": "AssertionError",
                  "actual": "false",
                  "expected": "true",
                  "operator": "==",
                  "message": "Tab Nabbers deployment is failed at https://bootcruit.herokuapp.com/signup",
                  "generatedMessage": false,
                  "estack": "AssertionError: Tab Nabbers deployment is failed at https://bootcruit.herokuapp.com/signup\n    at Nightmare.goto.viewport.screenshot.evaluate.then.title (project2.js:108:22)\n    at process._tickCallback (internal/process/next_tick.js:103:7)",
                  "diff": "- false\n+ true\n"
                },
                "isRoot": false,
                "uuid": "89dd5527-b378-4eaf-913d-e17587e6ea69",
                "parentUUID": "3042b009-f038-4a96-9825-85d05b21c3bb",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 10000,
            "file": "/project2.js",
            "uuid": "3042b009-f038-4a96-9825-85d05b21c3bb",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [],
            "failures": [
              {
                "title": "should render render an app home page",
                "fullTitle": "Project 2 Health Check Tab Nabbers: cody, eric g, esterling, ashley should render render an app home page",
                "timedOut": false,
                "duration": 1638,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "context": "[\n  \"https://bootcruit.herokuapp.com/signup\",\n  \"assets/01-Tab-Nabbers_2017-05-15_10.png\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  Nightmare({ show : true })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'status', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {
                  "name": "AssertionError",
                  "actual": "false",
                  "expected": "true",
                  "operator": "==",
                  "message": "Tab Nabbers deployment is failed at https://bootcruit.herokuapp.com/signup",
                  "generatedMessage": false,
                  "estack": "AssertionError: Tab Nabbers deployment is failed at https://bootcruit.herokuapp.com/signup\n    at Nightmare.goto.viewport.screenshot.evaluate.then.title (project2.js:108:22)\n    at process._tickCallback (internal/process/next_tick.js:103:7)",
                  "diff": "- false\n+ true\n"
                },
                "isRoot": false,
                "uuid": "89dd5527-b378-4eaf-913d-e17587e6ea69",
                "parentUUID": "3042b009-f038-4a96-9825-85d05b21c3bb",
                "isHook": false,
                "skipped": false
              }
            ],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 1,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": true,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1638,
            "rootEmpty": false
          },
          {
            "title": "Strict Mode: les, trent, laurie, lisa",
            "suites": [],
            "tests": [
              {
                "title": "should render render an app home page",
                "fullTitle": "Project 2 Health Check Strict Mode: les, trent, laurie, lisa should render render an app home page",
                "timedOut": false,
                "duration": 1709,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://warm-brushlands-86718.herokuapp.com/\",\n  \"assets/02-Strict-Mode_2017-05-15_10.png\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  Nightmare({ show : true })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'status', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "9ef8fcb8-358f-40c6-a27a-cca36a96a84b",
                "parentUUID": "204e8728-0e7c-4e07-a7d3-1943c56d40a2",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 10000,
            "file": "/project2.js",
            "uuid": "204e8728-0e7c-4e07-a7d3-1943c56d40a2",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [
              {
                "title": "should render render an app home page",
                "fullTitle": "Project 2 Health Check Strict Mode: les, trent, laurie, lisa should render render an app home page",
                "timedOut": false,
                "duration": 1709,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://warm-brushlands-86718.herokuapp.com/\",\n  \"assets/02-Strict-Mode_2017-05-15_10.png\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  Nightmare({ show : true })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'status', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "9ef8fcb8-358f-40c6-a27a-cca36a96a84b",
                "parentUUID": "204e8728-0e7c-4e07-a7d3-1943c56d40a2",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1709,
            "rootEmpty": false
          },
          {
            "title": "Major Cache: matt, nicole, cashuna, heather",
            "suites": [],
            "tests": [
              {
                "title": "should render render an app home page",
                "fullTitle": "Project 2 Health Check Major Cache: matt, nicole, cashuna, heather should render render an app home page",
                "timedOut": false,
                "duration": 1115,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "context": "[\n  \"https://warm-savannah-50461.herokuapp.com/\",\n  \"assets/03-Major-Cache_2017-05-15_10.png\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  Nightmare({ show : true })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'status', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {
                  "name": "AssertionError",
                  "actual": "false",
                  "expected": "true",
                  "operator": "==",
                  "message": "Major Cache deployment is failed at https://warm-savannah-50461.herokuapp.com/",
                  "generatedMessage": false,
                  "estack": "AssertionError: Major Cache deployment is failed at https://warm-savannah-50461.herokuapp.com/\n    at Nightmare.goto.viewport.screenshot.evaluate.then.title (project2.js:108:22)\n    at process._tickCallback (internal/process/next_tick.js:103:7)",
                  "diff": "- false\n+ true\n"
                },
                "isRoot": false,
                "uuid": "aa2fde78-af0e-482a-962d-c818b86027f6",
                "parentUUID": "d8834ea9-baaf-4315-9e6d-1fe19c63b3f2",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 10000,
            "file": "/project2.js",
            "uuid": "d8834ea9-baaf-4315-9e6d-1fe19c63b3f2",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [],
            "failures": [
              {
                "title": "should render render an app home page",
                "fullTitle": "Project 2 Health Check Major Cache: matt, nicole, cashuna, heather should render render an app home page",
                "timedOut": false,
                "duration": 1115,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "context": "[\n  \"https://warm-savannah-50461.herokuapp.com/\",\n  \"assets/03-Major-Cache_2017-05-15_10.png\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  Nightmare({ show : true })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'status', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {
                  "name": "AssertionError",
                  "actual": "false",
                  "expected": "true",
                  "operator": "==",
                  "message": "Major Cache deployment is failed at https://warm-savannah-50461.herokuapp.com/",
                  "generatedMessage": false,
                  "estack": "AssertionError: Major Cache deployment is failed at https://warm-savannah-50461.herokuapp.com/\n    at Nightmare.goto.viewport.screenshot.evaluate.then.title (project2.js:108:22)\n    at process._tickCallback (internal/process/next_tick.js:103:7)",
                  "diff": "- false\n+ true\n"
                },
                "isRoot": false,
                "uuid": "aa2fde78-af0e-482a-962d-c818b86027f6",
                "parentUUID": "d8834ea9-baaf-4315-9e6d-1fe19c63b3f2",
                "isHook": false,
                "skipped": false
              }
            ],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 1,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": true,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1115,
            "rootEmpty": false
          },
          {
            "title": "Blue Smoke Magicians: usman, marvin, christine, val",
            "suites": [],
            "tests": [
              {
                "title": "should render render an app home page",
                "fullTitle": "Project 2 Health Check Blue Smoke Magicians: usman, marvin, christine, val should render render an app home page",
                "timedOut": false,
                "duration": 1077,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "context": "[\n  \"http://guarded-oasis-40298.herokuapp.com/\",\n  \"assets/04-Blue-Smoke-Magicians_2017-05-15_10.png\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  Nightmare({ show : true })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'status', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {
                  "name": "AssertionError",
                  "actual": "false",
                  "expected": "true",
                  "operator": "==",
                  "message": "Blue Smoke Magicians deployment is failed at http://guarded-oasis-40298.herokuapp.com/",
                  "generatedMessage": false,
                  "estack": "AssertionError: Blue Smoke Magicians deployment is failed at http://guarded-oasis-40298.herokuapp.com/\n    at Nightmare.goto.viewport.screenshot.evaluate.then.title (project2.js:108:22)\n    at process._tickCallback (internal/process/next_tick.js:103:7)",
                  "diff": "- false\n+ true\n"
                },
                "isRoot": false,
                "uuid": "9cd14b24-c254-4de6-a6b6-914fefacb66e",
                "parentUUID": "184a23bd-39de-45ef-8483-f1472c0db54d",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 10000,
            "file": "/project2.js",
            "uuid": "184a23bd-39de-45ef-8483-f1472c0db54d",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [],
            "failures": [
              {
                "title": "should render render an app home page",
                "fullTitle": "Project 2 Health Check Blue Smoke Magicians: usman, marvin, christine, val should render render an app home page",
                "timedOut": false,
                "duration": 1077,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "context": "[\n  \"http://guarded-oasis-40298.herokuapp.com/\",\n  \"assets/04-Blue-Smoke-Magicians_2017-05-15_10.png\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  Nightmare({ show : true })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'status', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {
                  "name": "AssertionError",
                  "actual": "false",
                  "expected": "true",
                  "operator": "==",
                  "message": "Blue Smoke Magicians deployment is failed at http://guarded-oasis-40298.herokuapp.com/",
                  "generatedMessage": false,
                  "estack": "AssertionError: Blue Smoke Magicians deployment is failed at http://guarded-oasis-40298.herokuapp.com/\n    at Nightmare.goto.viewport.screenshot.evaluate.then.title (project2.js:108:22)\n    at process._tickCallback (internal/process/next_tick.js:103:7)",
                  "diff": "- false\n+ true\n"
                },
                "isRoot": false,
                "uuid": "9cd14b24-c254-4de6-a6b6-914fefacb66e",
                "parentUUID": "184a23bd-39de-45ef-8483-f1472c0db54d",
                "isHook": false,
                "skipped": false
              }
            ],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 1,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": true,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1077,
            "rootEmpty": false
          },
          {
            "title": "Aluminum Falcons: jesus, seila, roberto, sandy",
            "suites": [],
            "tests": [
              {
                "title": "should render render an app home page",
                "fullTitle": "Project 2 Health Check Aluminum Falcons: jesus, seila, roberto, sandy should render render an app home page",
                "timedOut": false,
                "duration": 1050,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "context": "[\n  \"https://cryptic-cove-45695.herokuapp.com/\",\n  \"assets/05-Aluminum-Falcons_2017-05-15_10.png\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  Nightmare({ show : true })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'status', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {
                  "name": "AssertionError",
                  "actual": "false",
                  "expected": "true",
                  "operator": "==",
                  "message": "Aluminum Falcons deployment is failed at https://cryptic-cove-45695.herokuapp.com/",
                  "generatedMessage": false,
                  "estack": "AssertionError: Aluminum Falcons deployment is failed at https://cryptic-cove-45695.herokuapp.com/\n    at Nightmare.goto.viewport.screenshot.evaluate.then.title (project2.js:108:22)\n    at process._tickCallback (internal/process/next_tick.js:103:7)",
                  "diff": "- false\n+ true\n"
                },
                "isRoot": false,
                "uuid": "b5d94ffa-92eb-42da-a6ef-d3eb7767d276",
                "parentUUID": "63d44bcc-0c47-41d1-a1a5-f5d263fc27d3",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 10000,
            "file": "/project2.js",
            "uuid": "63d44bcc-0c47-41d1-a1a5-f5d263fc27d3",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [],
            "failures": [
              {
                "title": "should render render an app home page",
                "fullTitle": "Project 2 Health Check Aluminum Falcons: jesus, seila, roberto, sandy should render render an app home page",
                "timedOut": false,
                "duration": 1050,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "context": "[\n  \"https://cryptic-cove-45695.herokuapp.com/\",\n  \"assets/05-Aluminum-Falcons_2017-05-15_10.png\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  Nightmare({ show : true })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'status', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {
                  "name": "AssertionError",
                  "actual": "false",
                  "expected": "true",
                  "operator": "==",
                  "message": "Aluminum Falcons deployment is failed at https://cryptic-cove-45695.herokuapp.com/",
                  "generatedMessage": false,
                  "estack": "AssertionError: Aluminum Falcons deployment is failed at https://cryptic-cove-45695.herokuapp.com/\n    at Nightmare.goto.viewport.screenshot.evaluate.then.title (project2.js:108:22)\n    at process._tickCallback (internal/process/next_tick.js:103:7)",
                  "diff": "- false\n+ true\n"
                },
                "isRoot": false,
                "uuid": "b5d94ffa-92eb-42da-a6ef-d3eb7767d276",
                "parentUUID": "63d44bcc-0c47-41d1-a1a5-f5d263fc27d3",
                "isHook": false,
                "skipped": false
              }
            ],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 1,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": true,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1050,
            "rootEmpty": false
          },
          {
            "title": "Fighting Calypso Cookies: alex y, keythe, jimmia, heidi",
            "suites": [],
            "tests": [
              {
                "title": "should render render an app home page",
                "fullTitle": "Project 2 Health Check Fighting Calypso Cookies: alex y, keythe, jimmia, heidi should render render an app home page",
                "timedOut": false,
                "duration": 1255,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "context": "[\n  \"https://warm-atoll-35828.herokuapp.com/\",\n  \"assets/06-Fighting-Calypso-Cookies_2017-05-15_10.png\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  Nightmare({ show : true })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'status', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {
                  "name": "AssertionError",
                  "actual": "false",
                  "expected": "true",
                  "operator": "==",
                  "message": "Fighting Calypso Cookies deployment is failed at https://warm-atoll-35828.herokuapp.com/",
                  "generatedMessage": false,
                  "estack": "AssertionError: Fighting Calypso Cookies deployment is failed at https://warm-atoll-35828.herokuapp.com/\n    at Nightmare.goto.viewport.screenshot.evaluate.then.title (project2.js:108:22)\n    at process._tickCallback (internal/process/next_tick.js:103:7)",
                  "diff": "- false\n+ true\n"
                },
                "isRoot": false,
                "uuid": "8b9047f6-e5e4-4c1d-afea-06caeb8607b2",
                "parentUUID": "8ce92764-d0c8-4c96-9050-1b5308ebb75f",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 10000,
            "file": "/project2.js",
            "uuid": "8ce92764-d0c8-4c96-9050-1b5308ebb75f",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [],
            "failures": [
              {
                "title": "should render render an app home page",
                "fullTitle": "Project 2 Health Check Fighting Calypso Cookies: alex y, keythe, jimmia, heidi should render render an app home page",
                "timedOut": false,
                "duration": 1255,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "context": "[\n  \"https://warm-atoll-35828.herokuapp.com/\",\n  \"assets/06-Fighting-Calypso-Cookies_2017-05-15_10.png\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  Nightmare({ show : true })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'status', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {
                  "name": "AssertionError",
                  "actual": "false",
                  "expected": "true",
                  "operator": "==",
                  "message": "Fighting Calypso Cookies deployment is failed at https://warm-atoll-35828.herokuapp.com/",
                  "generatedMessage": false,
                  "estack": "AssertionError: Fighting Calypso Cookies deployment is failed at https://warm-atoll-35828.herokuapp.com/\n    at Nightmare.goto.viewport.screenshot.evaluate.then.title (project2.js:108:22)\n    at process._tickCallback (internal/process/next_tick.js:103:7)",
                  "diff": "- false\n+ true\n"
                },
                "isRoot": false,
                "uuid": "8b9047f6-e5e4-4c1d-afea-06caeb8607b2",
                "parentUUID": "8ce92764-d0c8-4c96-9050-1b5308ebb75f",
                "isHook": false,
                "skipped": false
              }
            ],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 1,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": true,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1255,
            "rootEmpty": false
          },
          {
            "title": "White Hot Snow: john b, brent, igho, monica",
            "suites": [],
            "tests": [
              {
                "title": "should render render an app home page",
                "fullTitle": "Project 2 Health Check White Hot Snow: john b, brent, igho, monica should render render an app home page",
                "timedOut": false,
                "duration": 1242,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "context": "[\n  \"https://lit-everglades-62722.herokuapp.com/\",\n  \"assets/07-White-Hot-Snow_2017-05-15_10.png\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  Nightmare({ show : true })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'status', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {
                  "name": "AssertionError",
                  "actual": "false",
                  "expected": "true",
                  "operator": "==",
                  "message": "White Hot Snow deployment is failed at https://lit-everglades-62722.herokuapp.com/",
                  "generatedMessage": false,
                  "estack": "AssertionError: White Hot Snow deployment is failed at https://lit-everglades-62722.herokuapp.com/\n    at Nightmare.goto.viewport.screenshot.evaluate.then.title (project2.js:108:22)\n    at process._tickCallback (internal/process/next_tick.js:103:7)",
                  "diff": "- false\n+ true\n"
                },
                "isRoot": false,
                "uuid": "30837e38-0472-48e0-b904-7fc9c85b06d4",
                "parentUUID": "41257f3c-c1ac-4a68-a4f4-47e0bd12420b",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 10000,
            "file": "/project2.js",
            "uuid": "41257f3c-c1ac-4a68-a4f4-47e0bd12420b",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [],
            "failures": [
              {
                "title": "should render render an app home page",
                "fullTitle": "Project 2 Health Check White Hot Snow: john b, brent, igho, monica should render render an app home page",
                "timedOut": false,
                "duration": 1242,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "context": "[\n  \"https://lit-everglades-62722.herokuapp.com/\",\n  \"assets/07-White-Hot-Snow_2017-05-15_10.png\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  Nightmare({ show : true })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'status', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {
                  "name": "AssertionError",
                  "actual": "false",
                  "expected": "true",
                  "operator": "==",
                  "message": "White Hot Snow deployment is failed at https://lit-everglades-62722.herokuapp.com/",
                  "generatedMessage": false,
                  "estack": "AssertionError: White Hot Snow deployment is failed at https://lit-everglades-62722.herokuapp.com/\n    at Nightmare.goto.viewport.screenshot.evaluate.then.title (project2.js:108:22)\n    at process._tickCallback (internal/process/next_tick.js:103:7)",
                  "diff": "- false\n+ true\n"
                },
                "isRoot": false,
                "uuid": "30837e38-0472-48e0-b904-7fc9c85b06d4",
                "parentUUID": "41257f3c-c1ac-4a68-a4f4-47e0bd12420b",
                "isHook": false,
                "skipped": false
              }
            ],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 1,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": true,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1242,
            "rootEmpty": false
          },
          {
            "title": "Bits & Giggles: david, karlos, alex d, zach",
            "suites": [],
            "tests": [
              {
                "title": "should render render an app home page",
                "fullTitle": "Project 2 Health Check Bits & Giggles: david, karlos, alex d, zach should render render an app home page",
                "timedOut": false,
                "duration": 1152,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "context": "[\n  \"https://quiet-sea-77471.herokuapp.com\",\n  \"assets/08-Bits-&-Giggles_2017-05-15_10.png\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  Nightmare({ show : true })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'status', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {
                  "name": "AssertionError",
                  "actual": "false",
                  "expected": "true",
                  "operator": "==",
                  "message": "Bits & Giggles deployment is failed at https://quiet-sea-77471.herokuapp.com",
                  "generatedMessage": false,
                  "estack": "AssertionError: Bits & Giggles deployment is failed at https://quiet-sea-77471.herokuapp.com\n    at Nightmare.goto.viewport.screenshot.evaluate.then.title (project2.js:108:22)\n    at process._tickCallback (internal/process/next_tick.js:103:7)",
                  "diff": "- false\n+ true\n"
                },
                "isRoot": false,
                "uuid": "a2d01f2d-2188-4d1f-8d72-21dbf4ebee08",
                "parentUUID": "3547ee72-dca6-4a3d-8d99-d59932ca6ecb",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 10000,
            "file": "/project2.js",
            "uuid": "3547ee72-dca6-4a3d-8d99-d59932ca6ecb",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [],
            "failures": [
              {
                "title": "should render render an app home page",
                "fullTitle": "Project 2 Health Check Bits & Giggles: david, karlos, alex d, zach should render render an app home page",
                "timedOut": false,
                "duration": 1152,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "context": "[\n  \"https://quiet-sea-77471.herokuapp.com\",\n  \"assets/08-Bits-&-Giggles_2017-05-15_10.png\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  Nightmare({ show : true })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'status', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {
                  "name": "AssertionError",
                  "actual": "false",
                  "expected": "true",
                  "operator": "==",
                  "message": "Bits & Giggles deployment is failed at https://quiet-sea-77471.herokuapp.com",
                  "generatedMessage": false,
                  "estack": "AssertionError: Bits & Giggles deployment is failed at https://quiet-sea-77471.herokuapp.com\n    at Nightmare.goto.viewport.screenshot.evaluate.then.title (project2.js:108:22)\n    at process._tickCallback (internal/process/next_tick.js:103:7)",
                  "diff": "- false\n+ true\n"
                },
                "isRoot": false,
                "uuid": "a2d01f2d-2188-4d1f-8d72-21dbf4ebee08",
                "parentUUID": "3547ee72-dca6-4a3d-8d99-d59932ca6ecb",
                "isHook": false,
                "skipped": false
              }
            ],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 1,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": true,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1152,
            "rootEmpty": false
          },
          {
            "title": "Massive Confection: nooshin, mike b, michelle, jackie",
            "suites": [],
            "tests": [
              {
                "title": "should render render an app home page",
                "fullTitle": "Project 2 Health Check Massive Confection: nooshin, mike b, michelle, jackie should render render an app home page",
                "timedOut": false,
                "duration": 0,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  Nightmare({ show : true })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'status', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {
                  "name": "AssertionError",
                  "actual": "",
                  "expected": true,
                  "operator": "==",
                  "message": "Massive Confection has not provided an app deployment url",
                  "generatedMessage": false,
                  "estack": "AssertionError: Massive Confection has not provided an app deployment url\n    at Context.<anonymous> (project2.js:113:18)"
                },
                "isRoot": false,
                "uuid": "bcd62657-2658-4c8b-a90c-4cabdc82c9ad",
                "parentUUID": "bae52b96-515e-46dd-8337-0cfa9f960636",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 10000,
            "file": "/project2.js",
            "uuid": "bae52b96-515e-46dd-8337-0cfa9f960636",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [],
            "failures": [
              {
                "title": "should render render an app home page",
                "fullTitle": "Project 2 Health Check Massive Confection: nooshin, mike b, michelle, jackie should render render an app home page",
                "timedOut": false,
                "duration": 0,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  Nightmare({ show : true })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'status', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {
                  "name": "AssertionError",
                  "actual": "",
                  "expected": true,
                  "operator": "==",
                  "message": "Massive Confection has not provided an app deployment url",
                  "generatedMessage": false,
                  "estack": "AssertionError: Massive Confection has not provided an app deployment url\n    at Context.<anonymous> (project2.js:113:18)"
                },
                "isRoot": false,
                "uuid": "bcd62657-2658-4c8b-a90c-4cabdc82c9ad",
                "parentUUID": "bae52b96-515e-46dd-8337-0cfa9f960636",
                "isHook": false,
                "skipped": false
              }
            ],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 1,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": true,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "File Jackers: shakir, eric f, caroline, trenton",
            "suites": [],
            "tests": [
              {
                "title": "should render render an app home page",
                "fullTitle": "Project 2 Health Check File Jackers: shakir, eric f, caroline, trenton should render render an app home page",
                "timedOut": false,
                "duration": 2829,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"http://ga-tech.homuncul.us:8081/\",\n  \"assets/10-File-Jackers_2017-05-15_10.png\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  Nightmare({ show : true })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'status', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "8e1dab6c-2b44-4e18-85a6-ff364880e7b8",
                "parentUUID": "1d449097-88cd-413e-8d29-ce59bda63e5c",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 10000,
            "file": "/project2.js",
            "uuid": "1d449097-88cd-413e-8d29-ce59bda63e5c",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [
              {
                "title": "should render render an app home page",
                "fullTitle": "Project 2 Health Check File Jackers: shakir, eric f, caroline, trenton should render render an app home page",
                "timedOut": false,
                "duration": 2829,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"http://ga-tech.homuncul.us:8081/\",\n  \"assets/10-File-Jackers_2017-05-15_10.png\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  Nightmare({ show : true })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'status', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "8e1dab6c-2b44-4e18-85a6-ff364880e7b8",
                "parentUUID": "1d449097-88cd-413e-8d29-ce59bda63e5c",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2829,
            "rootEmpty": false
          },
          {
            "title": "Midnight Sun Giants: london, andrew, tyler, jameel",
            "suites": [],
            "tests": [
              {
                "title": "should render render an app home page",
                "fullTitle": "Project 2 Health Check Midnight Sun Giants: london, andrew, tyler, jameel should render render an app home page",
                "timedOut": false,
                "duration": 1386,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://group-project-2.herokuapp.com/\",\n  \"assets/11-Midnight-Sun-Giants_2017-05-15_10.png\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  Nightmare({ show : true })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'status', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "2d7ff93e-12f0-4d33-a5c9-23338dcb4913",
                "parentUUID": "01330107-c6c2-443d-bf1f-4e4d9dd6d93d",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 10000,
            "file": "/project2.js",
            "uuid": "01330107-c6c2-443d-bf1f-4e4d9dd6d93d",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [
              {
                "title": "should render render an app home page",
                "fullTitle": "Project 2 Health Check Midnight Sun Giants: london, andrew, tyler, jameel should render render an app home page",
                "timedOut": false,
                "duration": 1386,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://group-project-2.herokuapp.com/\",\n  \"assets/11-Midnight-Sun-Giants_2017-05-15_10.png\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  Nightmare({ show : true })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'status', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "2d7ff93e-12f0-4d33-a5c9-23338dcb4913",
                "parentUUID": "01330107-c6c2-443d-bf1f-4e4d9dd6d93d",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1386,
            "rootEmpty": false
          },
          {
            "title": "Habitual Green Killers: sungbum, jon w, danny, sylvester",
            "suites": [],
            "tests": [
              {
                "title": "should render render an app home page",
                "fullTitle": "Project 2 Health Check Habitual Green Killers: sungbum, jon w, danny, sylvester should render render an app home page",
                "timedOut": false,
                "duration": 1081,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://whispering-eyrie-80456.herokuapp.com/\",\n  \"assets/12-Habitual-Green-Killers_2017-05-15_10.png\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  Nightmare({ show : true })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'status', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "0099ce33-c517-43f2-8cb0-6e703fb5effb",
                "parentUUID": "6414a660-cde0-4442-a4ae-53f6244b8d62",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 10000,
            "file": "/project2.js",
            "uuid": "6414a660-cde0-4442-a4ae-53f6244b8d62",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [
              {
                "title": "should render render an app home page",
                "fullTitle": "Project 2 Health Check Habitual Green Killers: sungbum, jon w, danny, sylvester should render render an app home page",
                "timedOut": false,
                "duration": 1081,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://whispering-eyrie-80456.herokuapp.com/\",\n  \"assets/12-Habitual-Green-Killers_2017-05-15_10.png\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  Nightmare({ show : true })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'status', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "0099ce33-c517-43f2-8cb0-6e703fb5effb",
                "parentUUID": "6414a660-cde0-4442-a4ae-53f6244b8d62",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1081,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/project2.js",
        "uuid": "642717f1-a8eb-4fc4-b65c-d775cfa974ef",
        "failedHooks": [],
        "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasFailedHooks": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "6dd8cbe7-f81e-4770-a860-a4abb996fe0d",
    "failedHooks": [],
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasFailedHooks": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "should render render an app home page",
      "fullTitle": "Illegal Operations: ryan, martin, jieun, emily should render render an app home page",
      "timedOut": false,
      "duration": 1587,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "context": "[\n  \"https://illegal-formation.herokuapp.com/\",\n  \"assets/00-Illegal-Operations_2017-05-15_10.png\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  Nightmare({ show : true })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'status', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {
        "name": "AssertionError",
        "actual": "false",
        "expected": "true",
        "operator": "==",
        "message": "Illegal Operations deployment is failed at https://illegal-formation.herokuapp.com/",
        "generatedMessage": false,
        "estack": "AssertionError: Illegal Operations deployment is failed at https://illegal-formation.herokuapp.com/\n    at Nightmare.goto.viewport.screenshot.evaluate.then.title (project2.js:108:22)\n    at process._tickCallback (internal/process/next_tick.js:103:7)",
        "diff": "- false\n+ true\n"
      },
      "isRoot": false,
      "uuid": "de1def74-1a11-4b84-bba0-229500d50906",
      "parentUUID": "443821fc-71f1-445a-9d61-68f539f1d195",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render render an app home page",
      "fullTitle": "Tab Nabbers: cody, eric g, esterling, ashley should render render an app home page",
      "timedOut": false,
      "duration": 1638,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "context": "[\n  \"https://bootcruit.herokuapp.com/signup\",\n  \"assets/01-Tab-Nabbers_2017-05-15_10.png\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  Nightmare({ show : true })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'status', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {
        "name": "AssertionError",
        "actual": "false",
        "expected": "true",
        "operator": "==",
        "message": "Tab Nabbers deployment is failed at https://bootcruit.herokuapp.com/signup",
        "generatedMessage": false,
        "estack": "AssertionError: Tab Nabbers deployment is failed at https://bootcruit.herokuapp.com/signup\n    at Nightmare.goto.viewport.screenshot.evaluate.then.title (project2.js:108:22)\n    at process._tickCallback (internal/process/next_tick.js:103:7)",
        "diff": "- false\n+ true\n"
      },
      "isRoot": false,
      "uuid": "89dd5527-b378-4eaf-913d-e17587e6ea69",
      "parentUUID": "3042b009-f038-4a96-9825-85d05b21c3bb",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render render an app home page",
      "fullTitle": "Strict Mode: les, trent, laurie, lisa should render render an app home page",
      "timedOut": false,
      "duration": 1709,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://warm-brushlands-86718.herokuapp.com/\",\n  \"assets/02-Strict-Mode_2017-05-15_10.png\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  Nightmare({ show : true })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'status', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "9ef8fcb8-358f-40c6-a27a-cca36a96a84b",
      "parentUUID": "204e8728-0e7c-4e07-a7d3-1943c56d40a2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render render an app home page",
      "fullTitle": "Major Cache: matt, nicole, cashuna, heather should render render an app home page",
      "timedOut": false,
      "duration": 1115,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "context": "[\n  \"https://warm-savannah-50461.herokuapp.com/\",\n  \"assets/03-Major-Cache_2017-05-15_10.png\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  Nightmare({ show : true })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'status', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {
        "name": "AssertionError",
        "actual": "false",
        "expected": "true",
        "operator": "==",
        "message": "Major Cache deployment is failed at https://warm-savannah-50461.herokuapp.com/",
        "generatedMessage": false,
        "estack": "AssertionError: Major Cache deployment is failed at https://warm-savannah-50461.herokuapp.com/\n    at Nightmare.goto.viewport.screenshot.evaluate.then.title (project2.js:108:22)\n    at process._tickCallback (internal/process/next_tick.js:103:7)",
        "diff": "- false\n+ true\n"
      },
      "isRoot": false,
      "uuid": "aa2fde78-af0e-482a-962d-c818b86027f6",
      "parentUUID": "d8834ea9-baaf-4315-9e6d-1fe19c63b3f2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render render an app home page",
      "fullTitle": "Blue Smoke Magicians: usman, marvin, christine, val should render render an app home page",
      "timedOut": false,
      "duration": 1077,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "context": "[\n  \"http://guarded-oasis-40298.herokuapp.com/\",\n  \"assets/04-Blue-Smoke-Magicians_2017-05-15_10.png\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  Nightmare({ show : true })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'status', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {
        "name": "AssertionError",
        "actual": "false",
        "expected": "true",
        "operator": "==",
        "message": "Blue Smoke Magicians deployment is failed at http://guarded-oasis-40298.herokuapp.com/",
        "generatedMessage": false,
        "estack": "AssertionError: Blue Smoke Magicians deployment is failed at http://guarded-oasis-40298.herokuapp.com/\n    at Nightmare.goto.viewport.screenshot.evaluate.then.title (project2.js:108:22)\n    at process._tickCallback (internal/process/next_tick.js:103:7)",
        "diff": "- false\n+ true\n"
      },
      "isRoot": false,
      "uuid": "9cd14b24-c254-4de6-a6b6-914fefacb66e",
      "parentUUID": "184a23bd-39de-45ef-8483-f1472c0db54d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render render an app home page",
      "fullTitle": "Aluminum Falcons: jesus, seila, roberto, sandy should render render an app home page",
      "timedOut": false,
      "duration": 1050,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "context": "[\n  \"https://cryptic-cove-45695.herokuapp.com/\",\n  \"assets/05-Aluminum-Falcons_2017-05-15_10.png\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  Nightmare({ show : true })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'status', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {
        "name": "AssertionError",
        "actual": "false",
        "expected": "true",
        "operator": "==",
        "message": "Aluminum Falcons deployment is failed at https://cryptic-cove-45695.herokuapp.com/",
        "generatedMessage": false,
        "estack": "AssertionError: Aluminum Falcons deployment is failed at https://cryptic-cove-45695.herokuapp.com/\n    at Nightmare.goto.viewport.screenshot.evaluate.then.title (project2.js:108:22)\n    at process._tickCallback (internal/process/next_tick.js:103:7)",
        "diff": "- false\n+ true\n"
      },
      "isRoot": false,
      "uuid": "b5d94ffa-92eb-42da-a6ef-d3eb7767d276",
      "parentUUID": "63d44bcc-0c47-41d1-a1a5-f5d263fc27d3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render render an app home page",
      "fullTitle": "Fighting Calypso Cookies: alex y, keythe, jimmia, heidi should render render an app home page",
      "timedOut": false,
      "duration": 1255,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "context": "[\n  \"https://warm-atoll-35828.herokuapp.com/\",\n  \"assets/06-Fighting-Calypso-Cookies_2017-05-15_10.png\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  Nightmare({ show : true })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'status', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {
        "name": "AssertionError",
        "actual": "false",
        "expected": "true",
        "operator": "==",
        "message": "Fighting Calypso Cookies deployment is failed at https://warm-atoll-35828.herokuapp.com/",
        "generatedMessage": false,
        "estack": "AssertionError: Fighting Calypso Cookies deployment is failed at https://warm-atoll-35828.herokuapp.com/\n    at Nightmare.goto.viewport.screenshot.evaluate.then.title (project2.js:108:22)\n    at process._tickCallback (internal/process/next_tick.js:103:7)",
        "diff": "- false\n+ true\n"
      },
      "isRoot": false,
      "uuid": "8b9047f6-e5e4-4c1d-afea-06caeb8607b2",
      "parentUUID": "8ce92764-d0c8-4c96-9050-1b5308ebb75f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render render an app home page",
      "fullTitle": "White Hot Snow: john b, brent, igho, monica should render render an app home page",
      "timedOut": false,
      "duration": 1242,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "context": "[\n  \"https://lit-everglades-62722.herokuapp.com/\",\n  \"assets/07-White-Hot-Snow_2017-05-15_10.png\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  Nightmare({ show : true })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'status', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {
        "name": "AssertionError",
        "actual": "false",
        "expected": "true",
        "operator": "==",
        "message": "White Hot Snow deployment is failed at https://lit-everglades-62722.herokuapp.com/",
        "generatedMessage": false,
        "estack": "AssertionError: White Hot Snow deployment is failed at https://lit-everglades-62722.herokuapp.com/\n    at Nightmare.goto.viewport.screenshot.evaluate.then.title (project2.js:108:22)\n    at process._tickCallback (internal/process/next_tick.js:103:7)",
        "diff": "- false\n+ true\n"
      },
      "isRoot": false,
      "uuid": "30837e38-0472-48e0-b904-7fc9c85b06d4",
      "parentUUID": "41257f3c-c1ac-4a68-a4f4-47e0bd12420b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render render an app home page",
      "fullTitle": "Bits & Giggles: david, karlos, alex d, zach should render render an app home page",
      "timedOut": false,
      "duration": 1152,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "context": "[\n  \"https://quiet-sea-77471.herokuapp.com\",\n  \"assets/08-Bits-&-Giggles_2017-05-15_10.png\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  Nightmare({ show : true })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'status', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {
        "name": "AssertionError",
        "actual": "false",
        "expected": "true",
        "operator": "==",
        "message": "Bits & Giggles deployment is failed at https://quiet-sea-77471.herokuapp.com",
        "generatedMessage": false,
        "estack": "AssertionError: Bits & Giggles deployment is failed at https://quiet-sea-77471.herokuapp.com\n    at Nightmare.goto.viewport.screenshot.evaluate.then.title (project2.js:108:22)\n    at process._tickCallback (internal/process/next_tick.js:103:7)",
        "diff": "- false\n+ true\n"
      },
      "isRoot": false,
      "uuid": "a2d01f2d-2188-4d1f-8d72-21dbf4ebee08",
      "parentUUID": "3547ee72-dca6-4a3d-8d99-d59932ca6ecb",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render render an app home page",
      "fullTitle": "Massive Confection: nooshin, mike b, michelle, jackie should render render an app home page",
      "timedOut": false,
      "duration": 0,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  Nightmare({ show : true })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'status', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {
        "name": "AssertionError",
        "actual": "",
        "expected": true,
        "operator": "==",
        "message": "Massive Confection has not provided an app deployment url",
        "generatedMessage": false,
        "estack": "AssertionError: Massive Confection has not provided an app deployment url\n    at Context.<anonymous> (project2.js:113:18)"
      },
      "isRoot": false,
      "uuid": "bcd62657-2658-4c8b-a90c-4cabdc82c9ad",
      "parentUUID": "bae52b96-515e-46dd-8337-0cfa9f960636",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render render an app home page",
      "fullTitle": "File Jackers: shakir, eric f, caroline, trenton should render render an app home page",
      "timedOut": false,
      "duration": 2829,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"http://ga-tech.homuncul.us:8081/\",\n  \"assets/10-File-Jackers_2017-05-15_10.png\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  Nightmare({ show : true })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'status', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "8e1dab6c-2b44-4e18-85a6-ff364880e7b8",
      "parentUUID": "1d449097-88cd-413e-8d29-ce59bda63e5c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render render an app home page",
      "fullTitle": "Midnight Sun Giants: london, andrew, tyler, jameel should render render an app home page",
      "timedOut": false,
      "duration": 1386,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://group-project-2.herokuapp.com/\",\n  \"assets/11-Midnight-Sun-Giants_2017-05-15_10.png\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  Nightmare({ show : true })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'status', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "2d7ff93e-12f0-4d33-a5c9-23338dcb4913",
      "parentUUID": "01330107-c6c2-443d-bf1f-4e4d9dd6d93d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render render an app home page",
      "fullTitle": "Habitual Green Killers: sungbum, jon w, danny, sylvester should render render an app home page",
      "timedOut": false,
      "duration": 1081,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://whispering-eyrie-80456.herokuapp.com/\",\n  \"assets/12-Habitual-Green-Killers_2017-05-15_10.png\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  Nightmare({ show : true })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'status', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "0099ce33-c517-43f2-8cb0-6e703fb5effb",
      "parentUUID": "6414a660-cde0-4442-a4ae-53f6244b8d62",
      "isHook": false,
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "should render render an app home page",
      "fullTitle": "Strict Mode: les, trent, laurie, lisa should render render an app home page",
      "timedOut": false,
      "duration": 1709,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://warm-brushlands-86718.herokuapp.com/\",\n  \"assets/02-Strict-Mode_2017-05-15_10.png\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  Nightmare({ show : true })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'status', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "9ef8fcb8-358f-40c6-a27a-cca36a96a84b",
      "parentUUID": "204e8728-0e7c-4e07-a7d3-1943c56d40a2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render render an app home page",
      "fullTitle": "File Jackers: shakir, eric f, caroline, trenton should render render an app home page",
      "timedOut": false,
      "duration": 2829,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"http://ga-tech.homuncul.us:8081/\",\n  \"assets/10-File-Jackers_2017-05-15_10.png\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  Nightmare({ show : true })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'status', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "8e1dab6c-2b44-4e18-85a6-ff364880e7b8",
      "parentUUID": "1d449097-88cd-413e-8d29-ce59bda63e5c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render render an app home page",
      "fullTitle": "Midnight Sun Giants: london, andrew, tyler, jameel should render render an app home page",
      "timedOut": false,
      "duration": 1386,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://group-project-2.herokuapp.com/\",\n  \"assets/11-Midnight-Sun-Giants_2017-05-15_10.png\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  Nightmare({ show : true })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'status', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "2d7ff93e-12f0-4d33-a5c9-23338dcb4913",
      "parentUUID": "01330107-c6c2-443d-bf1f-4e4d9dd6d93d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render render an app home page",
      "fullTitle": "Habitual Green Killers: sungbum, jon w, danny, sylvester should render render an app home page",
      "timedOut": false,
      "duration": 1081,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://whispering-eyrie-80456.herokuapp.com/\",\n  \"assets/12-Habitual-Green-Killers_2017-05-15_10.png\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  Nightmare({ show : true })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'status', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "0099ce33-c517-43f2-8cb0-6e703fb5effb",
      "parentUUID": "6414a660-cde0-4442-a4ae-53f6244b8d62",
      "isHook": false,
      "skipped": false
    }
  ],
  "allFailures": [
    {
      "title": "should render render an app home page",
      "fullTitle": "Illegal Operations: ryan, martin, jieun, emily should render render an app home page",
      "timedOut": false,
      "duration": 1587,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "context": "[\n  \"https://illegal-formation.herokuapp.com/\",\n  \"assets/00-Illegal-Operations_2017-05-15_10.png\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  Nightmare({ show : true })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'status', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {
        "name": "AssertionError",
        "actual": "false",
        "expected": "true",
        "operator": "==",
        "message": "Illegal Operations deployment is failed at https://illegal-formation.herokuapp.com/",
        "generatedMessage": false,
        "estack": "AssertionError: Illegal Operations deployment is failed at https://illegal-formation.herokuapp.com/\n    at Nightmare.goto.viewport.screenshot.evaluate.then.title (project2.js:108:22)\n    at process._tickCallback (internal/process/next_tick.js:103:7)",
        "diff": "- false\n+ true\n"
      },
      "isRoot": false,
      "uuid": "de1def74-1a11-4b84-bba0-229500d50906",
      "parentUUID": "443821fc-71f1-445a-9d61-68f539f1d195",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render render an app home page",
      "fullTitle": "Tab Nabbers: cody, eric g, esterling, ashley should render render an app home page",
      "timedOut": false,
      "duration": 1638,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "context": "[\n  \"https://bootcruit.herokuapp.com/signup\",\n  \"assets/01-Tab-Nabbers_2017-05-15_10.png\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  Nightmare({ show : true })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'status', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {
        "name": "AssertionError",
        "actual": "false",
        "expected": "true",
        "operator": "==",
        "message": "Tab Nabbers deployment is failed at https://bootcruit.herokuapp.com/signup",
        "generatedMessage": false,
        "estack": "AssertionError: Tab Nabbers deployment is failed at https://bootcruit.herokuapp.com/signup\n    at Nightmare.goto.viewport.screenshot.evaluate.then.title (project2.js:108:22)\n    at process._tickCallback (internal/process/next_tick.js:103:7)",
        "diff": "- false\n+ true\n"
      },
      "isRoot": false,
      "uuid": "89dd5527-b378-4eaf-913d-e17587e6ea69",
      "parentUUID": "3042b009-f038-4a96-9825-85d05b21c3bb",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render render an app home page",
      "fullTitle": "Major Cache: matt, nicole, cashuna, heather should render render an app home page",
      "timedOut": false,
      "duration": 1115,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "context": "[\n  \"https://warm-savannah-50461.herokuapp.com/\",\n  \"assets/03-Major-Cache_2017-05-15_10.png\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  Nightmare({ show : true })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'status', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {
        "name": "AssertionError",
        "actual": "false",
        "expected": "true",
        "operator": "==",
        "message": "Major Cache deployment is failed at https://warm-savannah-50461.herokuapp.com/",
        "generatedMessage": false,
        "estack": "AssertionError: Major Cache deployment is failed at https://warm-savannah-50461.herokuapp.com/\n    at Nightmare.goto.viewport.screenshot.evaluate.then.title (project2.js:108:22)\n    at process._tickCallback (internal/process/next_tick.js:103:7)",
        "diff": "- false\n+ true\n"
      },
      "isRoot": false,
      "uuid": "aa2fde78-af0e-482a-962d-c818b86027f6",
      "parentUUID": "d8834ea9-baaf-4315-9e6d-1fe19c63b3f2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render render an app home page",
      "fullTitle": "Blue Smoke Magicians: usman, marvin, christine, val should render render an app home page",
      "timedOut": false,
      "duration": 1077,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "context": "[\n  \"http://guarded-oasis-40298.herokuapp.com/\",\n  \"assets/04-Blue-Smoke-Magicians_2017-05-15_10.png\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  Nightmare({ show : true })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'status', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {
        "name": "AssertionError",
        "actual": "false",
        "expected": "true",
        "operator": "==",
        "message": "Blue Smoke Magicians deployment is failed at http://guarded-oasis-40298.herokuapp.com/",
        "generatedMessage": false,
        "estack": "AssertionError: Blue Smoke Magicians deployment is failed at http://guarded-oasis-40298.herokuapp.com/\n    at Nightmare.goto.viewport.screenshot.evaluate.then.title (project2.js:108:22)\n    at process._tickCallback (internal/process/next_tick.js:103:7)",
        "diff": "- false\n+ true\n"
      },
      "isRoot": false,
      "uuid": "9cd14b24-c254-4de6-a6b6-914fefacb66e",
      "parentUUID": "184a23bd-39de-45ef-8483-f1472c0db54d",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render render an app home page",
      "fullTitle": "Aluminum Falcons: jesus, seila, roberto, sandy should render render an app home page",
      "timedOut": false,
      "duration": 1050,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "context": "[\n  \"https://cryptic-cove-45695.herokuapp.com/\",\n  \"assets/05-Aluminum-Falcons_2017-05-15_10.png\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  Nightmare({ show : true })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'status', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {
        "name": "AssertionError",
        "actual": "false",
        "expected": "true",
        "operator": "==",
        "message": "Aluminum Falcons deployment is failed at https://cryptic-cove-45695.herokuapp.com/",
        "generatedMessage": false,
        "estack": "AssertionError: Aluminum Falcons deployment is failed at https://cryptic-cove-45695.herokuapp.com/\n    at Nightmare.goto.viewport.screenshot.evaluate.then.title (project2.js:108:22)\n    at process._tickCallback (internal/process/next_tick.js:103:7)",
        "diff": "- false\n+ true\n"
      },
      "isRoot": false,
      "uuid": "b5d94ffa-92eb-42da-a6ef-d3eb7767d276",
      "parentUUID": "63d44bcc-0c47-41d1-a1a5-f5d263fc27d3",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render render an app home page",
      "fullTitle": "Fighting Calypso Cookies: alex y, keythe, jimmia, heidi should render render an app home page",
      "timedOut": false,
      "duration": 1255,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "context": "[\n  \"https://warm-atoll-35828.herokuapp.com/\",\n  \"assets/06-Fighting-Calypso-Cookies_2017-05-15_10.png\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  Nightmare({ show : true })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'status', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {
        "name": "AssertionError",
        "actual": "false",
        "expected": "true",
        "operator": "==",
        "message": "Fighting Calypso Cookies deployment is failed at https://warm-atoll-35828.herokuapp.com/",
        "generatedMessage": false,
        "estack": "AssertionError: Fighting Calypso Cookies deployment is failed at https://warm-atoll-35828.herokuapp.com/\n    at Nightmare.goto.viewport.screenshot.evaluate.then.title (project2.js:108:22)\n    at process._tickCallback (internal/process/next_tick.js:103:7)",
        "diff": "- false\n+ true\n"
      },
      "isRoot": false,
      "uuid": "8b9047f6-e5e4-4c1d-afea-06caeb8607b2",
      "parentUUID": "8ce92764-d0c8-4c96-9050-1b5308ebb75f",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render render an app home page",
      "fullTitle": "White Hot Snow: john b, brent, igho, monica should render render an app home page",
      "timedOut": false,
      "duration": 1242,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "context": "[\n  \"https://lit-everglades-62722.herokuapp.com/\",\n  \"assets/07-White-Hot-Snow_2017-05-15_10.png\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  Nightmare({ show : true })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'status', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {
        "name": "AssertionError",
        "actual": "false",
        "expected": "true",
        "operator": "==",
        "message": "White Hot Snow deployment is failed at https://lit-everglades-62722.herokuapp.com/",
        "generatedMessage": false,
        "estack": "AssertionError: White Hot Snow deployment is failed at https://lit-everglades-62722.herokuapp.com/\n    at Nightmare.goto.viewport.screenshot.evaluate.then.title (project2.js:108:22)\n    at process._tickCallback (internal/process/next_tick.js:103:7)",
        "diff": "- false\n+ true\n"
      },
      "isRoot": false,
      "uuid": "30837e38-0472-48e0-b904-7fc9c85b06d4",
      "parentUUID": "41257f3c-c1ac-4a68-a4f4-47e0bd12420b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render render an app home page",
      "fullTitle": "Bits & Giggles: david, karlos, alex d, zach should render render an app home page",
      "timedOut": false,
      "duration": 1152,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "context": "[\n  \"https://quiet-sea-77471.herokuapp.com\",\n  \"assets/08-Bits-&-Giggles_2017-05-15_10.png\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  Nightmare({ show : true })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'status', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {
        "name": "AssertionError",
        "actual": "false",
        "expected": "true",
        "operator": "==",
        "message": "Bits & Giggles deployment is failed at https://quiet-sea-77471.herokuapp.com",
        "generatedMessage": false,
        "estack": "AssertionError: Bits & Giggles deployment is failed at https://quiet-sea-77471.herokuapp.com\n    at Nightmare.goto.viewport.screenshot.evaluate.then.title (project2.js:108:22)\n    at process._tickCallback (internal/process/next_tick.js:103:7)",
        "diff": "- false\n+ true\n"
      },
      "isRoot": false,
      "uuid": "a2d01f2d-2188-4d1f-8d72-21dbf4ebee08",
      "parentUUID": "3547ee72-dca6-4a3d-8d99-d59932ca6ecb",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render render an app home page",
      "fullTitle": "Massive Confection: nooshin, mike b, michelle, jackie should render render an app home page",
      "timedOut": false,
      "duration": 0,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  Nightmare({ show : true })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'status', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {
        "name": "AssertionError",
        "actual": "",
        "expected": true,
        "operator": "==",
        "message": "Massive Confection has not provided an app deployment url",
        "generatedMessage": false,
        "estack": "AssertionError: Massive Confection has not provided an app deployment url\n    at Context.<anonymous> (project2.js:113:18)"
      },
      "isRoot": false,
      "uuid": "bcd62657-2658-4c8b-a90c-4cabdc82c9ad",
      "parentUUID": "bae52b96-515e-46dd-8337-0cfa9f960636",
      "isHook": false,
      "skipped": false
    }
  ],
  "copyrightYear": 2017
}