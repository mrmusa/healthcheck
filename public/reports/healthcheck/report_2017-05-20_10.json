{
  "stats": {
    "suites": 14,
    "tests": 13,
    "passes": 13,
    "pending": 0,
    "failures": 0,
    "start": "2017-05-20T14:08:31.304Z",
    "end": "2017-05-20T14:10:02.055Z",
    "duration": 90751,
    "testsRegistered": 13,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "Project 2 Health Check",
        "suites": [
          {
            "title": "Illegal Operations: ryan, martin, jieun, emily",
            "suites": [],
            "tests": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Illegal Operations: ryan, martin, jieun, emily should render an app home page",
                "timedOut": false,
                "duration": 5083,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://illegal-formation.herokuapp.com/\",\n  \"assets/00-Illegal-Operations_2017-05-20_10.png\",\n  \"https://github.com/rrodwell/IllegalOperations\",\n  \"Illegal Operations\",\n  \"ryan, martin, jieun, emily\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "1d8794b4-89a6-4eab-a3e5-f140c574d78f",
                "parentUUID": "6c2c6549-c86f-42e5-b263-3c579aaff3b9",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 20000,
            "file": "/project2.js",
            "uuid": "6c2c6549-c86f-42e5-b263-3c579aaff3b9",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Illegal Operations: ryan, martin, jieun, emily should render an app home page",
                "timedOut": false,
                "duration": 5083,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://illegal-formation.herokuapp.com/\",\n  \"assets/00-Illegal-Operations_2017-05-20_10.png\",\n  \"https://github.com/rrodwell/IllegalOperations\",\n  \"Illegal Operations\",\n  \"ryan, martin, jieun, emily\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "1d8794b4-89a6-4eab-a3e5-f140c574d78f",
                "parentUUID": "6c2c6549-c86f-42e5-b263-3c579aaff3b9",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 5083,
            "rootEmpty": false
          },
          {
            "title": "Tab Nabbers: cody, eric g, esterling, ashley",
            "suites": [],
            "tests": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Tab Nabbers: cody, eric g, esterling, ashley should render an app home page",
                "timedOut": false,
                "duration": 4427,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://bootcruit.herokuapp.com\",\n  \"assets/01-Tab-Nabbers_2017-05-20_10.png\",\n  \"https://github.com/accimeesterlin/Tab-Nabbers.git\",\n  \"Tab Nabbers\",\n  \"cody, eric g, esterling, ashley\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "c5a79908-b5c8-42dc-96e7-ed83ba4fb909",
                "parentUUID": "7fab7471-7a97-49ba-be24-45ceecf3f523",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 20000,
            "file": "/project2.js",
            "uuid": "7fab7471-7a97-49ba-be24-45ceecf3f523",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Tab Nabbers: cody, eric g, esterling, ashley should render an app home page",
                "timedOut": false,
                "duration": 4427,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://bootcruit.herokuapp.com\",\n  \"assets/01-Tab-Nabbers_2017-05-20_10.png\",\n  \"https://github.com/accimeesterlin/Tab-Nabbers.git\",\n  \"Tab Nabbers\",\n  \"cody, eric g, esterling, ashley\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "c5a79908-b5c8-42dc-96e7-ed83ba4fb909",
                "parentUUID": "7fab7471-7a97-49ba-be24-45ceecf3f523",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 4427,
            "rootEmpty": false
          },
          {
            "title": "Strict Mode: les, trent, laurie, lisa",
            "suites": [],
            "tests": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Strict Mode: les, trent, laurie, lisa should render an app home page",
                "timedOut": false,
                "duration": 1780,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://warm-brushlands-86718.herokuapp.com/\",\n  \"assets/02-Strict-Mode_2017-05-20_10.png\",\n  \"https://github.com/haginl1/digitalPricing\",\n  \"Strict Mode\",\n  \"les, trent, laurie, lisa\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "6ee13c56-6b86-4a1f-b3dd-4f973b3ccdec",
                "parentUUID": "649eca0d-5923-400d-90cd-5c6c0798937a",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 20000,
            "file": "/project2.js",
            "uuid": "649eca0d-5923-400d-90cd-5c6c0798937a",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Strict Mode: les, trent, laurie, lisa should render an app home page",
                "timedOut": false,
                "duration": 1780,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://warm-brushlands-86718.herokuapp.com/\",\n  \"assets/02-Strict-Mode_2017-05-20_10.png\",\n  \"https://github.com/haginl1/digitalPricing\",\n  \"Strict Mode\",\n  \"les, trent, laurie, lisa\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "6ee13c56-6b86-4a1f-b3dd-4f973b3ccdec",
                "parentUUID": "649eca0d-5923-400d-90cd-5c6c0798937a",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1780,
            "rootEmpty": false
          },
          {
            "title": "Major Cache: matt, nicole, cashuna, heather",
            "suites": [],
            "tests": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Major Cache: matt, nicole, cashuna, heather should render an app home page",
                "timedOut": false,
                "duration": 19053,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://warm-savannah-50461.herokuapp.com/\",\n  \"assets/03-Major-Cache_2017-05-20_10.png\",\n  \"https://github.com/lockwoni/plant-care\",\n  \"Major Cache\",\n  \"matt, nicole, cashuna, heather\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "ae47f119-8e9b-498f-84a6-c4e7ee1def5e",
                "parentUUID": "87dd20c5-3961-4613-9dca-14d4df618021",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 20000,
            "file": "/project2.js",
            "uuid": "87dd20c5-3961-4613-9dca-14d4df618021",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Major Cache: matt, nicole, cashuna, heather should render an app home page",
                "timedOut": false,
                "duration": 19053,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://warm-savannah-50461.herokuapp.com/\",\n  \"assets/03-Major-Cache_2017-05-20_10.png\",\n  \"https://github.com/lockwoni/plant-care\",\n  \"Major Cache\",\n  \"matt, nicole, cashuna, heather\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "ae47f119-8e9b-498f-84a6-c4e7ee1def5e",
                "parentUUID": "87dd20c5-3961-4613-9dca-14d4df618021",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 19053,
            "rootEmpty": false
          },
          {
            "title": "Blue Smoke Magicians: usman, marvin, christine, val",
            "suites": [],
            "tests": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Blue Smoke Magicians: usman, marvin, christine, val should render an app home page",
                "timedOut": false,
                "duration": 1434,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"http://guarded-oasis-40298.herokuapp.com/\",\n  \"assets/04-Blue-Smoke-Magicians_2017-05-20_10.png\",\n  \"https://github.com/usmanjamil83/BlueSmokeMagicians\",\n  \"Blue Smoke Magicians\",\n  \"usman, marvin, christine, val\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "25ff54bb-bbdd-49bb-99dc-b837da39252c",
                "parentUUID": "9f49b727-6e2b-433a-a55e-705fee2d9338",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 20000,
            "file": "/project2.js",
            "uuid": "9f49b727-6e2b-433a-a55e-705fee2d9338",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Blue Smoke Magicians: usman, marvin, christine, val should render an app home page",
                "timedOut": false,
                "duration": 1434,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"http://guarded-oasis-40298.herokuapp.com/\",\n  \"assets/04-Blue-Smoke-Magicians_2017-05-20_10.png\",\n  \"https://github.com/usmanjamil83/BlueSmokeMagicians\",\n  \"Blue Smoke Magicians\",\n  \"usman, marvin, christine, val\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "25ff54bb-bbdd-49bb-99dc-b837da39252c",
                "parentUUID": "9f49b727-6e2b-433a-a55e-705fee2d9338",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1434,
            "rootEmpty": false
          },
          {
            "title": "Aluminum Falcons: jesus, seila, roberto, sandy",
            "suites": [],
            "tests": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Aluminum Falcons: jesus, seila, roberto, sandy should render an app home page",
                "timedOut": false,
                "duration": 9738,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://limitless-everglades-23900.herokuapp.com/\",\n  \"assets/05-Aluminum-Falcons_2017-05-20_10.png\",\n  \"https://github.com/91integ25/Aluminum_falcons\",\n  \"Aluminum Falcons\",\n  \"jesus, seila, roberto, sandy\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "8939ddc2-0a30-4e13-8473-2ba24997da7b",
                "parentUUID": "1f7fce89-1999-4559-bd38-329b6b6f6456",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 20000,
            "file": "/project2.js",
            "uuid": "1f7fce89-1999-4559-bd38-329b6b6f6456",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Aluminum Falcons: jesus, seila, roberto, sandy should render an app home page",
                "timedOut": false,
                "duration": 9738,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://limitless-everglades-23900.herokuapp.com/\",\n  \"assets/05-Aluminum-Falcons_2017-05-20_10.png\",\n  \"https://github.com/91integ25/Aluminum_falcons\",\n  \"Aluminum Falcons\",\n  \"jesus, seila, roberto, sandy\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "8939ddc2-0a30-4e13-8473-2ba24997da7b",
                "parentUUID": "1f7fce89-1999-4559-bd38-329b6b6f6456",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 9738,
            "rootEmpty": false
          },
          {
            "title": "Fighting Calypso Cookies: alex y, keythe, jimmia, heidi",
            "suites": [],
            "tests": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Fighting Calypso Cookies: alex y, keythe, jimmia, heidi should render an app home page",
                "timedOut": false,
                "duration": 8220,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://warm-atoll-35828.herokuapp.com/\",\n  \"assets/06-Fighting-Calypso-Cookies_2017-05-20_10.png\",\n  \"https://github.com/ayuan17/project2.git\",\n  \"Fighting Calypso Cookies\",\n  \"alex y, keythe, jimmia, heidi\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "2eee6523-6795-4c6e-aa4f-bef839eee593",
                "parentUUID": "1a751cea-738b-4372-b044-da7692f6f6be",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 20000,
            "file": "/project2.js",
            "uuid": "1a751cea-738b-4372-b044-da7692f6f6be",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Fighting Calypso Cookies: alex y, keythe, jimmia, heidi should render an app home page",
                "timedOut": false,
                "duration": 8220,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://warm-atoll-35828.herokuapp.com/\",\n  \"assets/06-Fighting-Calypso-Cookies_2017-05-20_10.png\",\n  \"https://github.com/ayuan17/project2.git\",\n  \"Fighting Calypso Cookies\",\n  \"alex y, keythe, jimmia, heidi\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "2eee6523-6795-4c6e-aa4f-bef839eee593",
                "parentUUID": "1a751cea-738b-4372-b044-da7692f6f6be",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 8220,
            "rootEmpty": false
          },
          {
            "title": "White Hot Snow: john b, brent, igho, monica",
            "suites": [],
            "tests": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check White Hot Snow: john b, brent, igho, monica should render an app home page",
                "timedOut": false,
                "duration": 12303,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://lit-everglades-62722.herokuapp.com/\",\n  \"assets/07-White-Hot-Snow_2017-05-20_10.png\",\n  \"https://github.com/Afroid/project2\",\n  \"White Hot Snow\",\n  \"john b, brent, igho, monica\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "efea1a5a-8b19-4f72-85e2-7d78fa7c78a6",
                "parentUUID": "78dc43f3-9a51-45ae-b39e-4aa7838eba78",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 20000,
            "file": "/project2.js",
            "uuid": "78dc43f3-9a51-45ae-b39e-4aa7838eba78",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check White Hot Snow: john b, brent, igho, monica should render an app home page",
                "timedOut": false,
                "duration": 12303,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://lit-everglades-62722.herokuapp.com/\",\n  \"assets/07-White-Hot-Snow_2017-05-20_10.png\",\n  \"https://github.com/Afroid/project2\",\n  \"White Hot Snow\",\n  \"john b, brent, igho, monica\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "efea1a5a-8b19-4f72-85e2-7d78fa7c78a6",
                "parentUUID": "78dc43f3-9a51-45ae-b39e-4aa7838eba78",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 12303,
            "rootEmpty": false
          },
          {
            "title": "Bits & Giggles: david, karlos, alex d, zach",
            "suites": [],
            "tests": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Bits & Giggles: david, karlos, alex d, zach should render an app home page",
                "timedOut": false,
                "duration": 2550,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://quiet-sea-77471.herokuapp.com\",\n  \"assets/08-Bits-&-Giggles_2017-05-20_10.png\",\n  \"https://github.com/ddye4265/bitsandgiggles\",\n  \"Bits & Giggles\",\n  \"david, karlos, alex d, zach\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "ac72a39c-410d-4bcc-82b0-4a4ffd87aa14",
                "parentUUID": "7e98c0bd-09d4-4f0b-a733-e687480c50d9",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 20000,
            "file": "/project2.js",
            "uuid": "7e98c0bd-09d4-4f0b-a733-e687480c50d9",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Bits & Giggles: david, karlos, alex d, zach should render an app home page",
                "timedOut": false,
                "duration": 2550,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://quiet-sea-77471.herokuapp.com\",\n  \"assets/08-Bits-&-Giggles_2017-05-20_10.png\",\n  \"https://github.com/ddye4265/bitsandgiggles\",\n  \"Bits & Giggles\",\n  \"david, karlos, alex d, zach\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "ac72a39c-410d-4bcc-82b0-4a4ffd87aa14",
                "parentUUID": "7e98c0bd-09d4-4f0b-a733-e687480c50d9",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2550,
            "rootEmpty": false
          },
          {
            "title": "Massive Confection: nooshin, mike b, michelle, jackie",
            "suites": [],
            "tests": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Massive Confection: nooshin, mike b, michelle, jackie should render an app home page",
                "timedOut": false,
                "duration": 4769,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://mysterious-island-39661.herokuapp.com/\",\n  \"assets/09-Massive-Confection_2017-05-20_10.png\",\n  \"https://github.com/mikesbass/studentSearch.git\",\n  \"Massive Confection\",\n  \"nooshin, mike b, michelle, jackie\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "1de74f09-3987-4967-8c0f-bcc92f205ed7",
                "parentUUID": "94afb857-a3d7-4904-bd89-bec78556a060",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 20000,
            "file": "/project2.js",
            "uuid": "94afb857-a3d7-4904-bd89-bec78556a060",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Massive Confection: nooshin, mike b, michelle, jackie should render an app home page",
                "timedOut": false,
                "duration": 4769,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://mysterious-island-39661.herokuapp.com/\",\n  \"assets/09-Massive-Confection_2017-05-20_10.png\",\n  \"https://github.com/mikesbass/studentSearch.git\",\n  \"Massive Confection\",\n  \"nooshin, mike b, michelle, jackie\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "1de74f09-3987-4967-8c0f-bcc92f205ed7",
                "parentUUID": "94afb857-a3d7-4904-bd89-bec78556a060",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 4769,
            "rootEmpty": false
          },
          {
            "title": "File Jackers: shakir, eric f, caroline, trenton",
            "suites": [],
            "tests": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check File Jackers: shakir, eric f, caroline, trenton should render an app home page",
                "timedOut": false,
                "duration": 12884,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"http://ga-tech.homuncul.us:8081/\",\n  \"assets/10-File-Jackers_2017-05-20_10.png\",\n  \"http://gt.bootcampcontent.com/filejackers/project-2\",\n  \"File Jackers\",\n  \"shakir, eric f, caroline, trenton\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "d67ecf00-3bde-4a94-b88f-d5c5e1703322",
                "parentUUID": "20f3e05d-918c-4432-bc14-026a43ee1fdb",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 20000,
            "file": "/project2.js",
            "uuid": "20f3e05d-918c-4432-bc14-026a43ee1fdb",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check File Jackers: shakir, eric f, caroline, trenton should render an app home page",
                "timedOut": false,
                "duration": 12884,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"http://ga-tech.homuncul.us:8081/\",\n  \"assets/10-File-Jackers_2017-05-20_10.png\",\n  \"http://gt.bootcampcontent.com/filejackers/project-2\",\n  \"File Jackers\",\n  \"shakir, eric f, caroline, trenton\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "d67ecf00-3bde-4a94-b88f-d5c5e1703322",
                "parentUUID": "20f3e05d-918c-4432-bc14-026a43ee1fdb",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 12884,
            "rootEmpty": false
          },
          {
            "title": "Midnight Sun Giants: london, andrew, tyler, jameel",
            "suites": [],
            "tests": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Midnight Sun Giants: london, andrew, tyler, jameel should render an app home page",
                "timedOut": false,
                "duration": 1022,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://group-project-2.herokuapp.com/\",\n  \"assets/11-Midnight-Sun-Giants_2017-05-20_10.png\",\n  \"https://github.com/TylerCovington/Group-Project-2\",\n  \"Midnight Sun Giants\",\n  \"london, andrew, tyler, jameel\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "8722951c-29a0-4f39-8332-f02b8c36627a",
                "parentUUID": "96758606-d1b8-4e1e-a535-8f8ef298ede8",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 20000,
            "file": "/project2.js",
            "uuid": "96758606-d1b8-4e1e-a535-8f8ef298ede8",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Midnight Sun Giants: london, andrew, tyler, jameel should render an app home page",
                "timedOut": false,
                "duration": 1022,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://group-project-2.herokuapp.com/\",\n  \"assets/11-Midnight-Sun-Giants_2017-05-20_10.png\",\n  \"https://github.com/TylerCovington/Group-Project-2\",\n  \"Midnight Sun Giants\",\n  \"london, andrew, tyler, jameel\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "8722951c-29a0-4f39-8332-f02b8c36627a",
                "parentUUID": "96758606-d1b8-4e1e-a535-8f8ef298ede8",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1022,
            "rootEmpty": false
          },
          {
            "title": "Habitual Green Killers: sungbum, jon w, danny, sylvester",
            "suites": [],
            "tests": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Habitual Green Killers: sungbum, jon w, danny, sylvester should render an app home page",
                "timedOut": false,
                "duration": 7440,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://whispering-eyrie-80456.herokuapp.com/\",\n  \"assets/12-Habitual-Green-Killers_2017-05-20_10.png\",\n  \"https://github.com/dannyjwkim/Stock-Market-Game\",\n  \"Habitual Green Killers\",\n  \"sungbum, jon w, danny, sylvester\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "63aeabba-2531-4e60-9ae4-78fb27d6c19d",
                "parentUUID": "1048e92c-c1d9-40fb-9269-c370b6033bd0",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 20000,
            "file": "/project2.js",
            "uuid": "1048e92c-c1d9-40fb-9269-c370b6033bd0",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Habitual Green Killers: sungbum, jon w, danny, sylvester should render an app home page",
                "timedOut": false,
                "duration": 7440,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://whispering-eyrie-80456.herokuapp.com/\",\n  \"assets/12-Habitual-Green-Killers_2017-05-20_10.png\",\n  \"https://github.com/dannyjwkim/Stock-Market-Game\",\n  \"Habitual Green Killers\",\n  \"sungbum, jon w, danny, sylvester\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "63aeabba-2531-4e60-9ae4-78fb27d6c19d",
                "parentUUID": "1048e92c-c1d9-40fb-9269-c370b6033bd0",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 7440,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/project2.js",
        "uuid": "c73ee283-9ac3-4a12-bc47-97dd09c38031",
        "failedHooks": [],
        "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasFailedHooks": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "396bc1fa-9644-4bdf-9fbc-23111bbc1079",
    "failedHooks": [],
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasFailedHooks": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "should render an app home page",
      "fullTitle": "Illegal Operations: ryan, martin, jieun, emily should render an app home page",
      "timedOut": false,
      "duration": 5083,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://illegal-formation.herokuapp.com/\",\n  \"assets/00-Illegal-Operations_2017-05-20_10.png\",\n  \"https://github.com/rrodwell/IllegalOperations\",\n  \"Illegal Operations\",\n  \"ryan, martin, jieun, emily\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "1d8794b4-89a6-4eab-a3e5-f140c574d78f",
      "parentUUID": "6c2c6549-c86f-42e5-b263-3c579aaff3b9",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Tab Nabbers: cody, eric g, esterling, ashley should render an app home page",
      "timedOut": false,
      "duration": 4427,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://bootcruit.herokuapp.com\",\n  \"assets/01-Tab-Nabbers_2017-05-20_10.png\",\n  \"https://github.com/accimeesterlin/Tab-Nabbers.git\",\n  \"Tab Nabbers\",\n  \"cody, eric g, esterling, ashley\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "c5a79908-b5c8-42dc-96e7-ed83ba4fb909",
      "parentUUID": "7fab7471-7a97-49ba-be24-45ceecf3f523",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Strict Mode: les, trent, laurie, lisa should render an app home page",
      "timedOut": false,
      "duration": 1780,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://warm-brushlands-86718.herokuapp.com/\",\n  \"assets/02-Strict-Mode_2017-05-20_10.png\",\n  \"https://github.com/haginl1/digitalPricing\",\n  \"Strict Mode\",\n  \"les, trent, laurie, lisa\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "6ee13c56-6b86-4a1f-b3dd-4f973b3ccdec",
      "parentUUID": "649eca0d-5923-400d-90cd-5c6c0798937a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Major Cache: matt, nicole, cashuna, heather should render an app home page",
      "timedOut": false,
      "duration": 19053,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://warm-savannah-50461.herokuapp.com/\",\n  \"assets/03-Major-Cache_2017-05-20_10.png\",\n  \"https://github.com/lockwoni/plant-care\",\n  \"Major Cache\",\n  \"matt, nicole, cashuna, heather\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "ae47f119-8e9b-498f-84a6-c4e7ee1def5e",
      "parentUUID": "87dd20c5-3961-4613-9dca-14d4df618021",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Blue Smoke Magicians: usman, marvin, christine, val should render an app home page",
      "timedOut": false,
      "duration": 1434,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"http://guarded-oasis-40298.herokuapp.com/\",\n  \"assets/04-Blue-Smoke-Magicians_2017-05-20_10.png\",\n  \"https://github.com/usmanjamil83/BlueSmokeMagicians\",\n  \"Blue Smoke Magicians\",\n  \"usman, marvin, christine, val\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "25ff54bb-bbdd-49bb-99dc-b837da39252c",
      "parentUUID": "9f49b727-6e2b-433a-a55e-705fee2d9338",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Aluminum Falcons: jesus, seila, roberto, sandy should render an app home page",
      "timedOut": false,
      "duration": 9738,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://limitless-everglades-23900.herokuapp.com/\",\n  \"assets/05-Aluminum-Falcons_2017-05-20_10.png\",\n  \"https://github.com/91integ25/Aluminum_falcons\",\n  \"Aluminum Falcons\",\n  \"jesus, seila, roberto, sandy\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "8939ddc2-0a30-4e13-8473-2ba24997da7b",
      "parentUUID": "1f7fce89-1999-4559-bd38-329b6b6f6456",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Fighting Calypso Cookies: alex y, keythe, jimmia, heidi should render an app home page",
      "timedOut": false,
      "duration": 8220,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://warm-atoll-35828.herokuapp.com/\",\n  \"assets/06-Fighting-Calypso-Cookies_2017-05-20_10.png\",\n  \"https://github.com/ayuan17/project2.git\",\n  \"Fighting Calypso Cookies\",\n  \"alex y, keythe, jimmia, heidi\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "2eee6523-6795-4c6e-aa4f-bef839eee593",
      "parentUUID": "1a751cea-738b-4372-b044-da7692f6f6be",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "White Hot Snow: john b, brent, igho, monica should render an app home page",
      "timedOut": false,
      "duration": 12303,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://lit-everglades-62722.herokuapp.com/\",\n  \"assets/07-White-Hot-Snow_2017-05-20_10.png\",\n  \"https://github.com/Afroid/project2\",\n  \"White Hot Snow\",\n  \"john b, brent, igho, monica\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "efea1a5a-8b19-4f72-85e2-7d78fa7c78a6",
      "parentUUID": "78dc43f3-9a51-45ae-b39e-4aa7838eba78",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Bits & Giggles: david, karlos, alex d, zach should render an app home page",
      "timedOut": false,
      "duration": 2550,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://quiet-sea-77471.herokuapp.com\",\n  \"assets/08-Bits-&-Giggles_2017-05-20_10.png\",\n  \"https://github.com/ddye4265/bitsandgiggles\",\n  \"Bits & Giggles\",\n  \"david, karlos, alex d, zach\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "ac72a39c-410d-4bcc-82b0-4a4ffd87aa14",
      "parentUUID": "7e98c0bd-09d4-4f0b-a733-e687480c50d9",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Massive Confection: nooshin, mike b, michelle, jackie should render an app home page",
      "timedOut": false,
      "duration": 4769,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://mysterious-island-39661.herokuapp.com/\",\n  \"assets/09-Massive-Confection_2017-05-20_10.png\",\n  \"https://github.com/mikesbass/studentSearch.git\",\n  \"Massive Confection\",\n  \"nooshin, mike b, michelle, jackie\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "1de74f09-3987-4967-8c0f-bcc92f205ed7",
      "parentUUID": "94afb857-a3d7-4904-bd89-bec78556a060",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "File Jackers: shakir, eric f, caroline, trenton should render an app home page",
      "timedOut": false,
      "duration": 12884,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"http://ga-tech.homuncul.us:8081/\",\n  \"assets/10-File-Jackers_2017-05-20_10.png\",\n  \"http://gt.bootcampcontent.com/filejackers/project-2\",\n  \"File Jackers\",\n  \"shakir, eric f, caroline, trenton\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "d67ecf00-3bde-4a94-b88f-d5c5e1703322",
      "parentUUID": "20f3e05d-918c-4432-bc14-026a43ee1fdb",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Midnight Sun Giants: london, andrew, tyler, jameel should render an app home page",
      "timedOut": false,
      "duration": 1022,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://group-project-2.herokuapp.com/\",\n  \"assets/11-Midnight-Sun-Giants_2017-05-20_10.png\",\n  \"https://github.com/TylerCovington/Group-Project-2\",\n  \"Midnight Sun Giants\",\n  \"london, andrew, tyler, jameel\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "8722951c-29a0-4f39-8332-f02b8c36627a",
      "parentUUID": "96758606-d1b8-4e1e-a535-8f8ef298ede8",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Habitual Green Killers: sungbum, jon w, danny, sylvester should render an app home page",
      "timedOut": false,
      "duration": 7440,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://whispering-eyrie-80456.herokuapp.com/\",\n  \"assets/12-Habitual-Green-Killers_2017-05-20_10.png\",\n  \"https://github.com/dannyjwkim/Stock-Market-Game\",\n  \"Habitual Green Killers\",\n  \"sungbum, jon w, danny, sylvester\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "63aeabba-2531-4e60-9ae4-78fb27d6c19d",
      "parentUUID": "1048e92c-c1d9-40fb-9269-c370b6033bd0",
      "isHook": false,
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "should render an app home page",
      "fullTitle": "Illegal Operations: ryan, martin, jieun, emily should render an app home page",
      "timedOut": false,
      "duration": 5083,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://illegal-formation.herokuapp.com/\",\n  \"assets/00-Illegal-Operations_2017-05-20_10.png\",\n  \"https://github.com/rrodwell/IllegalOperations\",\n  \"Illegal Operations\",\n  \"ryan, martin, jieun, emily\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "1d8794b4-89a6-4eab-a3e5-f140c574d78f",
      "parentUUID": "6c2c6549-c86f-42e5-b263-3c579aaff3b9",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Tab Nabbers: cody, eric g, esterling, ashley should render an app home page",
      "timedOut": false,
      "duration": 4427,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://bootcruit.herokuapp.com\",\n  \"assets/01-Tab-Nabbers_2017-05-20_10.png\",\n  \"https://github.com/accimeesterlin/Tab-Nabbers.git\",\n  \"Tab Nabbers\",\n  \"cody, eric g, esterling, ashley\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "c5a79908-b5c8-42dc-96e7-ed83ba4fb909",
      "parentUUID": "7fab7471-7a97-49ba-be24-45ceecf3f523",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Strict Mode: les, trent, laurie, lisa should render an app home page",
      "timedOut": false,
      "duration": 1780,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://warm-brushlands-86718.herokuapp.com/\",\n  \"assets/02-Strict-Mode_2017-05-20_10.png\",\n  \"https://github.com/haginl1/digitalPricing\",\n  \"Strict Mode\",\n  \"les, trent, laurie, lisa\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "6ee13c56-6b86-4a1f-b3dd-4f973b3ccdec",
      "parentUUID": "649eca0d-5923-400d-90cd-5c6c0798937a",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Major Cache: matt, nicole, cashuna, heather should render an app home page",
      "timedOut": false,
      "duration": 19053,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://warm-savannah-50461.herokuapp.com/\",\n  \"assets/03-Major-Cache_2017-05-20_10.png\",\n  \"https://github.com/lockwoni/plant-care\",\n  \"Major Cache\",\n  \"matt, nicole, cashuna, heather\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "ae47f119-8e9b-498f-84a6-c4e7ee1def5e",
      "parentUUID": "87dd20c5-3961-4613-9dca-14d4df618021",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Blue Smoke Magicians: usman, marvin, christine, val should render an app home page",
      "timedOut": false,
      "duration": 1434,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"http://guarded-oasis-40298.herokuapp.com/\",\n  \"assets/04-Blue-Smoke-Magicians_2017-05-20_10.png\",\n  \"https://github.com/usmanjamil83/BlueSmokeMagicians\",\n  \"Blue Smoke Magicians\",\n  \"usman, marvin, christine, val\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "25ff54bb-bbdd-49bb-99dc-b837da39252c",
      "parentUUID": "9f49b727-6e2b-433a-a55e-705fee2d9338",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Aluminum Falcons: jesus, seila, roberto, sandy should render an app home page",
      "timedOut": false,
      "duration": 9738,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://limitless-everglades-23900.herokuapp.com/\",\n  \"assets/05-Aluminum-Falcons_2017-05-20_10.png\",\n  \"https://github.com/91integ25/Aluminum_falcons\",\n  \"Aluminum Falcons\",\n  \"jesus, seila, roberto, sandy\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "8939ddc2-0a30-4e13-8473-2ba24997da7b",
      "parentUUID": "1f7fce89-1999-4559-bd38-329b6b6f6456",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Fighting Calypso Cookies: alex y, keythe, jimmia, heidi should render an app home page",
      "timedOut": false,
      "duration": 8220,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://warm-atoll-35828.herokuapp.com/\",\n  \"assets/06-Fighting-Calypso-Cookies_2017-05-20_10.png\",\n  \"https://github.com/ayuan17/project2.git\",\n  \"Fighting Calypso Cookies\",\n  \"alex y, keythe, jimmia, heidi\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "2eee6523-6795-4c6e-aa4f-bef839eee593",
      "parentUUID": "1a751cea-738b-4372-b044-da7692f6f6be",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "White Hot Snow: john b, brent, igho, monica should render an app home page",
      "timedOut": false,
      "duration": 12303,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://lit-everglades-62722.herokuapp.com/\",\n  \"assets/07-White-Hot-Snow_2017-05-20_10.png\",\n  \"https://github.com/Afroid/project2\",\n  \"White Hot Snow\",\n  \"john b, brent, igho, monica\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "efea1a5a-8b19-4f72-85e2-7d78fa7c78a6",
      "parentUUID": "78dc43f3-9a51-45ae-b39e-4aa7838eba78",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Bits & Giggles: david, karlos, alex d, zach should render an app home page",
      "timedOut": false,
      "duration": 2550,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://quiet-sea-77471.herokuapp.com\",\n  \"assets/08-Bits-&-Giggles_2017-05-20_10.png\",\n  \"https://github.com/ddye4265/bitsandgiggles\",\n  \"Bits & Giggles\",\n  \"david, karlos, alex d, zach\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "ac72a39c-410d-4bcc-82b0-4a4ffd87aa14",
      "parentUUID": "7e98c0bd-09d4-4f0b-a733-e687480c50d9",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Massive Confection: nooshin, mike b, michelle, jackie should render an app home page",
      "timedOut": false,
      "duration": 4769,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://mysterious-island-39661.herokuapp.com/\",\n  \"assets/09-Massive-Confection_2017-05-20_10.png\",\n  \"https://github.com/mikesbass/studentSearch.git\",\n  \"Massive Confection\",\n  \"nooshin, mike b, michelle, jackie\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "1de74f09-3987-4967-8c0f-bcc92f205ed7",
      "parentUUID": "94afb857-a3d7-4904-bd89-bec78556a060",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "File Jackers: shakir, eric f, caroline, trenton should render an app home page",
      "timedOut": false,
      "duration": 12884,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"http://ga-tech.homuncul.us:8081/\",\n  \"assets/10-File-Jackers_2017-05-20_10.png\",\n  \"http://gt.bootcampcontent.com/filejackers/project-2\",\n  \"File Jackers\",\n  \"shakir, eric f, caroline, trenton\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "d67ecf00-3bde-4a94-b88f-d5c5e1703322",
      "parentUUID": "20f3e05d-918c-4432-bc14-026a43ee1fdb",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Midnight Sun Giants: london, andrew, tyler, jameel should render an app home page",
      "timedOut": false,
      "duration": 1022,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://group-project-2.herokuapp.com/\",\n  \"assets/11-Midnight-Sun-Giants_2017-05-20_10.png\",\n  \"https://github.com/TylerCovington/Group-Project-2\",\n  \"Midnight Sun Giants\",\n  \"london, andrew, tyler, jameel\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "8722951c-29a0-4f39-8332-f02b8c36627a",
      "parentUUID": "96758606-d1b8-4e1e-a535-8f8ef298ede8",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Habitual Green Killers: sungbum, jon w, danny, sylvester should render an app home page",
      "timedOut": false,
      "duration": 7440,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://whispering-eyrie-80456.herokuapp.com/\",\n  \"assets/12-Habitual-Green-Killers_2017-05-20_10.png\",\n  \"https://github.com/dannyjwkim/Stock-Market-Game\",\n  \"Habitual Green Killers\",\n  \"sungbum, jon w, danny, sylvester\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "63aeabba-2531-4e60-9ae4-78fb27d6c19d",
      "parentUUID": "1048e92c-c1d9-40fb-9269-c370b6033bd0",
      "isHook": false,
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2017
}