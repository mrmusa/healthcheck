{
  "stats": {
    "suites": 14,
    "tests": 13,
    "passes": 12,
    "pending": 0,
    "failures": 1,
    "start": "2017-05-17T21:31:35.180Z",
    "end": "2017-05-17T21:32:47.767Z",
    "duration": 72587,
    "testsRegistered": 13,
    "passPercent": 92.3,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "Project 2 Health Check",
        "suites": [
          {
            "title": "Illegal Operations: ryan, martin, jieun, emily",
            "suites": [],
            "tests": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Illegal Operations: ryan, martin, jieun, emily should render an app home page",
                "timedOut": false,
                "duration": 5738,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://illegal-formation.herokuapp.com/\",\n  \"assets/00-Illegal-Operations_2017-05-17_17.png\",\n  \"https://github.com/rrodwell/IllegalOperations\",\n  \"Illegal Operations\",\n  \"ryan, martin, jieun, emily\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "cdc806b1-5e12-4cb9-8795-3eacd7658710",
                "parentUUID": "ef23ca86-b497-4dc4-9dc6-29493cda56f2",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 20000,
            "file": "/project2.js",
            "uuid": "ef23ca86-b497-4dc4-9dc6-29493cda56f2",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Illegal Operations: ryan, martin, jieun, emily should render an app home page",
                "timedOut": false,
                "duration": 5738,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://illegal-formation.herokuapp.com/\",\n  \"assets/00-Illegal-Operations_2017-05-17_17.png\",\n  \"https://github.com/rrodwell/IllegalOperations\",\n  \"Illegal Operations\",\n  \"ryan, martin, jieun, emily\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "cdc806b1-5e12-4cb9-8795-3eacd7658710",
                "parentUUID": "ef23ca86-b497-4dc4-9dc6-29493cda56f2",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 5738,
            "rootEmpty": false
          },
          {
            "title": "Tab Nabbers: cody, eric g, esterling, ashley",
            "suites": [],
            "tests": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Tab Nabbers: cody, eric g, esterling, ashley should render an app home page",
                "timedOut": false,
                "duration": 1083,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://bootcruit.herokuapp.com\",\n  \"assets/01-Tab-Nabbers_2017-05-17_17.png\",\n  \"https://github.com/accimeesterlin/Tab-Nabbers.git\",\n  \"Tab Nabbers\",\n  \"cody, eric g, esterling, ashley\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "6c33a4a1-b223-45fa-8437-8824842e41a3",
                "parentUUID": "9bee0e0e-d242-4e0b-93fc-692262e11ae5",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 20000,
            "file": "/project2.js",
            "uuid": "9bee0e0e-d242-4e0b-93fc-692262e11ae5",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Tab Nabbers: cody, eric g, esterling, ashley should render an app home page",
                "timedOut": false,
                "duration": 1083,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://bootcruit.herokuapp.com\",\n  \"assets/01-Tab-Nabbers_2017-05-17_17.png\",\n  \"https://github.com/accimeesterlin/Tab-Nabbers.git\",\n  \"Tab Nabbers\",\n  \"cody, eric g, esterling, ashley\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "6c33a4a1-b223-45fa-8437-8824842e41a3",
                "parentUUID": "9bee0e0e-d242-4e0b-93fc-692262e11ae5",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1083,
            "rootEmpty": false
          },
          {
            "title": "Strict Mode: les, trent, laurie, lisa",
            "suites": [],
            "tests": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Strict Mode: les, trent, laurie, lisa should render an app home page",
                "timedOut": false,
                "duration": 2448,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://warm-brushlands-86718.herokuapp.com/\",\n  \"assets/02-Strict-Mode_2017-05-17_17.png\",\n  \"https://github.com/haginl1/digitalPricing\",\n  \"Strict Mode\",\n  \"les, trent, laurie, lisa\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "3c50effe-033a-4487-bfd7-486ee83974ea",
                "parentUUID": "5ae5a8ec-902a-4bfb-9418-0a5f382ae5f1",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 20000,
            "file": "/project2.js",
            "uuid": "5ae5a8ec-902a-4bfb-9418-0a5f382ae5f1",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Strict Mode: les, trent, laurie, lisa should render an app home page",
                "timedOut": false,
                "duration": 2448,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://warm-brushlands-86718.herokuapp.com/\",\n  \"assets/02-Strict-Mode_2017-05-17_17.png\",\n  \"https://github.com/haginl1/digitalPricing\",\n  \"Strict Mode\",\n  \"les, trent, laurie, lisa\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "3c50effe-033a-4487-bfd7-486ee83974ea",
                "parentUUID": "5ae5a8ec-902a-4bfb-9418-0a5f382ae5f1",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2448,
            "rootEmpty": false
          },
          {
            "title": "Major Cache: matt, nicole, cashuna, heather",
            "suites": [],
            "tests": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Major Cache: matt, nicole, cashuna, heather should render an app home page",
                "timedOut": false,
                "duration": 1462,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://warm-savannah-50461.herokuapp.com/\",\n  \"assets/03-Major-Cache_2017-05-17_17.png\",\n  \"https://github.com/lockwoni/plant-care\",\n  \"Major Cache\",\n  \"matt, nicole, cashuna, heather\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "27815d8c-a2da-4676-92a8-a0651128a382",
                "parentUUID": "9f861378-8872-4598-9908-8bcae615abad",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 20000,
            "file": "/project2.js",
            "uuid": "9f861378-8872-4598-9908-8bcae615abad",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Major Cache: matt, nicole, cashuna, heather should render an app home page",
                "timedOut": false,
                "duration": 1462,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://warm-savannah-50461.herokuapp.com/\",\n  \"assets/03-Major-Cache_2017-05-17_17.png\",\n  \"https://github.com/lockwoni/plant-care\",\n  \"Major Cache\",\n  \"matt, nicole, cashuna, heather\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "27815d8c-a2da-4676-92a8-a0651128a382",
                "parentUUID": "9f861378-8872-4598-9908-8bcae615abad",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1462,
            "rootEmpty": false
          },
          {
            "title": "Blue Smoke Magicians: usman, marvin, christine, val",
            "suites": [],
            "tests": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Blue Smoke Magicians: usman, marvin, christine, val should render an app home page",
                "timedOut": false,
                "duration": 2612,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"http://guarded-oasis-40298.herokuapp.com/\",\n  \"assets/04-Blue-Smoke-Magicians_2017-05-17_17.png\",\n  \"https://github.com/usmanjamil83/BlueSmokeMagicians\",\n  \"Blue Smoke Magicians\",\n  \"usman, marvin, christine, val\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "da42b533-76e0-45a0-9b9e-1f0422ed3a40",
                "parentUUID": "5d64dc21-f4f6-47dd-8620-d176813ca837",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 20000,
            "file": "/project2.js",
            "uuid": "5d64dc21-f4f6-47dd-8620-d176813ca837",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Blue Smoke Magicians: usman, marvin, christine, val should render an app home page",
                "timedOut": false,
                "duration": 2612,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"http://guarded-oasis-40298.herokuapp.com/\",\n  \"assets/04-Blue-Smoke-Magicians_2017-05-17_17.png\",\n  \"https://github.com/usmanjamil83/BlueSmokeMagicians\",\n  \"Blue Smoke Magicians\",\n  \"usman, marvin, christine, val\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "da42b533-76e0-45a0-9b9e-1f0422ed3a40",
                "parentUUID": "5d64dc21-f4f6-47dd-8620-d176813ca837",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2612,
            "rootEmpty": false
          },
          {
            "title": "Aluminum Falcons: jesus, seila, roberto, sandy",
            "suites": [],
            "tests": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Aluminum Falcons: jesus, seila, roberto, sandy should render an app home page",
                "timedOut": false,
                "duration": 11290,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://limitless-everglades-23900.herokuapp.com/\",\n  \"assets/05-Aluminum-Falcons_2017-05-17_17.png\",\n  \"https://github.com/91integ25/Aluminum_falcons\",\n  \"Aluminum Falcons\",\n  \"jesus, seila, roberto, sandy\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "1ba26b2c-e1dd-49ba-bfcb-af0f86243e6c",
                "parentUUID": "57ad9452-c921-4f40-9fd8-423f77dcf295",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 20000,
            "file": "/project2.js",
            "uuid": "57ad9452-c921-4f40-9fd8-423f77dcf295",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Aluminum Falcons: jesus, seila, roberto, sandy should render an app home page",
                "timedOut": false,
                "duration": 11290,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://limitless-everglades-23900.herokuapp.com/\",\n  \"assets/05-Aluminum-Falcons_2017-05-17_17.png\",\n  \"https://github.com/91integ25/Aluminum_falcons\",\n  \"Aluminum Falcons\",\n  \"jesus, seila, roberto, sandy\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "1ba26b2c-e1dd-49ba-bfcb-af0f86243e6c",
                "parentUUID": "57ad9452-c921-4f40-9fd8-423f77dcf295",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 11290,
            "rootEmpty": false
          },
          {
            "title": "Fighting Calypso Cookies: alex y, keythe, jimmia, heidi",
            "suites": [],
            "tests": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Fighting Calypso Cookies: alex y, keythe, jimmia, heidi should render an app home page",
                "timedOut": false,
                "duration": 6885,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://warm-atoll-35828.herokuapp.com/\",\n  \"assets/06-Fighting-Calypso-Cookies_2017-05-17_17.png\",\n  \"https://github.com/ayuan17/project2.git\",\n  \"Fighting Calypso Cookies\",\n  \"alex y, keythe, jimmia, heidi\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "c056c191-217e-4570-9a7b-e16056ae35b3",
                "parentUUID": "69c814ae-83fd-4492-a68d-a3110b548599",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 20000,
            "file": "/project2.js",
            "uuid": "69c814ae-83fd-4492-a68d-a3110b548599",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Fighting Calypso Cookies: alex y, keythe, jimmia, heidi should render an app home page",
                "timedOut": false,
                "duration": 6885,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://warm-atoll-35828.herokuapp.com/\",\n  \"assets/06-Fighting-Calypso-Cookies_2017-05-17_17.png\",\n  \"https://github.com/ayuan17/project2.git\",\n  \"Fighting Calypso Cookies\",\n  \"alex y, keythe, jimmia, heidi\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "c056c191-217e-4570-9a7b-e16056ae35b3",
                "parentUUID": "69c814ae-83fd-4492-a68d-a3110b548599",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 6885,
            "rootEmpty": false
          },
          {
            "title": "White Hot Snow: john b, brent, igho, monica",
            "suites": [],
            "tests": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check White Hot Snow: john b, brent, igho, monica should render an app home page",
                "timedOut": false,
                "duration": 15259,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://lit-everglades-62722.herokuapp.com/\",\n  \"assets/07-White-Hot-Snow_2017-05-17_17.png\",\n  \"https://github.com/Afroid/project2\",\n  \"White Hot Snow\",\n  \"john b, brent, igho, monica\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "13b94df8-3093-4fac-8fce-a0d8f4a7cb19",
                "parentUUID": "0dae2d33-9942-4d75-a28f-a395a3fe3acd",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 20000,
            "file": "/project2.js",
            "uuid": "0dae2d33-9942-4d75-a28f-a395a3fe3acd",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check White Hot Snow: john b, brent, igho, monica should render an app home page",
                "timedOut": false,
                "duration": 15259,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://lit-everglades-62722.herokuapp.com/\",\n  \"assets/07-White-Hot-Snow_2017-05-17_17.png\",\n  \"https://github.com/Afroid/project2\",\n  \"White Hot Snow\",\n  \"john b, brent, igho, monica\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "13b94df8-3093-4fac-8fce-a0d8f4a7cb19",
                "parentUUID": "0dae2d33-9942-4d75-a28f-a395a3fe3acd",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 15259,
            "rootEmpty": false
          },
          {
            "title": "Bits & Giggles: david, karlos, alex d, zach",
            "suites": [],
            "tests": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Bits & Giggles: david, karlos, alex d, zach should render an app home page",
                "timedOut": false,
                "duration": 1406,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://quiet-sea-77471.herokuapp.com\",\n  \"assets/08-Bits-&-Giggles_2017-05-17_17.png\",\n  \"https://github.com/ddye4265/bitsandgiggles\",\n  \"Bits & Giggles\",\n  \"david, karlos, alex d, zach\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "3e6331a2-4f11-4233-aef6-c82046175be3",
                "parentUUID": "f0aa67a6-8841-4aaf-906b-208b150a1592",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 20000,
            "file": "/project2.js",
            "uuid": "f0aa67a6-8841-4aaf-906b-208b150a1592",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Bits & Giggles: david, karlos, alex d, zach should render an app home page",
                "timedOut": false,
                "duration": 1406,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://quiet-sea-77471.herokuapp.com\",\n  \"assets/08-Bits-&-Giggles_2017-05-17_17.png\",\n  \"https://github.com/ddye4265/bitsandgiggles\",\n  \"Bits & Giggles\",\n  \"david, karlos, alex d, zach\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "3e6331a2-4f11-4233-aef6-c82046175be3",
                "parentUUID": "f0aa67a6-8841-4aaf-906b-208b150a1592",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1406,
            "rootEmpty": false
          },
          {
            "title": "Massive Confection: nooshin, mike b, michelle, jackie",
            "suites": [],
            "tests": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Massive Confection: nooshin, mike b, michelle, jackie should render an app home page",
                "timedOut": false,
                "duration": 1580,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://mysterious-island-39661.herokuapp.com/\",\n  \"assets/09-Massive-Confection_2017-05-17_17.png\",\n  \"https://github.com/mikesbass/studentSearch.git\",\n  \"Massive Confection\",\n  \"nooshin, mike b, michelle, jackie\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "27e8960b-850b-448c-9d13-2b0b0dcd4616",
                "parentUUID": "7eb43e96-10e2-40b5-876c-25735cf9e0cf",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 20000,
            "file": "/project2.js",
            "uuid": "7eb43e96-10e2-40b5-876c-25735cf9e0cf",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Massive Confection: nooshin, mike b, michelle, jackie should render an app home page",
                "timedOut": false,
                "duration": 1580,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://mysterious-island-39661.herokuapp.com/\",\n  \"assets/09-Massive-Confection_2017-05-17_17.png\",\n  \"https://github.com/mikesbass/studentSearch.git\",\n  \"Massive Confection\",\n  \"nooshin, mike b, michelle, jackie\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "27e8960b-850b-448c-9d13-2b0b0dcd4616",
                "parentUUID": "7eb43e96-10e2-40b5-876c-25735cf9e0cf",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1580,
            "rootEmpty": false
          },
          {
            "title": "File Jackers: shakir, eric f, caroline, trenton",
            "suites": [],
            "tests": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check File Jackers: shakir, eric f, caroline, trenton should render an app home page",
                "timedOut": true,
                "duration": 20003,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "context": "[\n  \"http://ga-tech.homuncul.us:8081/\",\n  \"assets/10-File-Jackers_2017-05-17_17.png\",\n  \"http://gt.bootcampcontent.com/filejackers/project-2\",\n  \"File Jackers\",\n  \"shakir, eric f, caroline, trenton\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {
                  "estack": "Error: Timeout of 20000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves."
                },
                "isRoot": false,
                "uuid": "c56803c5-6d0e-4c66-8f37-dc45a1ae9318",
                "parentUUID": "eab66b9e-375d-4d5e-8b03-99d65a1afa88",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 20000,
            "file": "/project2.js",
            "uuid": "eab66b9e-375d-4d5e-8b03-99d65a1afa88",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [],
            "failures": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check File Jackers: shakir, eric f, caroline, trenton should render an app home page",
                "timedOut": true,
                "duration": 20003,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "context": "[\n  \"http://ga-tech.homuncul.us:8081/\",\n  \"assets/10-File-Jackers_2017-05-17_17.png\",\n  \"http://gt.bootcampcontent.com/filejackers/project-2\",\n  \"File Jackers\",\n  \"shakir, eric f, caroline, trenton\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {
                  "estack": "Error: Timeout of 20000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves."
                },
                "isRoot": false,
                "uuid": "c56803c5-6d0e-4c66-8f37-dc45a1ae9318",
                "parentUUID": "eab66b9e-375d-4d5e-8b03-99d65a1afa88",
                "isHook": false,
                "skipped": false
              }
            ],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 1,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": true,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 20003,
            "rootEmpty": false
          },
          {
            "title": "Midnight Sun Giants: london, andrew, tyler, jameel",
            "suites": [],
            "tests": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Midnight Sun Giants: london, andrew, tyler, jameel should render an app home page",
                "timedOut": false,
                "duration": 1582,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://group-project-2.herokuapp.com/\",\n  \"assets/11-Midnight-Sun-Giants_2017-05-17_17.png\",\n  \"https://github.com/TylerCovington/Group-Project-2\",\n  \"Midnight Sun Giants\",\n  \"london, andrew, tyler, jameel\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "1778b19a-706b-4cce-93da-c3fe90dd8193",
                "parentUUID": "56a91ef1-94f9-45ca-8173-f5992eb070e4",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 20000,
            "file": "/project2.js",
            "uuid": "56a91ef1-94f9-45ca-8173-f5992eb070e4",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Midnight Sun Giants: london, andrew, tyler, jameel should render an app home page",
                "timedOut": false,
                "duration": 1582,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://group-project-2.herokuapp.com/\",\n  \"assets/11-Midnight-Sun-Giants_2017-05-17_17.png\",\n  \"https://github.com/TylerCovington/Group-Project-2\",\n  \"Midnight Sun Giants\",\n  \"london, andrew, tyler, jameel\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "1778b19a-706b-4cce-93da-c3fe90dd8193",
                "parentUUID": "56a91ef1-94f9-45ca-8173-f5992eb070e4",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1582,
            "rootEmpty": false
          },
          {
            "title": "Habitual Green Killers: sungbum, jon w, danny, sylvester",
            "suites": [],
            "tests": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Habitual Green Killers: sungbum, jon w, danny, sylvester should render an app home page",
                "timedOut": false,
                "duration": 1204,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://whispering-eyrie-80456.herokuapp.com/\",\n  \"assets/12-Habitual-Green-Killers_2017-05-17_17.png\",\n  \"https://github.com/dannyjwkim/Stock-Market-Game\",\n  \"Habitual Green Killers\",\n  \"sungbum, jon w, danny, sylvester\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "8db8c2a9-dda0-4485-a50f-334c73e4e5a9",
                "parentUUID": "ffc18dc4-afcf-4964-8a87-6d9625565acc",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 20000,
            "file": "/project2.js",
            "uuid": "ffc18dc4-afcf-4964-8a87-6d9625565acc",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Habitual Green Killers: sungbum, jon w, danny, sylvester should render an app home page",
                "timedOut": false,
                "duration": 1204,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://whispering-eyrie-80456.herokuapp.com/\",\n  \"assets/12-Habitual-Green-Killers_2017-05-17_17.png\",\n  \"https://github.com/dannyjwkim/Stock-Market-Game\",\n  \"Habitual Green Killers\",\n  \"sungbum, jon w, danny, sylvester\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "8db8c2a9-dda0-4485-a50f-334c73e4e5a9",
                "parentUUID": "ffc18dc4-afcf-4964-8a87-6d9625565acc",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1204,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/project2.js",
        "uuid": "c3ff5f09-5e1c-4f05-a334-cad01143e16c",
        "failedHooks": [],
        "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasFailedHooks": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "ccb9bf55-a6bf-4ce8-8047-ddeb50ee7615",
    "failedHooks": [],
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasFailedHooks": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "should render an app home page",
      "fullTitle": "Illegal Operations: ryan, martin, jieun, emily should render an app home page",
      "timedOut": false,
      "duration": 5738,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://illegal-formation.herokuapp.com/\",\n  \"assets/00-Illegal-Operations_2017-05-17_17.png\",\n  \"https://github.com/rrodwell/IllegalOperations\",\n  \"Illegal Operations\",\n  \"ryan, martin, jieun, emily\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "cdc806b1-5e12-4cb9-8795-3eacd7658710",
      "parentUUID": "ef23ca86-b497-4dc4-9dc6-29493cda56f2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Tab Nabbers: cody, eric g, esterling, ashley should render an app home page",
      "timedOut": false,
      "duration": 1083,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://bootcruit.herokuapp.com\",\n  \"assets/01-Tab-Nabbers_2017-05-17_17.png\",\n  \"https://github.com/accimeesterlin/Tab-Nabbers.git\",\n  \"Tab Nabbers\",\n  \"cody, eric g, esterling, ashley\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "6c33a4a1-b223-45fa-8437-8824842e41a3",
      "parentUUID": "9bee0e0e-d242-4e0b-93fc-692262e11ae5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Strict Mode: les, trent, laurie, lisa should render an app home page",
      "timedOut": false,
      "duration": 2448,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://warm-brushlands-86718.herokuapp.com/\",\n  \"assets/02-Strict-Mode_2017-05-17_17.png\",\n  \"https://github.com/haginl1/digitalPricing\",\n  \"Strict Mode\",\n  \"les, trent, laurie, lisa\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "3c50effe-033a-4487-bfd7-486ee83974ea",
      "parentUUID": "5ae5a8ec-902a-4bfb-9418-0a5f382ae5f1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Major Cache: matt, nicole, cashuna, heather should render an app home page",
      "timedOut": false,
      "duration": 1462,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://warm-savannah-50461.herokuapp.com/\",\n  \"assets/03-Major-Cache_2017-05-17_17.png\",\n  \"https://github.com/lockwoni/plant-care\",\n  \"Major Cache\",\n  \"matt, nicole, cashuna, heather\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "27815d8c-a2da-4676-92a8-a0651128a382",
      "parentUUID": "9f861378-8872-4598-9908-8bcae615abad",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Blue Smoke Magicians: usman, marvin, christine, val should render an app home page",
      "timedOut": false,
      "duration": 2612,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"http://guarded-oasis-40298.herokuapp.com/\",\n  \"assets/04-Blue-Smoke-Magicians_2017-05-17_17.png\",\n  \"https://github.com/usmanjamil83/BlueSmokeMagicians\",\n  \"Blue Smoke Magicians\",\n  \"usman, marvin, christine, val\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "da42b533-76e0-45a0-9b9e-1f0422ed3a40",
      "parentUUID": "5d64dc21-f4f6-47dd-8620-d176813ca837",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Aluminum Falcons: jesus, seila, roberto, sandy should render an app home page",
      "timedOut": false,
      "duration": 11290,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://limitless-everglades-23900.herokuapp.com/\",\n  \"assets/05-Aluminum-Falcons_2017-05-17_17.png\",\n  \"https://github.com/91integ25/Aluminum_falcons\",\n  \"Aluminum Falcons\",\n  \"jesus, seila, roberto, sandy\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "1ba26b2c-e1dd-49ba-bfcb-af0f86243e6c",
      "parentUUID": "57ad9452-c921-4f40-9fd8-423f77dcf295",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Fighting Calypso Cookies: alex y, keythe, jimmia, heidi should render an app home page",
      "timedOut": false,
      "duration": 6885,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://warm-atoll-35828.herokuapp.com/\",\n  \"assets/06-Fighting-Calypso-Cookies_2017-05-17_17.png\",\n  \"https://github.com/ayuan17/project2.git\",\n  \"Fighting Calypso Cookies\",\n  \"alex y, keythe, jimmia, heidi\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "c056c191-217e-4570-9a7b-e16056ae35b3",
      "parentUUID": "69c814ae-83fd-4492-a68d-a3110b548599",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "White Hot Snow: john b, brent, igho, monica should render an app home page",
      "timedOut": false,
      "duration": 15259,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://lit-everglades-62722.herokuapp.com/\",\n  \"assets/07-White-Hot-Snow_2017-05-17_17.png\",\n  \"https://github.com/Afroid/project2\",\n  \"White Hot Snow\",\n  \"john b, brent, igho, monica\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "13b94df8-3093-4fac-8fce-a0d8f4a7cb19",
      "parentUUID": "0dae2d33-9942-4d75-a28f-a395a3fe3acd",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Bits & Giggles: david, karlos, alex d, zach should render an app home page",
      "timedOut": false,
      "duration": 1406,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://quiet-sea-77471.herokuapp.com\",\n  \"assets/08-Bits-&-Giggles_2017-05-17_17.png\",\n  \"https://github.com/ddye4265/bitsandgiggles\",\n  \"Bits & Giggles\",\n  \"david, karlos, alex d, zach\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "3e6331a2-4f11-4233-aef6-c82046175be3",
      "parentUUID": "f0aa67a6-8841-4aaf-906b-208b150a1592",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Massive Confection: nooshin, mike b, michelle, jackie should render an app home page",
      "timedOut": false,
      "duration": 1580,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://mysterious-island-39661.herokuapp.com/\",\n  \"assets/09-Massive-Confection_2017-05-17_17.png\",\n  \"https://github.com/mikesbass/studentSearch.git\",\n  \"Massive Confection\",\n  \"nooshin, mike b, michelle, jackie\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "27e8960b-850b-448c-9d13-2b0b0dcd4616",
      "parentUUID": "7eb43e96-10e2-40b5-876c-25735cf9e0cf",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "File Jackers: shakir, eric f, caroline, trenton should render an app home page",
      "timedOut": true,
      "duration": 20003,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "context": "[\n  \"http://ga-tech.homuncul.us:8081/\",\n  \"assets/10-File-Jackers_2017-05-17_17.png\",\n  \"http://gt.bootcampcontent.com/filejackers/project-2\",\n  \"File Jackers\",\n  \"shakir, eric f, caroline, trenton\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {
        "estack": "Error: Timeout of 20000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves."
      },
      "isRoot": false,
      "uuid": "c56803c5-6d0e-4c66-8f37-dc45a1ae9318",
      "parentUUID": "eab66b9e-375d-4d5e-8b03-99d65a1afa88",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Midnight Sun Giants: london, andrew, tyler, jameel should render an app home page",
      "timedOut": false,
      "duration": 1582,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://group-project-2.herokuapp.com/\",\n  \"assets/11-Midnight-Sun-Giants_2017-05-17_17.png\",\n  \"https://github.com/TylerCovington/Group-Project-2\",\n  \"Midnight Sun Giants\",\n  \"london, andrew, tyler, jameel\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "1778b19a-706b-4cce-93da-c3fe90dd8193",
      "parentUUID": "56a91ef1-94f9-45ca-8173-f5992eb070e4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Habitual Green Killers: sungbum, jon w, danny, sylvester should render an app home page",
      "timedOut": false,
      "duration": 1204,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://whispering-eyrie-80456.herokuapp.com/\",\n  \"assets/12-Habitual-Green-Killers_2017-05-17_17.png\",\n  \"https://github.com/dannyjwkim/Stock-Market-Game\",\n  \"Habitual Green Killers\",\n  \"sungbum, jon w, danny, sylvester\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "8db8c2a9-dda0-4485-a50f-334c73e4e5a9",
      "parentUUID": "ffc18dc4-afcf-4964-8a87-6d9625565acc",
      "isHook": false,
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "should render an app home page",
      "fullTitle": "Illegal Operations: ryan, martin, jieun, emily should render an app home page",
      "timedOut": false,
      "duration": 5738,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://illegal-formation.herokuapp.com/\",\n  \"assets/00-Illegal-Operations_2017-05-17_17.png\",\n  \"https://github.com/rrodwell/IllegalOperations\",\n  \"Illegal Operations\",\n  \"ryan, martin, jieun, emily\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "cdc806b1-5e12-4cb9-8795-3eacd7658710",
      "parentUUID": "ef23ca86-b497-4dc4-9dc6-29493cda56f2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Tab Nabbers: cody, eric g, esterling, ashley should render an app home page",
      "timedOut": false,
      "duration": 1083,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://bootcruit.herokuapp.com\",\n  \"assets/01-Tab-Nabbers_2017-05-17_17.png\",\n  \"https://github.com/accimeesterlin/Tab-Nabbers.git\",\n  \"Tab Nabbers\",\n  \"cody, eric g, esterling, ashley\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "6c33a4a1-b223-45fa-8437-8824842e41a3",
      "parentUUID": "9bee0e0e-d242-4e0b-93fc-692262e11ae5",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Strict Mode: les, trent, laurie, lisa should render an app home page",
      "timedOut": false,
      "duration": 2448,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://warm-brushlands-86718.herokuapp.com/\",\n  \"assets/02-Strict-Mode_2017-05-17_17.png\",\n  \"https://github.com/haginl1/digitalPricing\",\n  \"Strict Mode\",\n  \"les, trent, laurie, lisa\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "3c50effe-033a-4487-bfd7-486ee83974ea",
      "parentUUID": "5ae5a8ec-902a-4bfb-9418-0a5f382ae5f1",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Major Cache: matt, nicole, cashuna, heather should render an app home page",
      "timedOut": false,
      "duration": 1462,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://warm-savannah-50461.herokuapp.com/\",\n  \"assets/03-Major-Cache_2017-05-17_17.png\",\n  \"https://github.com/lockwoni/plant-care\",\n  \"Major Cache\",\n  \"matt, nicole, cashuna, heather\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "27815d8c-a2da-4676-92a8-a0651128a382",
      "parentUUID": "9f861378-8872-4598-9908-8bcae615abad",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Blue Smoke Magicians: usman, marvin, christine, val should render an app home page",
      "timedOut": false,
      "duration": 2612,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"http://guarded-oasis-40298.herokuapp.com/\",\n  \"assets/04-Blue-Smoke-Magicians_2017-05-17_17.png\",\n  \"https://github.com/usmanjamil83/BlueSmokeMagicians\",\n  \"Blue Smoke Magicians\",\n  \"usman, marvin, christine, val\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "da42b533-76e0-45a0-9b9e-1f0422ed3a40",
      "parentUUID": "5d64dc21-f4f6-47dd-8620-d176813ca837",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Aluminum Falcons: jesus, seila, roberto, sandy should render an app home page",
      "timedOut": false,
      "duration": 11290,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://limitless-everglades-23900.herokuapp.com/\",\n  \"assets/05-Aluminum-Falcons_2017-05-17_17.png\",\n  \"https://github.com/91integ25/Aluminum_falcons\",\n  \"Aluminum Falcons\",\n  \"jesus, seila, roberto, sandy\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "1ba26b2c-e1dd-49ba-bfcb-af0f86243e6c",
      "parentUUID": "57ad9452-c921-4f40-9fd8-423f77dcf295",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Fighting Calypso Cookies: alex y, keythe, jimmia, heidi should render an app home page",
      "timedOut": false,
      "duration": 6885,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://warm-atoll-35828.herokuapp.com/\",\n  \"assets/06-Fighting-Calypso-Cookies_2017-05-17_17.png\",\n  \"https://github.com/ayuan17/project2.git\",\n  \"Fighting Calypso Cookies\",\n  \"alex y, keythe, jimmia, heidi\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "c056c191-217e-4570-9a7b-e16056ae35b3",
      "parentUUID": "69c814ae-83fd-4492-a68d-a3110b548599",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "White Hot Snow: john b, brent, igho, monica should render an app home page",
      "timedOut": false,
      "duration": 15259,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://lit-everglades-62722.herokuapp.com/\",\n  \"assets/07-White-Hot-Snow_2017-05-17_17.png\",\n  \"https://github.com/Afroid/project2\",\n  \"White Hot Snow\",\n  \"john b, brent, igho, monica\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "13b94df8-3093-4fac-8fce-a0d8f4a7cb19",
      "parentUUID": "0dae2d33-9942-4d75-a28f-a395a3fe3acd",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Bits & Giggles: david, karlos, alex d, zach should render an app home page",
      "timedOut": false,
      "duration": 1406,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://quiet-sea-77471.herokuapp.com\",\n  \"assets/08-Bits-&-Giggles_2017-05-17_17.png\",\n  \"https://github.com/ddye4265/bitsandgiggles\",\n  \"Bits & Giggles\",\n  \"david, karlos, alex d, zach\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "3e6331a2-4f11-4233-aef6-c82046175be3",
      "parentUUID": "f0aa67a6-8841-4aaf-906b-208b150a1592",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Massive Confection: nooshin, mike b, michelle, jackie should render an app home page",
      "timedOut": false,
      "duration": 1580,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://mysterious-island-39661.herokuapp.com/\",\n  \"assets/09-Massive-Confection_2017-05-17_17.png\",\n  \"https://github.com/mikesbass/studentSearch.git\",\n  \"Massive Confection\",\n  \"nooshin, mike b, michelle, jackie\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "27e8960b-850b-448c-9d13-2b0b0dcd4616",
      "parentUUID": "7eb43e96-10e2-40b5-876c-25735cf9e0cf",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Midnight Sun Giants: london, andrew, tyler, jameel should render an app home page",
      "timedOut": false,
      "duration": 1582,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://group-project-2.herokuapp.com/\",\n  \"assets/11-Midnight-Sun-Giants_2017-05-17_17.png\",\n  \"https://github.com/TylerCovington/Group-Project-2\",\n  \"Midnight Sun Giants\",\n  \"london, andrew, tyler, jameel\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "1778b19a-706b-4cce-93da-c3fe90dd8193",
      "parentUUID": "56a91ef1-94f9-45ca-8173-f5992eb070e4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Habitual Green Killers: sungbum, jon w, danny, sylvester should render an app home page",
      "timedOut": false,
      "duration": 1204,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://whispering-eyrie-80456.herokuapp.com/\",\n  \"assets/12-Habitual-Green-Killers_2017-05-17_17.png\",\n  \"https://github.com/dannyjwkim/Stock-Market-Game\",\n  \"Habitual Green Killers\",\n  \"sungbum, jon w, danny, sylvester\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "8db8c2a9-dda0-4485-a50f-334c73e4e5a9",
      "parentUUID": "ffc18dc4-afcf-4964-8a87-6d9625565acc",
      "isHook": false,
      "skipped": false
    }
  ],
  "allFailures": [
    {
      "title": "should render an app home page",
      "fullTitle": "File Jackers: shakir, eric f, caroline, trenton should render an app home page",
      "timedOut": true,
      "duration": 20003,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "context": "[\n  \"http://ga-tech.homuncul.us:8081/\",\n  \"assets/10-File-Jackers_2017-05-17_17.png\",\n  \"http://gt.bootcampcontent.com/filejackers/project-2\",\n  \"File Jackers\",\n  \"shakir, eric f, caroline, trenton\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {
        "estack": "Error: Timeout of 20000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves."
      },
      "isRoot": false,
      "uuid": "c56803c5-6d0e-4c66-8f37-dc45a1ae9318",
      "parentUUID": "eab66b9e-375d-4d5e-8b03-99d65a1afa88",
      "isHook": false,
      "skipped": false
    }
  ],
  "copyrightYear": 2017
}