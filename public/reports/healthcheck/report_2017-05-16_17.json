{
  "stats": {
    "suites": 14,
    "tests": 13,
    "passes": 7,
    "pending": 0,
    "failures": 6,
    "start": "2017-05-16T21:51:25.103Z",
    "end": "2017-05-16T21:52:42.270Z",
    "duration": 77167,
    "testsRegistered": 13,
    "passPercent": 53.8,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "warning",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "Project 2 Health Check",
        "suites": [
          {
            "title": "Illegal Operations: ryan, martin, jieun, emily",
            "suites": [],
            "tests": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Illegal Operations: ryan, martin, jieun, emily should render an app home page",
                "timedOut": false,
                "duration": 2218,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "context": "[\n  \"https://illegal-formation.herokuapp.com/\",\n  \"assets/00-Illegal-Operations_2017-05-16_17.png\",\n  \"https://github.com/rrodwell/IllegalOperations\",\n  \"Illegal Operations\",\n  \"ryan, martin, jieun, emily\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {
                  "name": "AssertionError",
                  "actual": "false",
                  "expected": "true",
                  "operator": "==",
                  "message": "Illegal Operations deployment is failed at https://illegal-formation.herokuapp.com/",
                  "generatedMessage": false,
                  "estack": "AssertionError: Illegal Operations deployment is failed at https://illegal-formation.herokuapp.com/\n    at Nightmare.goto.viewport.screenshot.evaluate.then.title (project2.js:114:22)\n    at process._tickCallback (internal/process/next_tick.js:103:7)",
                  "diff": "- false\n+ true\n"
                },
                "isRoot": false,
                "uuid": "17a207fa-64cb-46cd-adf2-e5065b86bce5",
                "parentUUID": "e13d3aff-e1dc-4e5d-aae7-6b6eb8bbb402",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 20000,
            "file": "/project2.js",
            "uuid": "e13d3aff-e1dc-4e5d-aae7-6b6eb8bbb402",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [],
            "failures": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Illegal Operations: ryan, martin, jieun, emily should render an app home page",
                "timedOut": false,
                "duration": 2218,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "context": "[\n  \"https://illegal-formation.herokuapp.com/\",\n  \"assets/00-Illegal-Operations_2017-05-16_17.png\",\n  \"https://github.com/rrodwell/IllegalOperations\",\n  \"Illegal Operations\",\n  \"ryan, martin, jieun, emily\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {
                  "name": "AssertionError",
                  "actual": "false",
                  "expected": "true",
                  "operator": "==",
                  "message": "Illegal Operations deployment is failed at https://illegal-formation.herokuapp.com/",
                  "generatedMessage": false,
                  "estack": "AssertionError: Illegal Operations deployment is failed at https://illegal-formation.herokuapp.com/\n    at Nightmare.goto.viewport.screenshot.evaluate.then.title (project2.js:114:22)\n    at process._tickCallback (internal/process/next_tick.js:103:7)",
                  "diff": "- false\n+ true\n"
                },
                "isRoot": false,
                "uuid": "17a207fa-64cb-46cd-adf2-e5065b86bce5",
                "parentUUID": "e13d3aff-e1dc-4e5d-aae7-6b6eb8bbb402",
                "isHook": false,
                "skipped": false
              }
            ],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 1,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": true,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2218,
            "rootEmpty": false
          },
          {
            "title": "Tab Nabbers: cody, eric g, esterling, ashley",
            "suites": [],
            "tests": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Tab Nabbers: cody, eric g, esterling, ashley should render an app home page",
                "timedOut": false,
                "duration": 11762,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://bootcruit.herokuapp.com\",\n  \"assets/01-Tab-Nabbers_2017-05-16_17.png\",\n  \"https://github.com/accimeesterlin/Tab-Nabbers.git\",\n  \"Tab Nabbers\",\n  \"cody, eric g, esterling, ashley\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "84ad18ec-a2b7-463f-ab34-a36cb66e4f3d",
                "parentUUID": "edbdabd3-79b5-4a0d-9cfc-1a132b46252e",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 20000,
            "file": "/project2.js",
            "uuid": "edbdabd3-79b5-4a0d-9cfc-1a132b46252e",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Tab Nabbers: cody, eric g, esterling, ashley should render an app home page",
                "timedOut": false,
                "duration": 11762,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://bootcruit.herokuapp.com\",\n  \"assets/01-Tab-Nabbers_2017-05-16_17.png\",\n  \"https://github.com/accimeesterlin/Tab-Nabbers.git\",\n  \"Tab Nabbers\",\n  \"cody, eric g, esterling, ashley\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "84ad18ec-a2b7-463f-ab34-a36cb66e4f3d",
                "parentUUID": "edbdabd3-79b5-4a0d-9cfc-1a132b46252e",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 11762,
            "rootEmpty": false
          },
          {
            "title": "Strict Mode: les, trent, laurie, lisa",
            "suites": [],
            "tests": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Strict Mode: les, trent, laurie, lisa should render an app home page",
                "timedOut": false,
                "duration": 10775,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://warm-brushlands-86718.herokuapp.com/\",\n  \"assets/02-Strict-Mode_2017-05-16_17.png\",\n  \"https://github.com/haginl1/digitalPricing\",\n  \"Strict Mode\",\n  \"les, trent, laurie, lisa\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "9798be6c-bd29-4c4b-80b9-d4f5366ba08a",
                "parentUUID": "714137ea-53ff-4bf0-9bf2-d486033ea7ba",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 20000,
            "file": "/project2.js",
            "uuid": "714137ea-53ff-4bf0-9bf2-d486033ea7ba",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Strict Mode: les, trent, laurie, lisa should render an app home page",
                "timedOut": false,
                "duration": 10775,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://warm-brushlands-86718.herokuapp.com/\",\n  \"assets/02-Strict-Mode_2017-05-16_17.png\",\n  \"https://github.com/haginl1/digitalPricing\",\n  \"Strict Mode\",\n  \"les, trent, laurie, lisa\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "9798be6c-bd29-4c4b-80b9-d4f5366ba08a",
                "parentUUID": "714137ea-53ff-4bf0-9bf2-d486033ea7ba",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 10775,
            "rootEmpty": false
          },
          {
            "title": "Major Cache: matt, nicole, cashuna, heather",
            "suites": [],
            "tests": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Major Cache: matt, nicole, cashuna, heather should render an app home page",
                "timedOut": false,
                "duration": 8108,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://warm-savannah-50461.herokuapp.com/\",\n  \"assets/03-Major-Cache_2017-05-16_17.png\",\n  \"https://github.com/lockwoni/plant-care\",\n  \"Major Cache\",\n  \"matt, nicole, cashuna, heather\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "2bfb68f9-4e94-46a5-ae0c-e7b1f9186020",
                "parentUUID": "cb5de355-2f58-43d2-bc33-502f490edb6b",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 20000,
            "file": "/project2.js",
            "uuid": "cb5de355-2f58-43d2-bc33-502f490edb6b",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Major Cache: matt, nicole, cashuna, heather should render an app home page",
                "timedOut": false,
                "duration": 8108,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://warm-savannah-50461.herokuapp.com/\",\n  \"assets/03-Major-Cache_2017-05-16_17.png\",\n  \"https://github.com/lockwoni/plant-care\",\n  \"Major Cache\",\n  \"matt, nicole, cashuna, heather\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "2bfb68f9-4e94-46a5-ae0c-e7b1f9186020",
                "parentUUID": "cb5de355-2f58-43d2-bc33-502f490edb6b",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 8108,
            "rootEmpty": false
          },
          {
            "title": "Blue Smoke Magicians: usman, marvin, christine, val",
            "suites": [],
            "tests": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Blue Smoke Magicians: usman, marvin, christine, val should render an app home page",
                "timedOut": false,
                "duration": 941,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "context": "[\n  \"http://guarded-oasis-40298.herokuapp.com/\",\n  \"assets/04-Blue-Smoke-Magicians_2017-05-16_17.png\",\n  \"https://github.com/usmanjamil83/BlueSmokeMagicians\",\n  \"Blue Smoke Magicians\",\n  \"usman, marvin, christine, val\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {
                  "name": "AssertionError",
                  "actual": "false",
                  "expected": "true",
                  "operator": "==",
                  "message": "Blue Smoke Magicians deployment is failed at http://guarded-oasis-40298.herokuapp.com/",
                  "generatedMessage": false,
                  "estack": "AssertionError: Blue Smoke Magicians deployment is failed at http://guarded-oasis-40298.herokuapp.com/\n    at Nightmare.goto.viewport.screenshot.evaluate.then.title (project2.js:114:22)\n    at process._tickCallback (internal/process/next_tick.js:103:7)",
                  "diff": "- false\n+ true\n"
                },
                "isRoot": false,
                "uuid": "61876c06-6296-4451-88f6-a2f6ff0305ac",
                "parentUUID": "50e4c9f5-be1f-4543-94f4-064bfc704057",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 20000,
            "file": "/project2.js",
            "uuid": "50e4c9f5-be1f-4543-94f4-064bfc704057",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [],
            "failures": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Blue Smoke Magicians: usman, marvin, christine, val should render an app home page",
                "timedOut": false,
                "duration": 941,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "context": "[\n  \"http://guarded-oasis-40298.herokuapp.com/\",\n  \"assets/04-Blue-Smoke-Magicians_2017-05-16_17.png\",\n  \"https://github.com/usmanjamil83/BlueSmokeMagicians\",\n  \"Blue Smoke Magicians\",\n  \"usman, marvin, christine, val\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {
                  "name": "AssertionError",
                  "actual": "false",
                  "expected": "true",
                  "operator": "==",
                  "message": "Blue Smoke Magicians deployment is failed at http://guarded-oasis-40298.herokuapp.com/",
                  "generatedMessage": false,
                  "estack": "AssertionError: Blue Smoke Magicians deployment is failed at http://guarded-oasis-40298.herokuapp.com/\n    at Nightmare.goto.viewport.screenshot.evaluate.then.title (project2.js:114:22)\n    at process._tickCallback (internal/process/next_tick.js:103:7)",
                  "diff": "- false\n+ true\n"
                },
                "isRoot": false,
                "uuid": "61876c06-6296-4451-88f6-a2f6ff0305ac",
                "parentUUID": "50e4c9f5-be1f-4543-94f4-064bfc704057",
                "isHook": false,
                "skipped": false
              }
            ],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 1,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": true,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 941,
            "rootEmpty": false
          },
          {
            "title": "Aluminum Falcons: jesus, seila, roberto, sandy",
            "suites": [],
            "tests": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Aluminum Falcons: jesus, seila, roberto, sandy should render an app home page",
                "timedOut": false,
                "duration": 969,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "context": "[\n  \"https://cryptic-cove-45695.herokuapp.com/\",\n  \"assets/05-Aluminum-Falcons_2017-05-16_17.png\",\n  \"https://github.com/91integ25/Aluminum_falcons\",\n  \"Aluminum Falcons\",\n  \"jesus, seila, roberto, sandy\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {
                  "name": "AssertionError",
                  "actual": "false",
                  "expected": "true",
                  "operator": "==",
                  "message": "Aluminum Falcons deployment is failed at https://cryptic-cove-45695.herokuapp.com/",
                  "generatedMessage": false,
                  "estack": "AssertionError: Aluminum Falcons deployment is failed at https://cryptic-cove-45695.herokuapp.com/\n    at Nightmare.goto.viewport.screenshot.evaluate.then.title (project2.js:114:22)\n    at process._tickCallback (internal/process/next_tick.js:103:7)",
                  "diff": "- false\n+ true\n"
                },
                "isRoot": false,
                "uuid": "6c67e16f-61de-4987-b05a-b28b58d361db",
                "parentUUID": "25061d69-e305-47a7-af5a-6afc1964b2b2",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 20000,
            "file": "/project2.js",
            "uuid": "25061d69-e305-47a7-af5a-6afc1964b2b2",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [],
            "failures": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Aluminum Falcons: jesus, seila, roberto, sandy should render an app home page",
                "timedOut": false,
                "duration": 969,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "context": "[\n  \"https://cryptic-cove-45695.herokuapp.com/\",\n  \"assets/05-Aluminum-Falcons_2017-05-16_17.png\",\n  \"https://github.com/91integ25/Aluminum_falcons\",\n  \"Aluminum Falcons\",\n  \"jesus, seila, roberto, sandy\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {
                  "name": "AssertionError",
                  "actual": "false",
                  "expected": "true",
                  "operator": "==",
                  "message": "Aluminum Falcons deployment is failed at https://cryptic-cove-45695.herokuapp.com/",
                  "generatedMessage": false,
                  "estack": "AssertionError: Aluminum Falcons deployment is failed at https://cryptic-cove-45695.herokuapp.com/\n    at Nightmare.goto.viewport.screenshot.evaluate.then.title (project2.js:114:22)\n    at process._tickCallback (internal/process/next_tick.js:103:7)",
                  "diff": "- false\n+ true\n"
                },
                "isRoot": false,
                "uuid": "6c67e16f-61de-4987-b05a-b28b58d361db",
                "parentUUID": "25061d69-e305-47a7-af5a-6afc1964b2b2",
                "isHook": false,
                "skipped": false
              }
            ],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 1,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": true,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 969,
            "rootEmpty": false
          },
          {
            "title": "Fighting Calypso Cookies: alex y, keythe, jimmia, heidi",
            "suites": [],
            "tests": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Fighting Calypso Cookies: alex y, keythe, jimmia, heidi should render an app home page",
                "timedOut": false,
                "duration": 1002,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "context": "[\n  \"https://warm-atoll-35828.herokuapp.com/\",\n  \"assets/06-Fighting-Calypso-Cookies_2017-05-16_17.png\",\n  \"https://github.com/ayuan17/project2.git\",\n  \"Fighting Calypso Cookies\",\n  \"alex y, keythe, jimmia, heidi\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {
                  "name": "AssertionError",
                  "actual": "false",
                  "expected": "true",
                  "operator": "==",
                  "message": "Fighting Calypso Cookies deployment is failed at https://warm-atoll-35828.herokuapp.com/",
                  "generatedMessage": false,
                  "estack": "AssertionError: Fighting Calypso Cookies deployment is failed at https://warm-atoll-35828.herokuapp.com/\n    at Nightmare.goto.viewport.screenshot.evaluate.then.title (project2.js:114:22)\n    at process._tickCallback (internal/process/next_tick.js:103:7)",
                  "diff": "- false\n+ true\n"
                },
                "isRoot": false,
                "uuid": "10a2243a-0929-48c6-b07b-416caf194b53",
                "parentUUID": "aeeab8cd-2918-4720-8583-06c3cf1d9096",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 20000,
            "file": "/project2.js",
            "uuid": "aeeab8cd-2918-4720-8583-06c3cf1d9096",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [],
            "failures": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Fighting Calypso Cookies: alex y, keythe, jimmia, heidi should render an app home page",
                "timedOut": false,
                "duration": 1002,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "context": "[\n  \"https://warm-atoll-35828.herokuapp.com/\",\n  \"assets/06-Fighting-Calypso-Cookies_2017-05-16_17.png\",\n  \"https://github.com/ayuan17/project2.git\",\n  \"Fighting Calypso Cookies\",\n  \"alex y, keythe, jimmia, heidi\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {
                  "name": "AssertionError",
                  "actual": "false",
                  "expected": "true",
                  "operator": "==",
                  "message": "Fighting Calypso Cookies deployment is failed at https://warm-atoll-35828.herokuapp.com/",
                  "generatedMessage": false,
                  "estack": "AssertionError: Fighting Calypso Cookies deployment is failed at https://warm-atoll-35828.herokuapp.com/\n    at Nightmare.goto.viewport.screenshot.evaluate.then.title (project2.js:114:22)\n    at process._tickCallback (internal/process/next_tick.js:103:7)",
                  "diff": "- false\n+ true\n"
                },
                "isRoot": false,
                "uuid": "10a2243a-0929-48c6-b07b-416caf194b53",
                "parentUUID": "aeeab8cd-2918-4720-8583-06c3cf1d9096",
                "isHook": false,
                "skipped": false
              }
            ],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 1,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": true,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1002,
            "rootEmpty": false
          },
          {
            "title": "White Hot Snow: john b, brent, igho, monica",
            "suites": [],
            "tests": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check White Hot Snow: john b, brent, igho, monica should render an app home page",
                "timedOut": false,
                "duration": 13101,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "context": "[\n  \"https://lit-everglades-62722.herokuapp.com/\",\n  \"assets/07-White-Hot-Snow_2017-05-16_17.png\",\n  \"https://github.com/Afroid/project2\",\n  \"White Hot Snow\",\n  \"john b, brent, igho, monica\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {
                  "name": "AssertionError",
                  "actual": "false",
                  "expected": "true",
                  "operator": "==",
                  "message": "White Hot Snow deployment is failed at https://lit-everglades-62722.herokuapp.com/",
                  "generatedMessage": false,
                  "estack": "AssertionError: White Hot Snow deployment is failed at https://lit-everglades-62722.herokuapp.com/\n    at Nightmare.goto.viewport.screenshot.evaluate.then.title (project2.js:114:22)\n    at process._tickCallback (internal/process/next_tick.js:103:7)",
                  "diff": "- false\n+ true\n"
                },
                "isRoot": false,
                "uuid": "325bd5ee-b250-4ce4-9153-1ea3ac0ec734",
                "parentUUID": "c02c5c0f-5044-4c96-81d3-b8d16f75bafd",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 20000,
            "file": "/project2.js",
            "uuid": "c02c5c0f-5044-4c96-81d3-b8d16f75bafd",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [],
            "failures": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check White Hot Snow: john b, brent, igho, monica should render an app home page",
                "timedOut": false,
                "duration": 13101,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "context": "[\n  \"https://lit-everglades-62722.herokuapp.com/\",\n  \"assets/07-White-Hot-Snow_2017-05-16_17.png\",\n  \"https://github.com/Afroid/project2\",\n  \"White Hot Snow\",\n  \"john b, brent, igho, monica\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {
                  "name": "AssertionError",
                  "actual": "false",
                  "expected": "true",
                  "operator": "==",
                  "message": "White Hot Snow deployment is failed at https://lit-everglades-62722.herokuapp.com/",
                  "generatedMessage": false,
                  "estack": "AssertionError: White Hot Snow deployment is failed at https://lit-everglades-62722.herokuapp.com/\n    at Nightmare.goto.viewport.screenshot.evaluate.then.title (project2.js:114:22)\n    at process._tickCallback (internal/process/next_tick.js:103:7)",
                  "diff": "- false\n+ true\n"
                },
                "isRoot": false,
                "uuid": "325bd5ee-b250-4ce4-9153-1ea3ac0ec734",
                "parentUUID": "c02c5c0f-5044-4c96-81d3-b8d16f75bafd",
                "isHook": false,
                "skipped": false
              }
            ],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 1,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": true,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 13101,
            "rootEmpty": false
          },
          {
            "title": "Bits & Giggles: david, karlos, alex d, zach",
            "suites": [],
            "tests": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Bits & Giggles: david, karlos, alex d, zach should render an app home page",
                "timedOut": false,
                "duration": 1022,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "context": "[\n  \"https://quiet-sea-77471.herokuapp.com\",\n  \"assets/08-Bits-&-Giggles_2017-05-16_17.png\",\n  \"https://github.com/ddye4265/bitsandgiggles\",\n  \"Bits & Giggles\",\n  \"david, karlos, alex d, zach\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {
                  "name": "AssertionError",
                  "actual": "false",
                  "expected": "true",
                  "operator": "==",
                  "message": "Bits & Giggles deployment is failed at https://quiet-sea-77471.herokuapp.com",
                  "generatedMessage": false,
                  "estack": "AssertionError: Bits & Giggles deployment is failed at https://quiet-sea-77471.herokuapp.com\n    at Nightmare.goto.viewport.screenshot.evaluate.then.title (project2.js:114:22)\n    at process._tickCallback (internal/process/next_tick.js:103:7)",
                  "diff": "- false\n+ true\n"
                },
                "isRoot": false,
                "uuid": "dbd8ae7f-5ecc-405a-a9cc-63187d8188c1",
                "parentUUID": "6aa91126-e46a-4e03-b918-9c270d4e650c",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 20000,
            "file": "/project2.js",
            "uuid": "6aa91126-e46a-4e03-b918-9c270d4e650c",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [],
            "failures": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Bits & Giggles: david, karlos, alex d, zach should render an app home page",
                "timedOut": false,
                "duration": 1022,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "context": "[\n  \"https://quiet-sea-77471.herokuapp.com\",\n  \"assets/08-Bits-&-Giggles_2017-05-16_17.png\",\n  \"https://github.com/ddye4265/bitsandgiggles\",\n  \"Bits & Giggles\",\n  \"david, karlos, alex d, zach\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {
                  "name": "AssertionError",
                  "actual": "false",
                  "expected": "true",
                  "operator": "==",
                  "message": "Bits & Giggles deployment is failed at https://quiet-sea-77471.herokuapp.com",
                  "generatedMessage": false,
                  "estack": "AssertionError: Bits & Giggles deployment is failed at https://quiet-sea-77471.herokuapp.com\n    at Nightmare.goto.viewport.screenshot.evaluate.then.title (project2.js:114:22)\n    at process._tickCallback (internal/process/next_tick.js:103:7)",
                  "diff": "- false\n+ true\n"
                },
                "isRoot": false,
                "uuid": "dbd8ae7f-5ecc-405a-a9cc-63187d8188c1",
                "parentUUID": "6aa91126-e46a-4e03-b918-9c270d4e650c",
                "isHook": false,
                "skipped": false
              }
            ],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 1,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": true,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1022,
            "rootEmpty": false
          },
          {
            "title": "Massive Confection: nooshin, mike b, michelle, jackie",
            "suites": [],
            "tests": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Massive Confection: nooshin, mike b, michelle, jackie should render an app home page",
                "timedOut": false,
                "duration": 1127,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://mysterious-island-39661.herokuapp.com/\",\n  \"assets/09-Massive-Confection_2017-05-16_17.png\",\n  \"https://github.com/mikesbass/studentSearch.git\",\n  \"Massive Confection\",\n  \"nooshin, mike b, michelle, jackie\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "d5e91b78-e929-44b4-9128-b1a36d577505",
                "parentUUID": "cdbc1202-3ba4-4994-a556-46e4cddb68ba",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 20000,
            "file": "/project2.js",
            "uuid": "cdbc1202-3ba4-4994-a556-46e4cddb68ba",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Massive Confection: nooshin, mike b, michelle, jackie should render an app home page",
                "timedOut": false,
                "duration": 1127,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://mysterious-island-39661.herokuapp.com/\",\n  \"assets/09-Massive-Confection_2017-05-16_17.png\",\n  \"https://github.com/mikesbass/studentSearch.git\",\n  \"Massive Confection\",\n  \"nooshin, mike b, michelle, jackie\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "d5e91b78-e929-44b4-9128-b1a36d577505",
                "parentUUID": "cdbc1202-3ba4-4994-a556-46e4cddb68ba",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1127,
            "rootEmpty": false
          },
          {
            "title": "File Jackers: shakir, eric f, caroline, trenton",
            "suites": [],
            "tests": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check File Jackers: shakir, eric f, caroline, trenton should render an app home page",
                "timedOut": false,
                "duration": 1757,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"http://ga-tech.homuncul.us:8081/\",\n  \"assets/10-File-Jackers_2017-05-16_17.png\",\n  \"http://gt.bootcampcontent.com/filejackers/project-2\",\n  \"File Jackers\",\n  \"shakir, eric f, caroline, trenton\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "eb66cf28-be2a-490c-93e9-bc8d68f62b1c",
                "parentUUID": "8115f80e-775c-419b-a094-c37de4891b25",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 20000,
            "file": "/project2.js",
            "uuid": "8115f80e-775c-419b-a094-c37de4891b25",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check File Jackers: shakir, eric f, caroline, trenton should render an app home page",
                "timedOut": false,
                "duration": 1757,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"http://ga-tech.homuncul.us:8081/\",\n  \"assets/10-File-Jackers_2017-05-16_17.png\",\n  \"http://gt.bootcampcontent.com/filejackers/project-2\",\n  \"File Jackers\",\n  \"shakir, eric f, caroline, trenton\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "eb66cf28-be2a-490c-93e9-bc8d68f62b1c",
                "parentUUID": "8115f80e-775c-419b-a094-c37de4891b25",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1757,
            "rootEmpty": false
          },
          {
            "title": "Midnight Sun Giants: london, andrew, tyler, jameel",
            "suites": [],
            "tests": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Midnight Sun Giants: london, andrew, tyler, jameel should render an app home page",
                "timedOut": false,
                "duration": 11345,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://group-project-2.herokuapp.com/\",\n  \"assets/11-Midnight-Sun-Giants_2017-05-16_17.png\",\n  \"https://github.com/TylerCovington/Group-Project-2\",\n  \"Midnight Sun Giants\",\n  \"london, andrew, tyler, jameel\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "a666462a-af97-409c-b1f4-1b6b30760f8b",
                "parentUUID": "059adfb6-4e6e-4ebd-87a7-dd76471070b9",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 20000,
            "file": "/project2.js",
            "uuid": "059adfb6-4e6e-4ebd-87a7-dd76471070b9",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Midnight Sun Giants: london, andrew, tyler, jameel should render an app home page",
                "timedOut": false,
                "duration": 11345,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://group-project-2.herokuapp.com/\",\n  \"assets/11-Midnight-Sun-Giants_2017-05-16_17.png\",\n  \"https://github.com/TylerCovington/Group-Project-2\",\n  \"Midnight Sun Giants\",\n  \"london, andrew, tyler, jameel\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "a666462a-af97-409c-b1f4-1b6b30760f8b",
                "parentUUID": "059adfb6-4e6e-4ebd-87a7-dd76471070b9",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 11345,
            "rootEmpty": false
          },
          {
            "title": "Habitual Green Killers: sungbum, jon w, danny, sylvester",
            "suites": [],
            "tests": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Habitual Green Killers: sungbum, jon w, danny, sylvester should render an app home page",
                "timedOut": false,
                "duration": 13019,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://whispering-eyrie-80456.herokuapp.com/\",\n  \"assets/12-Habitual-Green-Killers_2017-05-16_17.png\",\n  \"https://github.com/dannyjwkim/Stock-Market-Game\",\n  \"Habitual Green Killers\",\n  \"sungbum, jon w, danny, sylvester\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "042187a6-6f74-4bf0-b1cc-49f11a928586",
                "parentUUID": "e7ba518b-92ab-47ef-96c0-4db48ad184d4",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 20000,
            "file": "/project2.js",
            "uuid": "e7ba518b-92ab-47ef-96c0-4db48ad184d4",
            "failedHooks": [],
            "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
            "passes": [
              {
                "title": "should render an app home page",
                "fullTitle": "Project 2 Health Check Habitual Green Killers: sungbum, jon w, danny, sylvester should render an app home page",
                "timedOut": false,
                "duration": 13019,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "context": "[\n  \"https://whispering-eyrie-80456.herokuapp.com/\",\n  \"assets/12-Habitual-Green-Killers_2017-05-16_17.png\",\n  \"https://github.com/dannyjwkim/Stock-Market-Game\",\n  \"Habitual Green Killers\",\n  \"sungbum, jon w, danny, sylvester\"\n]",
                "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "042187a6-6f74-4bf0-b1cc-49f11a928586",
                "parentUUID": "e7ba518b-92ab-47ef-96c0-4db48ad184d4",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasFailedHooks": false,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 13019,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/project2.js",
        "uuid": "d2524d69-cefd-4d19-9d0e-094c9a90c7e6",
        "failedHooks": [],
        "fullFile": "/Users/mrmusa/gt/healthcheck/project2.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasFailedHooks": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "5911f244-5a0b-4622-9072-e1a8e3dda5e9",
    "failedHooks": [],
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasFailedHooks": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "should render an app home page",
      "fullTitle": "Illegal Operations: ryan, martin, jieun, emily should render an app home page",
      "timedOut": false,
      "duration": 2218,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "context": "[\n  \"https://illegal-formation.herokuapp.com/\",\n  \"assets/00-Illegal-Operations_2017-05-16_17.png\",\n  \"https://github.com/rrodwell/IllegalOperations\",\n  \"Illegal Operations\",\n  \"ryan, martin, jieun, emily\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {
        "name": "AssertionError",
        "actual": "false",
        "expected": "true",
        "operator": "==",
        "message": "Illegal Operations deployment is failed at https://illegal-formation.herokuapp.com/",
        "generatedMessage": false,
        "estack": "AssertionError: Illegal Operations deployment is failed at https://illegal-formation.herokuapp.com/\n    at Nightmare.goto.viewport.screenshot.evaluate.then.title (project2.js:114:22)\n    at process._tickCallback (internal/process/next_tick.js:103:7)",
        "diff": "- false\n+ true\n"
      },
      "isRoot": false,
      "uuid": "17a207fa-64cb-46cd-adf2-e5065b86bce5",
      "parentUUID": "e13d3aff-e1dc-4e5d-aae7-6b6eb8bbb402",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Tab Nabbers: cody, eric g, esterling, ashley should render an app home page",
      "timedOut": false,
      "duration": 11762,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://bootcruit.herokuapp.com\",\n  \"assets/01-Tab-Nabbers_2017-05-16_17.png\",\n  \"https://github.com/accimeesterlin/Tab-Nabbers.git\",\n  \"Tab Nabbers\",\n  \"cody, eric g, esterling, ashley\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "84ad18ec-a2b7-463f-ab34-a36cb66e4f3d",
      "parentUUID": "edbdabd3-79b5-4a0d-9cfc-1a132b46252e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Strict Mode: les, trent, laurie, lisa should render an app home page",
      "timedOut": false,
      "duration": 10775,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://warm-brushlands-86718.herokuapp.com/\",\n  \"assets/02-Strict-Mode_2017-05-16_17.png\",\n  \"https://github.com/haginl1/digitalPricing\",\n  \"Strict Mode\",\n  \"les, trent, laurie, lisa\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "9798be6c-bd29-4c4b-80b9-d4f5366ba08a",
      "parentUUID": "714137ea-53ff-4bf0-9bf2-d486033ea7ba",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Major Cache: matt, nicole, cashuna, heather should render an app home page",
      "timedOut": false,
      "duration": 8108,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://warm-savannah-50461.herokuapp.com/\",\n  \"assets/03-Major-Cache_2017-05-16_17.png\",\n  \"https://github.com/lockwoni/plant-care\",\n  \"Major Cache\",\n  \"matt, nicole, cashuna, heather\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "2bfb68f9-4e94-46a5-ae0c-e7b1f9186020",
      "parentUUID": "cb5de355-2f58-43d2-bc33-502f490edb6b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Blue Smoke Magicians: usman, marvin, christine, val should render an app home page",
      "timedOut": false,
      "duration": 941,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "context": "[\n  \"http://guarded-oasis-40298.herokuapp.com/\",\n  \"assets/04-Blue-Smoke-Magicians_2017-05-16_17.png\",\n  \"https://github.com/usmanjamil83/BlueSmokeMagicians\",\n  \"Blue Smoke Magicians\",\n  \"usman, marvin, christine, val\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {
        "name": "AssertionError",
        "actual": "false",
        "expected": "true",
        "operator": "==",
        "message": "Blue Smoke Magicians deployment is failed at http://guarded-oasis-40298.herokuapp.com/",
        "generatedMessage": false,
        "estack": "AssertionError: Blue Smoke Magicians deployment is failed at http://guarded-oasis-40298.herokuapp.com/\n    at Nightmare.goto.viewport.screenshot.evaluate.then.title (project2.js:114:22)\n    at process._tickCallback (internal/process/next_tick.js:103:7)",
        "diff": "- false\n+ true\n"
      },
      "isRoot": false,
      "uuid": "61876c06-6296-4451-88f6-a2f6ff0305ac",
      "parentUUID": "50e4c9f5-be1f-4543-94f4-064bfc704057",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Aluminum Falcons: jesus, seila, roberto, sandy should render an app home page",
      "timedOut": false,
      "duration": 969,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "context": "[\n  \"https://cryptic-cove-45695.herokuapp.com/\",\n  \"assets/05-Aluminum-Falcons_2017-05-16_17.png\",\n  \"https://github.com/91integ25/Aluminum_falcons\",\n  \"Aluminum Falcons\",\n  \"jesus, seila, roberto, sandy\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {
        "name": "AssertionError",
        "actual": "false",
        "expected": "true",
        "operator": "==",
        "message": "Aluminum Falcons deployment is failed at https://cryptic-cove-45695.herokuapp.com/",
        "generatedMessage": false,
        "estack": "AssertionError: Aluminum Falcons deployment is failed at https://cryptic-cove-45695.herokuapp.com/\n    at Nightmare.goto.viewport.screenshot.evaluate.then.title (project2.js:114:22)\n    at process._tickCallback (internal/process/next_tick.js:103:7)",
        "diff": "- false\n+ true\n"
      },
      "isRoot": false,
      "uuid": "6c67e16f-61de-4987-b05a-b28b58d361db",
      "parentUUID": "25061d69-e305-47a7-af5a-6afc1964b2b2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Fighting Calypso Cookies: alex y, keythe, jimmia, heidi should render an app home page",
      "timedOut": false,
      "duration": 1002,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "context": "[\n  \"https://warm-atoll-35828.herokuapp.com/\",\n  \"assets/06-Fighting-Calypso-Cookies_2017-05-16_17.png\",\n  \"https://github.com/ayuan17/project2.git\",\n  \"Fighting Calypso Cookies\",\n  \"alex y, keythe, jimmia, heidi\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {
        "name": "AssertionError",
        "actual": "false",
        "expected": "true",
        "operator": "==",
        "message": "Fighting Calypso Cookies deployment is failed at https://warm-atoll-35828.herokuapp.com/",
        "generatedMessage": false,
        "estack": "AssertionError: Fighting Calypso Cookies deployment is failed at https://warm-atoll-35828.herokuapp.com/\n    at Nightmare.goto.viewport.screenshot.evaluate.then.title (project2.js:114:22)\n    at process._tickCallback (internal/process/next_tick.js:103:7)",
        "diff": "- false\n+ true\n"
      },
      "isRoot": false,
      "uuid": "10a2243a-0929-48c6-b07b-416caf194b53",
      "parentUUID": "aeeab8cd-2918-4720-8583-06c3cf1d9096",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "White Hot Snow: john b, brent, igho, monica should render an app home page",
      "timedOut": false,
      "duration": 13101,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "context": "[\n  \"https://lit-everglades-62722.herokuapp.com/\",\n  \"assets/07-White-Hot-Snow_2017-05-16_17.png\",\n  \"https://github.com/Afroid/project2\",\n  \"White Hot Snow\",\n  \"john b, brent, igho, monica\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {
        "name": "AssertionError",
        "actual": "false",
        "expected": "true",
        "operator": "==",
        "message": "White Hot Snow deployment is failed at https://lit-everglades-62722.herokuapp.com/",
        "generatedMessage": false,
        "estack": "AssertionError: White Hot Snow deployment is failed at https://lit-everglades-62722.herokuapp.com/\n    at Nightmare.goto.viewport.screenshot.evaluate.then.title (project2.js:114:22)\n    at process._tickCallback (internal/process/next_tick.js:103:7)",
        "diff": "- false\n+ true\n"
      },
      "isRoot": false,
      "uuid": "325bd5ee-b250-4ce4-9153-1ea3ac0ec734",
      "parentUUID": "c02c5c0f-5044-4c96-81d3-b8d16f75bafd",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Bits & Giggles: david, karlos, alex d, zach should render an app home page",
      "timedOut": false,
      "duration": 1022,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "context": "[\n  \"https://quiet-sea-77471.herokuapp.com\",\n  \"assets/08-Bits-&-Giggles_2017-05-16_17.png\",\n  \"https://github.com/ddye4265/bitsandgiggles\",\n  \"Bits & Giggles\",\n  \"david, karlos, alex d, zach\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {
        "name": "AssertionError",
        "actual": "false",
        "expected": "true",
        "operator": "==",
        "message": "Bits & Giggles deployment is failed at https://quiet-sea-77471.herokuapp.com",
        "generatedMessage": false,
        "estack": "AssertionError: Bits & Giggles deployment is failed at https://quiet-sea-77471.herokuapp.com\n    at Nightmare.goto.viewport.screenshot.evaluate.then.title (project2.js:114:22)\n    at process._tickCallback (internal/process/next_tick.js:103:7)",
        "diff": "- false\n+ true\n"
      },
      "isRoot": false,
      "uuid": "dbd8ae7f-5ecc-405a-a9cc-63187d8188c1",
      "parentUUID": "6aa91126-e46a-4e03-b918-9c270d4e650c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Massive Confection: nooshin, mike b, michelle, jackie should render an app home page",
      "timedOut": false,
      "duration": 1127,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://mysterious-island-39661.herokuapp.com/\",\n  \"assets/09-Massive-Confection_2017-05-16_17.png\",\n  \"https://github.com/mikesbass/studentSearch.git\",\n  \"Massive Confection\",\n  \"nooshin, mike b, michelle, jackie\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "d5e91b78-e929-44b4-9128-b1a36d577505",
      "parentUUID": "cdbc1202-3ba4-4994-a556-46e4cddb68ba",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "File Jackers: shakir, eric f, caroline, trenton should render an app home page",
      "timedOut": false,
      "duration": 1757,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"http://ga-tech.homuncul.us:8081/\",\n  \"assets/10-File-Jackers_2017-05-16_17.png\",\n  \"http://gt.bootcampcontent.com/filejackers/project-2\",\n  \"File Jackers\",\n  \"shakir, eric f, caroline, trenton\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "eb66cf28-be2a-490c-93e9-bc8d68f62b1c",
      "parentUUID": "8115f80e-775c-419b-a094-c37de4891b25",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Midnight Sun Giants: london, andrew, tyler, jameel should render an app home page",
      "timedOut": false,
      "duration": 11345,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://group-project-2.herokuapp.com/\",\n  \"assets/11-Midnight-Sun-Giants_2017-05-16_17.png\",\n  \"https://github.com/TylerCovington/Group-Project-2\",\n  \"Midnight Sun Giants\",\n  \"london, andrew, tyler, jameel\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "a666462a-af97-409c-b1f4-1b6b30760f8b",
      "parentUUID": "059adfb6-4e6e-4ebd-87a7-dd76471070b9",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Habitual Green Killers: sungbum, jon w, danny, sylvester should render an app home page",
      "timedOut": false,
      "duration": 13019,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://whispering-eyrie-80456.herokuapp.com/\",\n  \"assets/12-Habitual-Green-Killers_2017-05-16_17.png\",\n  \"https://github.com/dannyjwkim/Stock-Market-Game\",\n  \"Habitual Green Killers\",\n  \"sungbum, jon w, danny, sylvester\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "042187a6-6f74-4bf0-b1cc-49f11a928586",
      "parentUUID": "e7ba518b-92ab-47ef-96c0-4db48ad184d4",
      "isHook": false,
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "should render an app home page",
      "fullTitle": "Tab Nabbers: cody, eric g, esterling, ashley should render an app home page",
      "timedOut": false,
      "duration": 11762,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://bootcruit.herokuapp.com\",\n  \"assets/01-Tab-Nabbers_2017-05-16_17.png\",\n  \"https://github.com/accimeesterlin/Tab-Nabbers.git\",\n  \"Tab Nabbers\",\n  \"cody, eric g, esterling, ashley\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "84ad18ec-a2b7-463f-ab34-a36cb66e4f3d",
      "parentUUID": "edbdabd3-79b5-4a0d-9cfc-1a132b46252e",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Strict Mode: les, trent, laurie, lisa should render an app home page",
      "timedOut": false,
      "duration": 10775,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://warm-brushlands-86718.herokuapp.com/\",\n  \"assets/02-Strict-Mode_2017-05-16_17.png\",\n  \"https://github.com/haginl1/digitalPricing\",\n  \"Strict Mode\",\n  \"les, trent, laurie, lisa\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "9798be6c-bd29-4c4b-80b9-d4f5366ba08a",
      "parentUUID": "714137ea-53ff-4bf0-9bf2-d486033ea7ba",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Major Cache: matt, nicole, cashuna, heather should render an app home page",
      "timedOut": false,
      "duration": 8108,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://warm-savannah-50461.herokuapp.com/\",\n  \"assets/03-Major-Cache_2017-05-16_17.png\",\n  \"https://github.com/lockwoni/plant-care\",\n  \"Major Cache\",\n  \"matt, nicole, cashuna, heather\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "2bfb68f9-4e94-46a5-ae0c-e7b1f9186020",
      "parentUUID": "cb5de355-2f58-43d2-bc33-502f490edb6b",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Massive Confection: nooshin, mike b, michelle, jackie should render an app home page",
      "timedOut": false,
      "duration": 1127,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://mysterious-island-39661.herokuapp.com/\",\n  \"assets/09-Massive-Confection_2017-05-16_17.png\",\n  \"https://github.com/mikesbass/studentSearch.git\",\n  \"Massive Confection\",\n  \"nooshin, mike b, michelle, jackie\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "d5e91b78-e929-44b4-9128-b1a36d577505",
      "parentUUID": "cdbc1202-3ba4-4994-a556-46e4cddb68ba",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "File Jackers: shakir, eric f, caroline, trenton should render an app home page",
      "timedOut": false,
      "duration": 1757,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"http://ga-tech.homuncul.us:8081/\",\n  \"assets/10-File-Jackers_2017-05-16_17.png\",\n  \"http://gt.bootcampcontent.com/filejackers/project-2\",\n  \"File Jackers\",\n  \"shakir, eric f, caroline, trenton\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "eb66cf28-be2a-490c-93e9-bc8d68f62b1c",
      "parentUUID": "8115f80e-775c-419b-a094-c37de4891b25",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Midnight Sun Giants: london, andrew, tyler, jameel should render an app home page",
      "timedOut": false,
      "duration": 11345,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://group-project-2.herokuapp.com/\",\n  \"assets/11-Midnight-Sun-Giants_2017-05-16_17.png\",\n  \"https://github.com/TylerCovington/Group-Project-2\",\n  \"Midnight Sun Giants\",\n  \"london, andrew, tyler, jameel\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "a666462a-af97-409c-b1f4-1b6b30760f8b",
      "parentUUID": "059adfb6-4e6e-4ebd-87a7-dd76471070b9",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Habitual Green Killers: sungbum, jon w, danny, sylvester should render an app home page",
      "timedOut": false,
      "duration": 13019,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "context": "[\n  \"https://whispering-eyrie-80456.herokuapp.com/\",\n  \"assets/12-Habitual-Green-Killers_2017-05-16_17.png\",\n  \"https://github.com/dannyjwkim/Stock-Market-Game\",\n  \"Habitual Green Killers\",\n  \"sungbum, jon w, danny, sylvester\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {},
      "isRoot": false,
      "uuid": "042187a6-6f74-4bf0-b1cc-49f11a928586",
      "parentUUID": "e7ba518b-92ab-47ef-96c0-4db48ad184d4",
      "isHook": false,
      "skipped": false
    }
  ],
  "allFailures": [
    {
      "title": "should render an app home page",
      "fullTitle": "Illegal Operations: ryan, martin, jieun, emily should render an app home page",
      "timedOut": false,
      "duration": 2218,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "context": "[\n  \"https://illegal-formation.herokuapp.com/\",\n  \"assets/00-Illegal-Operations_2017-05-16_17.png\",\n  \"https://github.com/rrodwell/IllegalOperations\",\n  \"Illegal Operations\",\n  \"ryan, martin, jieun, emily\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {
        "name": "AssertionError",
        "actual": "false",
        "expected": "true",
        "operator": "==",
        "message": "Illegal Operations deployment is failed at https://illegal-formation.herokuapp.com/",
        "generatedMessage": false,
        "estack": "AssertionError: Illegal Operations deployment is failed at https://illegal-formation.herokuapp.com/\n    at Nightmare.goto.viewport.screenshot.evaluate.then.title (project2.js:114:22)\n    at process._tickCallback (internal/process/next_tick.js:103:7)",
        "diff": "- false\n+ true\n"
      },
      "isRoot": false,
      "uuid": "17a207fa-64cb-46cd-adf2-e5065b86bce5",
      "parentUUID": "e13d3aff-e1dc-4e5d-aae7-6b6eb8bbb402",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Blue Smoke Magicians: usman, marvin, christine, val should render an app home page",
      "timedOut": false,
      "duration": 941,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "context": "[\n  \"http://guarded-oasis-40298.herokuapp.com/\",\n  \"assets/04-Blue-Smoke-Magicians_2017-05-16_17.png\",\n  \"https://github.com/usmanjamil83/BlueSmokeMagicians\",\n  \"Blue Smoke Magicians\",\n  \"usman, marvin, christine, val\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {
        "name": "AssertionError",
        "actual": "false",
        "expected": "true",
        "operator": "==",
        "message": "Blue Smoke Magicians deployment is failed at http://guarded-oasis-40298.herokuapp.com/",
        "generatedMessage": false,
        "estack": "AssertionError: Blue Smoke Magicians deployment is failed at http://guarded-oasis-40298.herokuapp.com/\n    at Nightmare.goto.viewport.screenshot.evaluate.then.title (project2.js:114:22)\n    at process._tickCallback (internal/process/next_tick.js:103:7)",
        "diff": "- false\n+ true\n"
      },
      "isRoot": false,
      "uuid": "61876c06-6296-4451-88f6-a2f6ff0305ac",
      "parentUUID": "50e4c9f5-be1f-4543-94f4-064bfc704057",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Aluminum Falcons: jesus, seila, roberto, sandy should render an app home page",
      "timedOut": false,
      "duration": 969,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "context": "[\n  \"https://cryptic-cove-45695.herokuapp.com/\",\n  \"assets/05-Aluminum-Falcons_2017-05-16_17.png\",\n  \"https://github.com/91integ25/Aluminum_falcons\",\n  \"Aluminum Falcons\",\n  \"jesus, seila, roberto, sandy\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {
        "name": "AssertionError",
        "actual": "false",
        "expected": "true",
        "operator": "==",
        "message": "Aluminum Falcons deployment is failed at https://cryptic-cove-45695.herokuapp.com/",
        "generatedMessage": false,
        "estack": "AssertionError: Aluminum Falcons deployment is failed at https://cryptic-cove-45695.herokuapp.com/\n    at Nightmare.goto.viewport.screenshot.evaluate.then.title (project2.js:114:22)\n    at process._tickCallback (internal/process/next_tick.js:103:7)",
        "diff": "- false\n+ true\n"
      },
      "isRoot": false,
      "uuid": "6c67e16f-61de-4987-b05a-b28b58d361db",
      "parentUUID": "25061d69-e305-47a7-af5a-6afc1964b2b2",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Fighting Calypso Cookies: alex y, keythe, jimmia, heidi should render an app home page",
      "timedOut": false,
      "duration": 1002,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "context": "[\n  \"https://warm-atoll-35828.herokuapp.com/\",\n  \"assets/06-Fighting-Calypso-Cookies_2017-05-16_17.png\",\n  \"https://github.com/ayuan17/project2.git\",\n  \"Fighting Calypso Cookies\",\n  \"alex y, keythe, jimmia, heidi\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {
        "name": "AssertionError",
        "actual": "false",
        "expected": "true",
        "operator": "==",
        "message": "Fighting Calypso Cookies deployment is failed at https://warm-atoll-35828.herokuapp.com/",
        "generatedMessage": false,
        "estack": "AssertionError: Fighting Calypso Cookies deployment is failed at https://warm-atoll-35828.herokuapp.com/\n    at Nightmare.goto.viewport.screenshot.evaluate.then.title (project2.js:114:22)\n    at process._tickCallback (internal/process/next_tick.js:103:7)",
        "diff": "- false\n+ true\n"
      },
      "isRoot": false,
      "uuid": "10a2243a-0929-48c6-b07b-416caf194b53",
      "parentUUID": "aeeab8cd-2918-4720-8583-06c3cf1d9096",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "White Hot Snow: john b, brent, igho, monica should render an app home page",
      "timedOut": false,
      "duration": 13101,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "context": "[\n  \"https://lit-everglades-62722.herokuapp.com/\",\n  \"assets/07-White-Hot-Snow_2017-05-16_17.png\",\n  \"https://github.com/Afroid/project2\",\n  \"White Hot Snow\",\n  \"john b, brent, igho, monica\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {
        "name": "AssertionError",
        "actual": "false",
        "expected": "true",
        "operator": "==",
        "message": "White Hot Snow deployment is failed at https://lit-everglades-62722.herokuapp.com/",
        "generatedMessage": false,
        "estack": "AssertionError: White Hot Snow deployment is failed at https://lit-everglades-62722.herokuapp.com/\n    at Nightmare.goto.viewport.screenshot.evaluate.then.title (project2.js:114:22)\n    at process._tickCallback (internal/process/next_tick.js:103:7)",
        "diff": "- false\n+ true\n"
      },
      "isRoot": false,
      "uuid": "325bd5ee-b250-4ce4-9153-1ea3ac0ec734",
      "parentUUID": "c02c5c0f-5044-4c96-81d3-b8d16f75bafd",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should render an app home page",
      "fullTitle": "Bits & Giggles: david, karlos, alex d, zach should render an app home page",
      "timedOut": false,
      "duration": 1022,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "context": "[\n  \"https://quiet-sea-77471.herokuapp.com\",\n  \"assets/08-Bits-&-Giggles_2017-05-16_17.png\",\n  \"https://github.com/ddye4265/bitsandgiggles\",\n  \"Bits & Giggles\",\n  \"david, karlos, alex d, zach\"\n]",
      "code": "if (app) {\n  const imagePath = path.join('assets', `${('00' + index).slice(-2)}-${team.replace(/ /ig, '-')}_${moment().format('YYYY-MM-DD_HH')}.png`);\n  // context can be a url and the report will create a link\n  addContext(this, app);\n  // context can be an image url and the report will show it inline\n  addContext(this, imagePath);\n  addContext(this, repo);\n  addContext(this, team);\n  addContext(this, members);\n  Nightmare({ show : false })\n    .goto(app)\n    .viewport(1024, 768)\n    .screenshot(path.join(__dirname, 'public', 'reports', 'healthcheck', imagePath))\n    .evaluate(() => document.title)\n    .then(title => {\n      const failed = ['Heroku | Welcome to your new app!', 'Application Error', 'Error'].includes(title);\n      assert.ok(!failed, `${team} deployment is failed at ${app}`);\n    })\n    .catch(err => err)\n    .then(done)\n} else {\n  assert.ok(app, `${team} has not provided an app deployment url`);\n}",
      "err": {
        "name": "AssertionError",
        "actual": "false",
        "expected": "true",
        "operator": "==",
        "message": "Bits & Giggles deployment is failed at https://quiet-sea-77471.herokuapp.com",
        "generatedMessage": false,
        "estack": "AssertionError: Bits & Giggles deployment is failed at https://quiet-sea-77471.herokuapp.com\n    at Nightmare.goto.viewport.screenshot.evaluate.then.title (project2.js:114:22)\n    at process._tickCallback (internal/process/next_tick.js:103:7)",
        "diff": "- false\n+ true\n"
      },
      "isRoot": false,
      "uuid": "dbd8ae7f-5ecc-405a-a9cc-63187d8188c1",
      "parentUUID": "6aa91126-e46a-4e03-b918-9c270d4e650c",
      "isHook": false,
      "skipped": false
    }
  ],
  "copyrightYear": 2017
}